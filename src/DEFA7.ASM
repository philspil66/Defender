*
* PRAYAH 1:     P L O G L A M    S T A H T
*
	ORG	$D000
	FCB	$4A	CKBYT CHECKSUM(ACTUAL)
	SETDP	RAM!>8
*
*SLEEP
*A=SLEEP TIME X 16MSEC
*X=WAKEUP ADDR
*
SLEEP	LDU	CRPROC
	STA	PTIME,U
	STX	PADDR,U
	JMP	DISP2
*
*SUICIDE
*
SUCIDE	LDX	CRPROC
	BSR	KILL
	LEAU	,X
	JMP	DISP2	GET NEW CRPROC
*
*KILL OBJECT PROCESS
*
KILLOP	LDX	OBJID,X
*
*KILL
*X=PROCESS TO KILL
*
KILL	PSHS	D,U
	LDU	#ACTIVE
KILP1	CMPX	,U
	BNE	KILPLP	NO MATCH
	LDD	,X	GET FORWARD LINK OF DEAD GUY
	STD	,U
	LDA	PCOD,X
	BEQ	KILP2	REG PROCESS
	LDD	SPFREE	SUPER PROCESS
	STX	SPFREE
	BRA	KILP3
KILP2	LDD	FREE
	STX	FREE	PUT HIM AT HEAD OF FREE
KILP3	STD	,X
	LEAX	,U	SAVE CRPROC FOR SUICIDE
	PULS	D,U,PC
KILPLP	LDU	,U
	BNE	KILP1
ERROR	NOP		ERROR TRAP
	JMP	SINIT
*
*MAKE A SUPER PROCESS
*X = START ADDR
*A = USER TYPE
*X =RETURNED WITH DATA BLOCK POINTER
MSPROC	PSHS	A,Y,U
	LDU	SPFREE
	BNE	*+3
	JSR	ERROR	ERROR TRAP
	LDY	,U
	STY	SPFREE
	LDA	#1
	STA	PCOD,U
	LDA	,S	GET TYPE
	BRA	MKP1
*
*MAKE A PROCESS
*X=START ADDR
*A=USER TYPE
*X RETURNED WITH DATA BLOCK PTR
*
MKPROC	PSHS	A,Y,U
	LDU	FREE
	BNE	MKP0	NOT OUT
	JSR	ERROR
MKP0	LDY	,U
	STY	FREE	DELINK
	CLR	PCOD,U
MKP1	STX	PADDR,U
	STA	PTYPE,U
	LDA	#1
	STA	PTIME,U	INIT TIME
	LDX	[CRPROC]
	STU	[CRPROC]
	STX	,U	LINK IN
	LEAX	,U	SETUP X AS DATA BLOCK
	PULS	A,Y,U,PC
*
*GENOCIDE : KILL EVERYONE EXCEPT FOR YOURSELF
*
GNCIDE	PSHS	A,X
	LDX	#ACTIVE
GNC1	LDX	,X
	BEQ	GNCX
	CMPX	CRPROC
	BEQ	GNC1	DO NOT KILL SELF
	LDA	PTYPE,X	DONT KILL COINS
	CMPA	#CTYPE
	BEQ	GNC1
	BSR	KILL
	BRA	GNC1
GNCX	PULS	A,X,PC
*
*INIT OBJECT
*BSR GETOB
*[RET]>OPICT
*[RET+]>OCVECT
*[RET+2]>OBJCOL
*U>OBJID
*RET<RET+6
*
OBINIT	BSR	GETOB
	PSHS	U,D,Y
	STU	OBJID,X
	LDU	6,S
	PULU	D,Y
	STD	OPICT,X
	STY	OCVECT,X
	PULU	D
	STD	OBJCOL,X
	STU	6,S
	PULS	U,D,Y,PC
*
*GET OBJECT LIST CELL IN X
*OBJX=0
*CALLER MUST >STX OPTR< AFTER INITIALIZATION OF PARAMETERS
GETOB	PSHS	U,D
	LDX	OFREE
	BNE	GETOB1	NOT OUT
	JSR	ERROR
GETOB1	LDD	OLINK,X
	STD	OFREE
	LDD	OPTR
	STD	OLINK,X
	CLRD
	STD	OBJX,X
	STA	OTYP,X	CLEAR TYPE
	PULS	U,D,PC
*
*KILL OBJECT CELL IN X
*
KILLOB	PSHS	X,Y,U
	LDU	#OPTR
KILO1	CMPX	,U	MATCH?
	BNE	KILOLP
KILO2	LDY	[,U]	UNLINK
	STY	,U
	LDY	OFREE
	STX	OFREE
	STY	,X
	PULS	X,Y,U,PC
KILOLP	LDU	,U
	BNE	KILO1	CONTINUE
	LDU	#IPTR	SEARCH INACTIVE LIST
KILO3	CMPX	,U
	BEQ	KILO2
	LDU	,U
	BNE	KILO3
	JSR	ERROR
*
*KILL A SHELL
*X=SHELL
*
KILSHL	PSHS	X,Y,U
	LDU	#SPTR
	BRA	KILO3
*
*OUTPUT 2X8
*
ON28	PSHS	X,DP
	STS	TEMP48
	BCC	ON280
	LEAY	2,Y
ON280	LDS	OBJP0,Y
	ADDB	#8
	TFR	D,U
	BRA	ON281
*
*OFF2X8
*
OFF28	PSHS	X,DP
	ADDB	#8
	TFR	D,U
	LDD	#0
	LDX	#0
	LEAY	,X
	TFR	A,DP
	ANDCC	#0
	BRA	OFF281
*
*OFF 5X8
*
OFF58	PSHS	X,DP
	ADDB	#8
	TFR	D,U
	LDD	#0
	LDX	#0
	LEAY	,X
	TFR	A,DP
	ANDCC	#0
	PSHU	X,Y,D,DP,CC
	LEAU	264,U
	BRA	OFF481
*
*OUTPUT 4X8
*STORED COL1-COLN
*CALLED BY IRQ ONLY
ON48	PSHS	X,DP
	STS	TEMP48	SAVE STACK
	BCC	ON480
	LEAY	2,Y	ODD PHASE
ON480	LDS	OBJP0,Y
	ADDB	#8
	TFR	D,U
ON481	PULS	D,X,Y,DP,CC
	PSHU	D,X,Y,DP,CC
	LEAU	264,U
	PULS	D,X,Y,DP,CC
	PSHU	D,X,Y,DP,CC
	LEAU	264,U
ON281	PULS	D,X,Y,DP,CC
	PSHU	D,X,Y,DP,CC
	LEAU	264,U
	PULS	D,X,Y,DP,CC
	PSHU	D,X,Y,DP,CC
	LDS	>TEMP48	STACK RESTORE, EXTENDED
	PULS	X,DP,PC
*
*ERASE 4X8
*COLUMNAR OBJECTS 8 LONG
*
*OFF 4X8
*
OFF48	PSHS	X,DP
	ADDB	#8
	TFR	D,U
	LDD	#0
	LDX	#0
	LEAY	,X
	TFR	A,DP
	ANDCC	#0
OFF481	PSHU	X,Y,D,DP,CC
	LEAU	264,U
	PSHU	X,Y,D,DP,CC
	LEAU	264,U
OFF281	PSHU	X,Y,D,DP,CC
	LEAU	264,U
	PSHU	X,Y,D,DP,CC
	PULS	X,DP,PC
*
*ON 5X8
*
ON58	PSHS	X,DP
	STS	TEMP48
	BCC	ON580
	LEAY	2,Y
ON580	LDS	OBJP0,Y
	ADDB	#8
	TFR	D,U
	PULS	D,X,Y,DP,CC
	PSHU	D,X,Y,DP,CC
	LEAU	264,U
	BRA	ON481
*
*ON 3X4 OBJECT
*
ON34	BCC	ON340
	LEAY	2,Y	ODD GUY
ON340	LDY	OBJP0,Y
	TFR	D,U
ON341	LDD	,Y
	STD	,U
	LDD	2,Y
	STD	2,U
	LDD	4,Y
	STD	$100,U
	LDD	6,Y
	STD	$102,U
	LDD	8,Y
	STD	$200,U
	LDD	10,Y
	STD	$202,U
	RTS
*
*OFF 3X4 OBJECT
*
OFF34	TFR	D,U
	LDD	#0
OFF341	STD	,U
	STD	2,U
	STD	$100,U
	STD	$102,U
	STD	$200,U
	STD	$202,U
	RTS
*
*ON 2X3 OBJECT
*
ON23	BCC	ON230
	LEAY	2,Y
ON230	LDY	OBJP0,Y
	TFR	D,U
	LDD	,Y
	STD	,U
	LDD	2,Y
	STA	2,U
	STB	$100,U
	LDD	4,Y
	STD	$101,U
	RTS
*
*OFF 2X3 OBJECT
*
OFF23	TFR	D,U
	LDD	#0
	STD	,U
	STA	2,U
	STD	$100,U
	STA	$102,U
	RTS
*
*OUTPUT 6X4
*IRQ CALLS ONLY
*
ON64	PSHS	X,U,D
	STS	TEMP48
	BCC	ON640
	LEAY	2,Y
ON640	LDS	OBJP0,Y
	ADDB	#4
	TFR	D,U
ON641	PULS	X,D
	PSHU	X,D
	LEAU	260,U
	PULS	X,D
	PSHU	X,D
	LEAU	260,U
	PULS	X,D
	PSHU	X,D
	LEAU	260,U
	PULS	X,D
	PSHU	X,D
	LEAU	260,U
	PULS	X,D
	PSHU	X,D
	LEAU	260,U
	PULS	X,D
	PSHU	X,D
	LDS	TEMP48
	PULS	X,U,D,PC
*
*OFF 6X4
*
OFF64	PSHS	X,U,D
	ADDB	#4
	TFR	D,U
	LDD	#0
OFF641	LDX	#0
	PSHU	X,D
	LEAU	260,U
	PSHU	X,D
	LEAU	260,U
	PSHU	X,D
	LEAU	260,U
	PSHU	X,D
	LEAU	260,U
	PSHU	X,D
	LEAU	260,U
	PSHU	X,D
	PULS	X,U,D,PC
*
*OUTPUT 8X6
*
ON86	PSHS	X
	STS	TEMP48
	BCC	ON860
	LEAY	2,Y
ON860	LDS	OBJP0,Y
	ADDB	#6
	TFR	D,U
	PULS	X,D,Y
	PSHU	X,D,Y
	LEAU	262,U
	PULS	X,D,Y
	PSHU	X,D,Y
	LEAU	262,U
ON661	PULS	X,D,Y
	PSHU	X,D,Y
	LEAU	262,U
ON561	PULS	X,D,Y
	PSHU	X,D,Y
	LEAU	262,U
	PULS	X,D,Y
	PSHU	X,D,Y
	LEAU	262,U
	PULS	X,D,Y
	PSHU	X,D,Y
	LEAU	262,U
	PULS	X,D,Y
	PSHU	X,D,Y
	LEAU	262,U
	PULS	X,D,Y
	PSHU	X,D,Y
	LDS	TEMP48
	PULS	X,PC
*
*OFF 8X6
*
OFF86	PSHS	X
	ADDB	#6
	TFR	D,U
	LDD	#0
	LDX	#0
	LEAY	,X
	PSHU	X,D,Y
	LEAU	262,U
	PSHU	X,D,Y
	LEAU	262,U
OFF661	PSHU	X,D,Y
	LEAU	262,U
OFF561	PSHU	X,D,Y
	LEAU	262,U
	PSHU	X,D,Y
	LEAU	262,U
	PSHU	X,D,Y
	LEAU	262,U
	PSHU	X,D,Y
	LEAU	262,U
	PSHU	X,D,Y
	PULS	X,PC
*
*OUTPUT 5X6
*
ON56	PSHS	X
	STS	TEMP48
	BCC	ON560
	LEAY	2,Y
ON560	LDS	OBJP0,Y
	ADDB	#6
	TFR	D,U
	BRA	ON561
*
*OFF 5X6
*
OFF56	PSHS	X
	ADDB	#6
	TFR	D,U
	LDD	#0
	LDX	#0
	LEAY	,X
	BRA	OFF561
*
*OUTPUT 6X6
*
ON66	PSHS	X
	STS	TEMP48
	BCC	ON660
	LEAY	2,Y
ON660	LDS	OBJP0,Y
	ADDB	#6
	TFR	D,U
	JMP	ON661
*
*OFF 6X6
*
OFF66	PSHS	X
	ADDB	#6
	TFR	D,U
	LDD	#0
	LDX	#0
	LEAY	,X
	BRA	OFF661
*
*SCORE ROUTINE
*A=0-7EXP,B=0-99
*
SCORE	PSHS	A,B,X,U,Y
	ORCC	#1	SET CARRY
	ROL	SCRFLG	SET FLAG
	LSRA
	PSHS	A
	LDA	#0
	BCC	SCR1
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
SCR1	JSR	PLINDX
	STD	XTEMP
	LDB	#3
	SUBB	,S+
	LDA	B,X
	ADDA	XTEMP+1
	DAA
	STA	B,X
	DECB
	BMI	SCRX
SCR2	LDA	B,X
	ADCA	XTEMP
	DAA
	STA	B,X
	LDA	#0
	STA	XTEMP
	DECB
	BPL	SCR2
*CHECK REPLAY
SCRX	LDD	REPLA	REPLAYS AVAILABLE
	BEQ	SCRXX	NO
	LEAX	1,X
	LEAY	3,X
	BSR	RCHK
	BLO	SCRXX	NO
	LDA	1,Y	GET NEXT LEVEL
	ADDA	REPLA+1
	DAA
	STA	1,Y
	LDA	,Y
	ADCA	REPLA
	DAA
	STA	,Y
	INC	PLAS-1,X
	INC	PSBC-1,X
	JSR	LDISP	REWARD
	JSR	SBDISP
	LDD	#RPSND
	JSR	SNDLD
	LDB	#5
	JSR	AUDIT
SCRXX	BSR	SCRTRN
	PULS	A,B,X,U,Y
	RTS
*
*REPLAY CHECK
*X=PLAYER SCORE MSB 6 DIGITS
*Y=REPLAY LEVEL MSB 6 DIGITS
*RETURNS CC FOR PSCOR-RLEVL
RCHK	PSHS	D
	LDD	,X
	CMPD	,Y
	BNE	RCHX
	LDA	2,X
	CMPA	2,Y
RCHX	PULS	D,PC
*
*SCORE TRANSFER
*
SCRTRN	LDA	CURPLR
SCRTR0	PSHS	A
	DECA
	BNE	SCT1
	LDX	#P1DISP
	LDU	#.P1SCR+1
	BRA	SCT2
SCT1	LDX	#P2DISP
	LDU	#.P2SCR+1
SCT2	CLR	XTEMP	BLANKING FLAG
	LDB	#6
	LDA	MAPCR
	PSHS	A
	LDA	#2
	STA	MAPCR
	STA	MAPC
SCTLP	LDA	,U+	GET
	LDY	N0V	GET CHAR ADDR
	BITB	#1	PHASE
	BNE	SCT3
	LEAU	-1,U
	LSRA
	LSRA
	LSRA
	LSRA
SCT3	ANDA	#$F
	BNE	SCT3A
	CMPB	#2	LAST 2
	BLS	SCT3A
	TST	XTEMP	BLANKING?
	BNE	SCT3A
	EXG	X,D
	JSR	COFF
	BRA	SCT40
SCT3A	INC	XTEMP
	ASLA
	ASLA
	LEAY	A,Y
	EXG	X,D
	JSR	CWRIT	ON DIGIT PICTURE
SCT40	EXG	X,D
SCT4	LEAX	DIGLTH,X
	DECB
	BNE	SCTLP	DO THE REST
	PULS	A
	STA	MAPCR
	STA	MAPC
	PULS	A,PC
*
*HI SCORE RESET SWITCH
*
HSRES	LDA	STATUS
	BPL	SLAMX
	JSR	MAPCH3
	JSR	RHSTD$	RESET TODAYS HIGH SCORES
	INC	HSRFLG	SET HIGH SCORE RESET FLAG
	BRA	SLAMX
*
*ADVANCE SWITCH
*
ADVSW	LDA	STATUS
	BPL	SLAMX
	ORCC	#$90	SETUP FLAGS,+KILL INTS
	CLR	MAPC
	LDA	#4
	STA	PIA1+1
	LDA	PIA1
	JSR	MAPCH3
	LDA	PIA01	AUTO OR MAN?
	LSRA
	BCS	ADVSW1
	JMP	VCROM0	MAN-DIAGNOSTICS
ADVSW1	JMP	VUDITG	AUTO-AUDITS
SLAMX	JMP	SUCIDE
*
*COIN SWITCHES
*LEFT
LCOIN	LDX	#LCCNT
	LDB	#LCOINV!.$FF
	BRA	COIN
*RIGHT
RCOIN	LDX	#RCCNT
	LDB	#RCOINV!.$FF
	BRA	COIN
*CENTER
CCOIN	LDX	#CCCNT
	LDB	#CCOINV!.$FF
*
*COIN ROUTINE
*X=DEBOUNCE COUNTER
*B=ROUTINE
COIN	LDA	SLMCNT
	BNE	SLAMX
	LDA	,X
	BNE	SLAMX
	LDA	#$16	DEBOUNCE TIME
	STA	,X
	LDA	#LCOINV!>8 ROUTINE ADDR
	STD	PD2,U
	NAP	10,CN1
CN1	LDA	SLMCNT
	BNE	SLAMX	SLAM, DITCH
	LDD	#CNSND
	JSR	SNDLD
	JSR	MAPCH3
	JSR	[PD2,U]
	BRA	SLAMX
*
*SOUND TABLE
*SNDPRI,N*(REPCNT,SNDTMR,SND#) N>=1
*SNDTMR IN 16 MSEC
*SNDPRI : HI=HI,INTERRUPTABLE BY EQUALS
*END: REPCNT=0
*
CNSND	FCB	$FF,$01,$18,$19,0 COIN SOUND
RPSND	FCB	$FF,$01,$20,$1E,0 FREE SHIP
PDSND	FCB	$F0,$02,$08,$11,$01,$20,$17,0 PLAYER DEATH
ST1SND	FCB	$F0,$01,$40,$0A,0 START 1
ST2SND	FCB	$F0,$01,$10,$0B,0 START2
TBSND	FCB	$E8,$01,$04,$14,$02,$06,$11
	FCB	$02,$0A,$17,0 TERRAIN BLOW
SBSND	FCB	$E8,$06,$04,$11,$01,$10,$17,00 SMART BOMB
ACSND	FCB	$E0,$03,$0A,$08,0 ASTRO CATCH
ALSND	FCB	$E0,$01,$18,$1F,0 ASTRO LAND
AHSND	FCB	$E0,$01,$18,$11,0 ASTRO HIT
ASCSND	FCB	$D8,$01,$10,$1A,0 ASTRO SCREAM
APSND	FCB	$D0,$01,$30,$15,0 APPEAR SOUND
PRHSND	FCB	$D0,$01,$10,$05,0 PROBE HIT
SCHSND	FCB	$D0,$01,$08,$17,0 SCHITZ HIT
UFHSND	FCB	$D0,$01,$08,$07,0 UFO HIT
TIHSND	FCB	$D0,$01,$0A,$01,0 TIE HIT
LHSND	FCB	$D0,$01,$0A,$06,0 LANDER HIT
LPKSND	FCB	$D0,$01,$10,$0B,0 LANDER PICK UP
LSKSND	FCB	$C8,$0A,$01,$0E,0 LANDER SUCK
SWHSND	FCB	$C0,$01,$08,$07,0 SWARM HIT
LASSND	FCB	$C0,$01,$30,$14,0 LASER
LGSND	FCB	$C0,$01,$20,$18,0 LANDER GRAB
LSHSND	FCB	$C0,$01,$08,$03,0 LANDER SHOOT
SSHSND	FCB	$C0,$01,$30,$09,0 SCHITZO SHOOT
USHSND	FCB	$C0,$01,$08,$03,0 UFO SHOOT
SWSSND	FCB	$C0,$01,$18,$0C,0 SWARM SHOOT
*
*SOUND OUTPUT
*B=SND TO MAKE
*
SNDOUT	PSHS	A,B,CC
	ORCC	#$FF
	CLR	MAPC
	LDA	#$3F
	STA	SOUND
	COMB
	ANDB	#$3F	DONT TURN ON LEDS
	STB	SOUND
	PULS	A,B,CC,PC
*
*SOUND LOADER
*D=ADDR OF SOUND
*
SNDLD	PSHS	X,D,CC
	CLR	THFLG	RESET THRUST
	TFR	D,X
	LDA	,X
	CMPA	SNDPRI
	BLO	SNDLDX	PRIORITY NOT HI ENOUGH
	STA	SNDPRI
	LEAX	-2,X
	ORCC	#$10	SEI
	STX	SNDX
	LDD	#$0101
	STD	SNDTMR	INIT TIMER,REPCNT
SNDLDX	PULS	X,D,CC,PC
*
*SOUND SEQUENCER
*
SNDSEQ	LDA	SNDTMR
	BEQ	SNDS00
	DEC	SNDTMR
	BNE	SNDSX
	LDX	SNDX
	DEC	SNDREP
	BNE	SNDS1
	LEAX	3,X	GET NEXT
	STX	SNDX
	LDA	,X
	BNE	SNDS0	SOUND OVER?
	STA	SNDPRI	YIP
SNDS00	LDA	PIA21	THRUST ON?
	BITA	#2
	BNE	SNDS01	YES
	LDA	THFLG	NO,ACTIVE?
	BEQ	SNDSX	NO
	CLR	THFLG	YES,TURN IT OFF
	LDB	#$0F
	BRA	SNDSX1
SNDS01	LDA	THFLG	THRUST ALREADY ON?
	BNE	SNDSX	YIP...
	LDA	STATUS
	BITA	#$98	PLAYER ALIVE?
	BNE	SNDSX	NO
	LDB	#$16	NO HIT IT
	STB	THFLG
	BRA	SNDSX1
SNDS0	STA	SNDREP
SNDS1	LDD	1,X
	STA	SNDTMR
SNDSX1	BSR	SNDOUT
SNDSX	EQU	*
*
*SWITCH SCAN
*TRIGGER=LAST 2 ZERO, NOW 1 GAME SWITCH
*TRIGGER=LAST 1 ZERO, NOW 2 1'S COINS
SSCAN	LDA	PIA0+1
	BITA	#$40
	BEQ	SSC00
	LDA	#60
	STA	SLMCNT
*COIN + SLAM DEBOUNCERS
SSC00	LDA	SLMCNT
	BEQ	SSC0A
	DEC	SLMCNT
SSC0A	LDA	LCCNT
	BEQ	SSC0B
	DEC	LCCNT
SSC0B	LDA	CCCNT
	BEQ	SSC0C
	DEC	CCCNT
SSC0C	LDA	RCCNT
	BEQ	SSC0
	DEC	RCCNT
SSC0	LDA	PIA21
	ORA	PIA22
	COMA
	LDB	PIA21
	STB	PIA22
	LDB	PIA2
	STB	PIA21
	LDB	PIA3
	STB	PIA31
	ANDA	PIA21
	BEQ	CSCAN
	LDU	#SWTAB-4
SWITCH	CLRB
SW0	ADDB	#4
	LSRA
	BCC	SW0
	LEAU	B,U
	PULU	D,X
	LDU	SWPROC
	BNE	SWTCH2
	STD	SWPROC
	STX	SWPROC+2
	RTS
SWTCH2	STD	SWPROC+4
	STX	SWPROC+6
SWTCHX	RTS
*
*SCAN COIN SWITCHES
*
CSCAN	LDA	PIA01
	ORA	PIA02
	COMA
	LDB	PIA01
	STB	PIA02
	LDB	PIA0
	ANDB	#$3F
	STB	PIA01
	BITA	PIA01
	BEQ	CSCX	NO HIT
	LDX	#120
CSC1	LEAX	-1,X	1 MSEC DELAY
	BNE	CSC1
	LDB	PIA0	DOUBLE CHECK
	ANDB	PIA01
	STB	PIA01
	ANDA	PIA01
	BEQ	CSCX	NOBODY THERE
	LDU	#SWTAB1-4 HANDLE IT
	BSR	SWITCH
CSCX	RTS
*
*DISPLAY LASERS
*
LDISP	PSHS	D,X,Y,U	PLAYER 1
	LDX	#P1LAS
	LDA	.P1LAS
	BSR	LDSP
	LDA	PLRCNT
	DECA
	BEQ	LDPX
	LDX	#P2LAS
	LDA	.P2LAS
	BSR	LDSP
LDPX	PULS	D,X,Y,U,PC
LDSP	CMPA	#5	MAX DISPLAY
	BLS	LDSP1
	LDA	#5
LDSP1	PSHS	A
	LDD	#$2006
	JSR	BLKCLR
	LDA	,S
	BEQ	LDSPX
	LDY	#PLAMIN	MINI SHIP
	TFR	X,D
LDSP2	JSR	CWRIT
	ADDA	#$06
	DEC	,S
	BNE	LDSP2
LDSPX	PULS	A,PC
*
*DISPLAY TOP OF SCREEN
*
TDISP	PSHS	D,X,Y,U
	LDD	#$4020
	LDX	#SCANER
	JSR	BLKCLR
	BSR	BORDER
	BSR	LDISP
	BSR	SBDISP
	LDA	PLRCNT
TD1	JSR	SCRTR0
	DECA
	BNE	TD1
	PULS	D,X,Y,U,PC
*
*SMART BOMB DISPLAY
*
SBDISP	PSHS	X,Y,D,U
	LDX	#P1SBD
	LDA	.P1SBC
	BSR	SBDSP
	LDA	PLRCNT
	DECA
	BEQ	SBDX
	LDX	#P2SBD
	LDA	.P2SBC
	BSR	SBDSP
SBDX	PULS	X,Y,D,U,PC
SBDSP	CMPA	#3
	BLS	SBDSP1
	LDA	#3
SBDSP1	PSHS	A
	LDD	#$030B
	JSR	BLKCLR
	LDA	,S
	BEQ	SBDSPX
	LDY	#SBPIC
	TFR	X,D
SBDSP2	JSR	CWRIT
	ADDB	#4
	DEC	,S
	BNE	SBDSP2
SBDSPX	PULS	A,PC
*
*DRAW BORDER
*
BORDER	LDD	#$5555
	LDX	#SCANH+$20
BORDLP	STD	,X	DRAW BOTTOM LINE
	LEAX	$100,X
	CMPX	#$9C00
	BLO	BORDLP
	LDX	#SCANER-$100
BORD1	STD	$4100,X	L,R SCANNER BOUNDARIES
	STD	,X++
	CMPX	#SCANER-$100+$20
	BNE	BORD1
	LDX	#SCANER-$101
BORD2	STA	,X	TOP SCANNER BOUNDARIES
	LEAX	$100,X
	CMPX	#SCANER-1+$4100
	BNE	BORD2
	LDX	#$4C00+SCANH-1 SCANNER SCREEN MARKER
	LDD	#$9999
BORD3	STD	,X
	STD	$21,X
	LEAX	$100,X
	CMPX	#$5400+SCANH-1
	BNE	BORD3
	RTS
*
*GET PLAYER STATE INDEX
*
PLINDX	PSHS	A
	LDA	CURPLR
PLND1	LDX	#PLDATA
	DECA
	BEQ	PLINX
	LDX	#.P2SCR
PLINX	PULS	A,PC
PLDX	PSHS	A
	BRA	PLND1
*
*RANDOM NUMBER GENERATOR
*
RAND	PSHS	B
	LDB	SEED
	LDA	#3
	MUL
	ADDB	#17
	LDA	LSEED
	LSRA
	LSRA
	LSRA
	EORA	LSEED
	LSRA
	ROR	HSEED
	ROR	LSEED
	ADDB	LSEED
	ADCB	HSEED
	STB	SEED
	LDA	SEED
	PULS	B,PC
*
*INITIIALIZE
*
*PIA INIT TAB
PIATAB	FCB	$C0,$FF,$00,$00 DDR0-3
	FCB	$14,$05,$34,$3E CR0-3
*
SINIT	ORCC	#$FF	NO INTERRUPTS YET PLEASE
	LDS	#HSTK	ONLY SETUP HARDWARE STACK
	LDA	#RAM!>8	SETUP DIRECT PAGE
	TFR	A,DP
	CLR	MAPC
* PIAS INITIALIZED HERE.
	LDB	#4
	LDU	#PIA0
	LDX	#PIATAB
INIT1	CLR	1,U
	LDA	,X+
	STA	,U++
	LDA	3,X
	STA	-1,U
	DECB
	BNE	INIT1
	JSR	SCRCLR	CLEAR THE SCREEN
*CLEAR RAM STORAGE
	LDX	#$9C00
INIT10	CLR	,X+
	LDB	#WDATA
	STB	WDOG
	CMPX	#HSTK+1
	BNE	INIT10
	CLR	PIA0	OFF LEDS
	CLR	PIA1	OFF LEDS
	LDX	#CREDST	GET CREDITS IN CMOS
	JSR	RCMOSB
	TFR	B,A
	CMPA	#$20	TOO HI??
	BHI	INIT11
	ANDA	#$F
	CMPA	#9	NON BCD LSD???
	BLS	INIT12
INIT11	CLRB
INIT12	STB	CREDIT	INTO RAM
	LDD	#$A55A
	STD	HSEED
	LDD	#$FF70
	STD	XXX1
	CLR	XXX3
	LDB	#$FF
	STD	PIA01	COINS STUCK
	JSR	P1SW	UPRIGHT SCREEN
	JSR	MAPCH3
	JSR	RHSTD$	SETUP TODAYS GREATS
	BSR	PINIT	INIT PROCESSES
	BSR	INIT20	MISC ROUTINES
	JSR	INIT	INIT TEXT
	NEWP	ATTR,ATYPE
	COM	STATUS	FF---STATUS
	ANDCC	#$00	ENABLE IRQ,FIRQ
	JMP	EXEC
*
*MISC INIT ROUTINES
*
INIT20	BSR	CRINIT
	JSR	FISS	INIT LASR EXHAUST TABLE
	JSR	STINIT	INIT STARS
	BSR	OINIT	INIT OBJECT LIST
	JSR	FBINIT	FIRE BALL TABLE
	JMP	THINIT	INIT THRUST
*
*INITIALIZE PROCESS DATA STRUCTURE
*
PINIT	PSHS	X,D
	CLRD
	LDX	#PTAB
	STX	FREE
PINIT1	LEAX	PSIZE,X
	STX	-PSIZE,X
	CMPX	#TABEND-PSIZE
	BNE	PINIT1
	STD	,X
	STD	ACTIVE
*SUPER PROCESSES
	LDX	#SPTAB
	STX	SPFREE
PINIT2	LEAX	SPSIZE,X
	STX	-SPSIZE,X
	CMPX	#SPTEND-SPSIZE
	BNE	PINIT2
	STD	,X
	LDX	#ACTIVE
	STX	CRPROC
	PULS	X,D,PC
*INITIALIZE COLOR RAM
CRINIT	LDX	#CRTAB
	LDU	#PCRAM
	LDB	#16
INITC	LDA	,X+
	STA	,U+
	DECB
	BNE	INITC
	RTS
*
*INITIALIZE OBJECT LIST
*
OINIT	PSHS	CC,X,D
	ORCC	#$FF	OFF INTERRUPTS
	LDX	#OLIST
	STX	OFREE
OINIT1	LEAX	OSIZE,X
	STX	-OSIZE,X
	CMPX	#OLEND-OSIZE
	BNE	OINIT1
	CLRD
	STD	,X	LAST LINK 0
	STD	IPTR	INACTIVE LIST
	STD	OPTR
	STD	SPTR
	PULS	CC,X,D,PC
*
*ATTRACT MODE
*
ATTR	JSR	MAPCH1
	JMP	ATTRV
*
*CHECK FREE PLAY
*
FPLAY	LDX	#FREEPL
	JSR	RCMOSA
	DECA
	BNE	FPLX	GOT TO PAY
	LDA	#2
	STA	CREDIT
FPLX	RTS
*
*ONE PLAYER START
*
ST1	LDA	STATUS
	BPL	ST1X
	BSR	FPLAY
	LDA	CREDIT
	BEQ	ST1X
	LDD	#ST1SND
ST09	JSR	SNDLD
	BSR	START
ST1X	DIE
*
*TWO PLAYER START
*
ST2	LDA	STATUS
	BPL	ST1X
	BSR	FPLAY
	LDA	CREDIT
	CMPA	#2	NO CREDY NO GAMEY POOH
	BLO	ST1X
	BSR	START
	LDD	#ST2SND
	BRA	ST09
*
*START GAME
*
START	CLR	CUNITS	PATCH ONE
	NOP
	LDA	PWRFLG	WILLI PAGE CHECK
	BEQ	STARTX
	LDA	STATUS
	BPL	START2
	JSR	GNCIDE	KILL ALL
	JSR	SCRCLR	CLEAN SCREEN
	LDA	#$7F
	STA	STATUS
	LDA	#1
	STA	CURPLR
	STA	PDFLG	DISPLAY PROMPT
	CLR	PLRCNT
	LDX	#PLDATA
START1	CLR	,X+
	CMPX	#PLDEND
	BNE	START1
	LDX	#NSHIP
	JSR	RCMOSA
	ANDA	#$F
	STA	.P1LAS
	LDB	#10
	STD	.P1SBC	10-->.P1TRG ALSO PATCH 2
	CLR	BUNITS
	NOP
	LDX	#PLDATA
	JSR	GETWV
	LDX	#REPLAY
	JSR	RCMOSD
	STD	REPLA
	STD	.P1RP
	CLR	.P1RP+2
	LDX	#PLDATA
STTRAN	LDA	,X+	COPY INTO SECOND PLAYER
	STA	PLDLEN-1,X
	CMPX	#.P1END
	BNE	STTRAN
	NEWP	PLSTRT,STYPE START PLAYER GOING
START2	INC	PLRCNT
	LDA	CREDIT
	ADDA	#$99
	DAA
	STA	CREDIT
	LDX	#CREDST	BACKUP CREDITS
	JSR	WCMOSA
	LDA	PLRCNT	ELIMINATE GLITCH
	DECA
	BEQ	STARTX
	JSR	TDISP	DISPLAY SCORE+LASERS
DRTS	EQU	*
STARTX	RTS
*
*SCREEN SWITCHING
*
P1SW	PSHS	A,X	SAVE REGISTERS
	LDA	MAPCR	SAVE MAP
	PSHS	A
P1SW0	LDX	#IRQ
	LDD	#$383C
	BRA	PSW1
P2SW	PSHS	A,X	SAVE REGISTERS
	LDA	MAPCR	SAVE MAP
	PSHS	A
	CLRA
	JSR	MAPCHG
	LDA	PIA3	COCKTAIL?
	BPL	P1SW0	NO
	LDX	#IRQB	SWITCH UPSIDE DOWN GUYS
	LDD	#$3934
PSW1	STX	IRQHK+1	IRQ SELECT
	CLR	MAPCR
	CLR	MAPC
	STB	PIA3+1
	STA	WDOG
	LDA	#$7E
	STA	IRQHK
	PULS	A
	STA	MAPCR	RESTORE MAP
	STA	MAPC
	PULS	A,X,PC
*
*PLAYER START PROCESS
*
PLSTRT	LDB	#7	HIT SHIP COUNTER
	JSR	AUDIT
PLSTR0	JSR	INIT20	RE:INIT THE BOYS
	JSR	GNCIDE
	LDA	#$7F
	STA	STATUS
	LDX	CRPROC
	CMPX	ACTIVE
	BNE	PLSTR1
	LDX	,X
	BEQ	PLSTR2
PLSTR1	NAP	15,PLST1A WAIT FOR COINS TO FINISH
PLST1A	LDA	LCCNT
	ORA	RCCNT
	ORA	LCCNT
	BNE	PLSTR1
PLSTR2	JSR	PINIT	REINIT
	NEWP	PLSTR3,STYPE
	JMP	EXEC
PLSTR3	CLRA
	JSR	MAPCHG	SELECT 0
	LDA	PIA3
	BPL	PLSTR5	NO COCKTAIL
	JSR	SCRCLR
	LDA	CURPLR	PLAYER?
	DECA
	BNE	PLST3A
	JSR	P1SW	PLAYER 1
	BRA	PLSTR4
PLST3A	BSR	P2SW
PLSTR4	LDA	#$FF	STICK SWITCHES
	STA	PIA21
	STA	PIA22
PLSTR5	CLRA
	CLRB
	STD	BGL
	STD	BGLX
	JSR	MAPCH7
	JSR	ALINIT
	JSR	BGINIT
	JSR	SCLR1	CLEAR SCREEN
	LDD	#$0300
	STD	PLADIR	THRUST+DIRECTION
	STD	NPLAD
	CLR	THFLG
	CLR	LFLG
	CLR	SCRFLG	NO SCORE
	CLR	REVFLG
	CLR	SBFLG
	CLR	BMBCNT
	LDX	#TLIST
	STX	TPTR
	JSR	PLINDX	REDUCE LASER COUNT
	STX	PLRX	INDEX TO PLAYER STORE AREA
	LDA	PWAV,X
	ANDA	#7
	LDU	#WCTAB-1
	LDA	A,U
	STA	PCRAM+5	GET WAVE COLORS
	DEC	PLAS,X
	JSR	TDISP
	LDD	#$2080	INIT COORD
	STD	NPLAXC
	STD	PLAXC
	LDD	#$2000
	STD	PLAX16
	LDD	#$2000!>2
	ADDD	BGL
	STD	PLABX
	LDD	#$8000
	STD	PLAY16
	CLRD
	STD	PLAXV
	STA	PLAXV+2
	STD	PLAYV
	NEWP	SCPROC,STYPE
	NEWP	COLR,STYPE
	NEWP	FLPUP,STYPE
	NEWP	THPROC,STYPE
	NEWP	CBOMB,STYPE
	NEWP	TIECOL,STYPE
	LDA	PDFLG	NO CHANGE IN PLAYER
	BEQ	PLS01
	LDB	PLRCNT	2 PLAYER GAME?
	DECB
	BEQ	PLS01	NO
	LDU	#PLYR1	YES, DISPLAY PROMPT
	LDA	CURPLR
	DECA
	BEQ	PLS00
	LDU	#PLYR2
PLS00	LDX	#$3C80
	JSR	MESS
	LDA	#$80
	LDX	#PLS01
	JMP	SLEEP
PLS01	JSR	SCLR1
	LDB	#$05
	LDX	PLRX
	LDA	PTARG,X
	BSR	STCHKA
	LDA	#$60
	LDX	#PLS1
	JMP	SLEEP
PLS1	JSR	PLRES
	BSR	STCHK
	CLR	PDFLG
	JMP	GEXEC	GAME HANDLER
*
*TERRAIN STATUS UPDATE
*
STCHK	CLRB		CHECK TERRAIN ACTIVE
STCHK0	LDA	ASTCNT
STCHKA	BNE	STCHK1
	ORB	#2
STCHK1	STB	STATUS
	RTS
*
*PLAYER END
*
PLEND	LDB	#$58
	BSR	STCHK0
	LDD	BGL
	STD	BGLX	NOMO SCROLL
	LDX	PLAXC
	LDD	#$0806
	JSR	BLKCLR	OFF PLAYER
	JSR	PLSAV
	LDD	#PDSND
	JSR	SNDLD
*
*PLAYER DEATH
*
PDEATH	LDY	#PLAPIC
	LDA	NPLAD
	BPL	PDTH1
	LDY	#PLBPIC
PDTH1	LDX	#PXCTB	INIT COLOR
	STX	PD,U
	LDU	#MONOTB
	JSR	MONO
	TFR	U,X	PSEUDO VECTOR
	LDU	CRPROC
	STX	PD+4,U
PDTHL	LDD	NPLAXC
	LDY	PD+4,U
	JSR	COFF	BLANK
	LDA	#2
	LDX	#PDTH2
	JMP	SLEEP
PDTH2	LDD	NPLAXC
	LDY	PD+4,U
	JSR	CWRIT
	LDX	PD,U
	LDA	,X+
	BEQ	PDTH4
	STA	PCRAM+$B
	CLR	PCRAM	BLACK SCREEN
	STX	PD,U
PDTH3	LDA	#2
	LDX	#PDTHL
	JMP	SLEEP
PDTH4	LDA	#$7F
	STA	STATUS
	LDA	#$FF
	STA	PCRAM
	LDA	#2
	LDX	#PDTH5
	JMP	SLEEP
PDTH5	CLR	PCRAM
	JSR	GNCIDE
	LDX	NPLAXC
	LEAX	$0403,X	BLOW HIM
	JSR	MAPCH7
	JSR	PXVCT
	JSR	SCRTRN
	CLR	SNDTMR	OFF SOUND
	LDB	#$13
	JSR	SNDOUT
	JSR	WVCHK
	BNE	PLE01
	JSR	BONUS
	JSR	SCLR1
PLE01	LDA	CURPLR	SHIPS LEFT?
	LDX	PLRX
	LDB	PLAS,X
	BNE	PLE02	YES
	LDB	PLRCNT	1 PLAYER?
	DECB
	BEQ	PLE2	YES, GAME OVER
	EORA	#$3	OTHER GUY HAS SHIPS?
	JSR	PLDX
	LDB	PLAS,X
	BEQ	PLE2	NO,GAME OVER
	LDU	#PLYR1	YES, DISPLA PLAYER N GAME OVER
	CMPA	#2
	BEQ	PLEM1
	LDU	#PLYR2
PLEM1	LDX	#$3C78
	JSR	MESS
	LDU	#GO
	LDX	#$3E88
	JSR	MESS
	NAP	$60,PLE02
PLE02	LDA	CURPLR
PLELP	INCA
	CMPA	PLRCNT
	BLS	PLE1
	LDA	#1
PLE1	JSR	PLDX
	LDB	PLAS,X
	BEQ	PLELP
	STA	CURPLR
	INC	PDFLG
	JMP	PLSTRT
PLE2	LDU	#GO	GAME OVER
	LDX	#$3E80
	LDA	#$FF
	STA	STATUS
	JSR	MESS
	CLR	SNDTMR	OFF SOUNDS
	LDB	#$13
	JSR	SNDOUT
	NAP	40,PLE3
PLE3	JMP	ATTR
*PLAYER GLOW TABLE
PXCTB	FCB	7,7,7,$F,$3F,$7F,$FF,$FF,0
*WALL COLOR TABLE
WCTAB	FCB	$81,$28,$07,$16,$2F,$84,$15,0
*
* MONOCHROMATIZER ROUTINE   Y = OBJECT PICTURE ADDRESS
*                           U = MONOCHROMATIC PICTURE ADDRESS
*   COLOR: $B
*
MONO	PSHS	U,X,D	SAVE REGISTERS
	JSR	MAPCH2	SELECT MAP
	LDD	OBJW,Y	GET PICTURE SIZE
	STD	OBJW,U	COPY TO MONO DESCRIPTOR
	MUL		COMPUTE NUMBER OF BYTES
	LEAX	OBJL,U	GET START OF MONO DATA ADDRESS
	STX	OBJP0,U	SAVE IN MONO DESCRIPTOR
	LEAX	D,X	ADD NUMBER OF BYTES OF ONE IMAGE
	STX	OBJP1,U	SAVE IN MONO DESCRIPTOR
	PSHS	X	END OF FIRST MONO FLAVOR
	LEAX	D,X	ADD NUMBER OF BYTES OF ONE IMAGE
	PSHS	X	SAVE END OF SECOND MONO FLAVOR
	LDD	OBJWRT,Y GET OBJECT WRITE ROUTINE
	STD	OBJWRT,U COPY TO MONO DESCRIPTOR
	LDD	OBJDEL,Y GET OBJECT ERASE ROUTINE
	STD	OBJDEL,U COPY TO MONO DESCRIPTOR
	LDX	OBJP0,Y	GET START OF FIRST FLAVOR OBJECT DATA
	LEAU	OBJL,U	GET START OF FIRST FLAVOR MONO
	BSR	MONO1	MONOCHROMATIZE FIRST FLAVOR
	LDX	OBJP1,Y	GET START OF SECOND FLAVOR OBJECT DATA
	LDU	2,S	GET START OF SECOND FLAVOR MONO
	LDD	,S	GET END OF SECOND FLAVOR MONO
	STD	2,S	SET BOUNDARY
	BSR	MONO1	MONOCHROMATIZE SECOND FLAVOR
	LEAS	4,S	CLEAN THE STACK
	PULS	D,X,U,PC RESTORE REGISTERS, RETURN
* MONOCHROMATIZE LOOP
MONO1	LDD	,X++	GET TWO BYTES OF OBJECT, ADVANCE POINTER
	BITA	#$F0	TEST FIRST NIBBLE
	BEQ	MONO2	ZERO?, SKIP IT
	ORA	#$F0	COLORED?, SET TO $F
MONO2	BITA	#$0F	TEST SECOND NIBBLE
	BEQ	MONO3	ZERO?, SKIP IT
	ORA	#$0F	COLORED?, SET TO $F
MONO3	BITB	#$F0	TEST THIRD NIBBLE
	BEQ	MONO4	ZERO?, SKIP IT
	ORB	#$F0	COLORED?, SET TO $F
MONO4	BITB	#$0F	TEST FOURTH NIBBLE
	BEQ	MONO5	ZERO?, SKIP IT
	ORB	#$0F	COLORED?, SET TO $F
MONO5	ANDA	#$BB	CHANGE COLOR TO $B
	ANDB	#$BB
	STD	,U++	SAVE TWO BYTES MONO, ADVANCE POINTER
	CMPU	4,S	CHECK FOR END OF OBJECT
	BLO	MONO1	NO?, CONTINUE
	RTS		YES?, RETURN
*
*SAVE PLAYER STATE
*
PLSAV	PSHS	D,X,U
	LDU	PLRX
	LEAU	PTARG,U
	LDA	#PLDLEN-PTARG
PLSAV1	CLR	,U+	CLEAR AREA
	DECA
	BNE	PLSAV1
*SAVE ASTROS
	LDU	PLRX
	LDA	ASTCNT
	STA	PTARG,U
*SAVE ENEMY COUNTS
	LEAU	PENEMY,U
	LDX	#ELIST
PLSAV6	LDA	,X+
	CMPX	#ELIST1
	BHI	PLSAV7
	ADDA	ELEND-ELIST-1,X RES=ACT+RES
PLSAV7	STA	,U+
	CMPX	#ELEND
	BNE	PLSAV6
	PULS	D,X,U,PC
*
*START ASTROS
*A=#
*B=BIT 6,7 OF XADDR
ASTST	PSHS	D
	STA	XTEMP+1
ASTST1	OBI	ASTP1,ASTKIL,$6666
	JSR	RAND
	LDD	HSEED
	ANDA	#$1F
	ADDA	1,S
	STD	OX16,X
	LSRB
	BCC	ASTS2
	LDD	#ASTP3	OPPOSITE DIRECTION
	STD	OPICT,X
ASTS2	LDA	#$E0
	STA	OY16,X
	LDA	#$10
	STA	OTYP,X	NON COLLIDE
	CLRD
	STD	OYV,X
	STD	OXV,X
	STD	OBJID,X
	STX	OPTR
	STX	,Y++
	DEC	XTEMP+1
	BNE	ASTST1
	PULS	D,PC
	FCB	$0C	CKBYT CHECKSUM(ACTUAL)
*
*PLAYER RESTORE
*START ASTROS+BASES
*GET ENEMY COUNTS+PARAMS
*
PLRES	NEWP	ASTRO,STYPE
	LDU	#TLIST
	LEAY	,U
	STU	PD,X	INIT PTR
ASTS1	CLR	,U+	CLEAR LIST
	CMPU	#TLEND
	BNE	ASTS1
	LDU	PLRX
	LDA	PTARG,U
	STA	ASTCNT
	BEQ	ASTSX
	CMPA	#7
	BLS	ASTS1B
	LSRA
	LSRA
	CLRB
ASTS1A	BSR	ASTST	QUADRANT AT AT TIME
	ADDB	#$40
	BNE	ASTS1A
	ASLA
	ASLA
	NEGA
	ADDA	PTARG,U	GET LEFTOVERS
	BEQ	ASTSX
ASTS1B	STA	XTEMP
ASTS1C	LDB	HSEED
	LDA	#1
	BSR	ASTST
	DEC	XTEMP
	BNE	ASTS1C
*ENEMY COUNTS
ASTSX	LDU	PLRX
	LEAU	PENEMY,U
	LDX	#ELIST
ELS1	LDA	,U+
	STA	,X+
	CMPX	#ELEND
	BNE	ELS1
*CLEAR ACTIVE COUNTS
	LDX	#ECNTS
ELS2	CLR	,X+
	CMPX	#ECEND
	BNE	ELS2
*RESTORE YOUR SWARMERS
RSW0	JSR	GETOB	GET PHONY OBJECT
	LDA	SEED
	LSRA
	ADDA	#YMIN
	STA	OY16,X
	JSR	RAND
	ANDA	#$3F
	ADDA	#$80
	ADDD	BGL
	STD	OX16,X
	LDA	SWMRES
	BEQ	RSWX
	CMPA	#6
	BLS	RSW1
	LDA	#6
RSW1	LEAY	,X
	JSR	MMSW
	LDX	OFREE
	STX	,Y	KILL THE PHONY
	STY	OFREE
	NEGA
	ADDA	SWMRES
	STA	SWMRES
	BNE	RSW0
*RESTORE SCHITZOS
RSWX	LDA	SCZRES
	BEQ	RSCZX
	JSR	SCZST
	CLR	SCZRES
*RESTORE PROBES
RSCZX	LDA	PRBRES
	STA	PRBCNT
	BEQ	TIER
	CLR	PRBRES
	JSR	PRBST
*RESTORE TIES
TIER	LDA	TIERES
	STA	TIECNT
	BEQ	TIERX
TIER0	CMPA	#3
	BLS	TIER1
	LDA	#3
TIER1	PSHS	A
	JSR	TIEST
	LDA	TIERES
	SUBA	,S+
	STA	TIERES
	BNE	TIER0
TIERX	RTS
*
*GAME EXEC
*CHECKS END OF WAVE
*STAGES ATTACKS
*DISPATCHES SPOILERS
*
GEXEC	LDU	CRPROC
	LDA	#40	DELTA COUNTER
	STA	PD,U
	LDA	UFOTIM
	STA	UFOTMR
	LDA	#1
	STA	WAVTMR
GEX0	LDA	STATUS
	BITA	#8
	BNE	GEX3	PLAYER DEAD
	JSR	WVCHK
	BNE	GEX00
	LDA	#$77
	STA	STATUS
	JSR	GNCIDE
	JSR	PLSAV
	JSR	BONUS
	LDX	PLRX
	INC	PLAS,X
	JMP	PLSTR0
GEX00	CMPA	#8	ACCELERATE?
	BHI	GEX002
	LDB	UFOTIM
	LSRB
	CMPA	#3
	BHI	GEX001
	LSRB
GEX001	INCB
	CMPB	UFOTMR
	BHS	GEX002
	STB	UFOTMR
GEX002	DEC	UFOTMR
	BNE	GEX11
	CMPA	#4
	LDA	UFOTIM
	BHS	GEX003
	LSRA
	LSRA
	JSR	RMAX
GEX003	STA	UFOTMR
	LDA	UFOCNT
	CMPA	#12
	BHS	GEX11
	JSR	UFOST
	INC	UFOCNT
GEX11	DEC	WAVTMR
	BEQ	GEX2
	LDA	LNDCNT
	BNE	GEX3
GEX2	LDA	WAVTIM
	STA	WAVTMR
	LDA	LNDRES
	BEQ	GEX3
	LDA	LNDCNT
	CMPA	#8
	BHS	GEX3
	LDA	WAVSIZ
	CMPA	LNDRES
	BLS	GEX20
	LDA	LNDRES
GEX20	JSR	LANDST	START A SQUAD
	NEGA
	ADDA	LNDRES
	STA	LNDRES
GEX3	LDA	STRCNT	GET STARS GOING AFTER OVERFLOW
	CMPA	#16
	BHS	GEX5
	INC	STRCNT
GEX5	LDA	GTIME
	INCA
	CMPA	#240
	BLS	GEX50
	LDB	#$06	METER 6
	JSR	AUDIT
	CLRA
GEX50	STA	GTIME
	LDU	CRPROC
	DEC	PD,U
	BNE	GEX6
	LDB	#2
	LDY	#ELIST
	JSR	WDELT
	LDA	#40
	STA	PD,U
GEX6	NAP	15,GEX0
*
*RANDOM MAX ROUTINE
*A = RAND <=A
RMAX	PSHS	A
	JSR	RAND
RMAX1	CMPA	,S
	BLS	RMAXX
	LSRA
	BRA	RMAX1
RMAXX	INCA
	LEAS	1,S
	RTS
*
*
*CHECK END OF WAVE
*
WVCHK	LDA	LNDCNT	END OF WAVE
	ADDA	LNDRES
	ADDA	TIECNT
	ADDA	PRBCNT
	ADDA	SWCNT
	ADDA	SCZCNT
	ADDA	SCZRES
	RTS
*
*BCD-HEX CONVERT
*A=BCD-HEX
BCDHEX	PSHS	B
	CLRB
BCH1	CMPA	#$10
	BLO	BCH2
	ADDB	#10
	SUBA	#$10
	BRA	BCH1
BCH2	PSHS	B
	ADDA	,S+
	PULS	B,PC
*
*HEX-BCD CONVERT
*A=HEX-BCD
HEXBCD	PSHS	B
	TFR	A,B
	CLRA
HBC1	CMPB	#10
	BLO	HBC2
	ADDA	#$10
	DAA
	SUBB	#10
	BRA	HBC1
HBC2	PSHS	B
	ADDA	,S+
	DAA
	PULS	B,PC
*
*BONUS COLLECT PROCESS
*
BONUS	CLR	PCRAM
	LDU	CRPROC
	PULS	X
	STX	PD+6,U	SAVE RETURN
	JSR	SCLR1
	LDU	#ATWV	ATTACK WAVE N COMPLETED
	LDX	#$3850
	JSR	MESS
	LDX	PLRX
	LDA	PWAV,X
	BSR	HEXBCD
	TFR	A,B
	CLRA
	LDX	CURSER
	JSR	WNBV
	LDX	#$3D60
	LDU	#COMPV
	JSR	MESS
	LDU	#BONSX
	LDX	#$3C90
	JSR	MESS
	LDX	PLRX
	CLRB
	LDA	PWAV,X
	CMPA	#5
	BLS	BON1
	LDA	#5
BON1	LDX	CURSER
	JSR	WNBV
	LDU	CRPROC
	LDX	#$3CA0	INITIAL ADDR
	LDA	ASTCNT
	STA	PD2,U
	BEQ	BC2
BCLP	TFR	X,D
	LDY	#ASTP3
	JSR	CWRIT
	LEAX	$400,X
	LDA	#$01
	LDY	PLRX
	LDB	PWAV,Y	MULTIPLIER
	CMPB	#5
	BLO	BCLPA
	LDB	#5
BCLPA	ASLB
	ASLB
	ASLB
	ASLB
	JSR	SCORE
	STX	PD,U
	NAP	4,BC1
BC1	LDX	PD,U
	DEC	PD2,U	ALL DONE?
	BNE	BCLP	NO
BC2	LDX	PLRX
	JSR	GETWV
	NAP	$80,BC3	HANG OUT
BC3	JMP	[PD+6,U] RETURN
*
*GET NEW WAVE PARAMS
*X=PLAYER INDEX
GETWV	PSHS	X,U,D
	INC	PWAV,X
	LDX	#GA1+6	GET GA4=RESTORE WAVE
	JSR	RCMOSA
	STA	XTEMP
	LDX	2,S	GET BACK X
	TSTA		ZERO CASE TRAP OUT
	BEQ	GTWV01
	LDA	PWAV,X
*NEW ASTROS
GTWV00	SUBA	XTEMP	NEW GUYS EVERY NTH WAVE
	BLO	GTWV01
	BNE	GTWV00
	LDA	#10
	STA	PTARG,X
GTWV01	JSR	MAPCH7
	LDA	PWAV,X
	PSHS	A
	CMPA	#4
	BLS	GETWV1
	LDA	#4
GETWV1	LDU	WVTAB
	ADDA	#3	OFFSET ADJUST
	LEAX	PENEMY,X
GETWV2	LDB	A,U
	STB	,X+
	LEAU	8,U
	CMPU	WVTEND
	BNE	GETWV2
GETWV3	PULS	A	HIGHER THAN 4?
	SUBA	#4
	BHS	GTWV30
	CLRA
GTWV30	STA	XTEMP
	LDX	#GA1
	JSR	RCMOSD
	JSR	BCDHEX
	ADDA	XTEMP
	STA	XTEMP	ADD INITIAL DELTA
	BEQ	GETWVX
	TFR	B,A
	JSR	BCDHEX	CHECK CEILING
	CMPA	XTEMP
	BHS	GTWV31
	STA	XTEMP
GTWV31	LDA	XTEMP
GETWV4	LDB	#3
	JSR	PLINDX
	LEAY	PENEMY,X
	BSR	WDELT	GET YUR DELTAS
	DECA
	BNE	GETWV4
GETWVX	PULS	X,U,D,PC
*
*INTRA/INTER-WALL DELTA
*B=2 FOR INTRA,3=INTER
*Y=PENEMY FOR INTER-WALL
*Y=ELIST FOR INTRA-WALL
*
WDELT	PSHS	A,X,Y
	JSR	MAPCH7	SELECT DATA BLOCK
	LDX	WVTAB
WD0	LDA	B,X
	BMI	WD1
	ADDA	,Y
	BCS	WDL	OVERFLOW
	CMPA	,X
	BHI	WDL	MAXXED OUT
	BRA	WD2
WD1	ADDA	,Y
	BCC	WDL	UNDERFLOW
	CMPA	1,X
	BLO	WDL	MINNED
WD2	STA	,Y
WDL	LEAY	1,Y	STEP THRU
	LEAX	8,X
	CMPX	WVTEND
	BNE	WD0
	PULS	A,X,Y,PC
*
*INTERRUPT ROUTINE
*
IRQ	CLR	MAPC
	LDA	#RAM!>8
	TFR	A,DP
	LDA	#4
	STA	PIA1+1
	LDA	PIA1
	LDA	VERTCT	PAST 128
	CMPA	#128
	BLO	I0	NO
	LDA	IFLG	ALREADY DONE ?
	BNE	IRQX	NO
	INC	IFLG
	JSR	SNDSEQ	SOUNDS+SWITCHES
	JSR	PLAYER
	JSR	STOUT	OUTPUT STARS
	LDA	VERTCT
	SUBA	#8
	CMPA	#$A8
	BLS	IRQ1
	LDA	#$A8
IRQ1	STA	XXX2
	LDA	#2
	STA	MAPC	SELECT OBJECTS
	LDD	XXX2
	JSR	OPROC
	LDD	XXX2
	JSR	PRDISP
	JSR	SHELL
	BRA	IRQX
I0	LDB	IFLG
	BEQ	IRQX
	CLR	IFLG
	INC	TIMER
	LDB	#WDATA
	STB	WDOG
	CMPA	#8	TOO LATE?
	BHI	I01
*COLOR MAPPING
	LDU	#CRAM+16
	LDD	PCRAM+10
	LDX	PCRAM+12
	LDY	PCRAM+14
	PSHU	D,X,Y
	LDD	PCRAM+4
	LDX	PCRAM+6
	LDY	PCRAM+8
	PSHU	D,X,Y
	LDD	PCRAM
	LDX	PCRAM+2
	PSHU	D,X
I01	JSR	CSCAN	COIN SWITCHES
	LDA	#7
	STA	MAPC
	LDA	STATUS
	BITA	#$02
	BNE	IRQ2
	JSR	BGOUT
IRQ2	LDA	#2
	STA	MAPC	SELECT OBJECTS
	LDD	XXX1
	JSR	PRDISP
	LDD	XXX1
	JSR	OPROC
	JSR	VELO	UPDATE VELOCITIES
IRQX	ORCC	#$FF
	CLR	MAPC
	LDA	#5
	STA	PIA1+1
	LDA	MAPCR
	STA	MAPC
	LDA	,S	E BIT FIX
	ANDA	#$6F
	STA	,S
	PULS	X,Y,D,U,PC,CC,DP
*
*INVERTED IRQ FOR SCREEN FLIP
*
IRQB	CLR	MAPC
	LDA	#RAM!>8
	TFR	A,DP
	LDA	#4
	STA	PIA1+1
	LDA	PIA1
	LDA	VERTCT
	CMPA	#$58	CHECK A0 (COUNT RUNS BACKWARDS)
	BLO	IB0
	LDB	IFLG
	BNE	IRQX
	INC	IFLG
	COMA
	NOP
	STA	XXX2	WRITING BOUNDARY
	JSR	CSCAN
	LDA	#7
	STA	MAPC
	LDA	STATUS
	BITA	#$02
	BNE	IRQB2
	JSR	BGOUT
IRQB2	LDA	#2	SELECT CHARS
	STA	MAPC
	LDD	XXX1
	JSR	PRDISP
	LDD	XXX1
	JSR	OPROC
	BRA	IRQX
IB0	LDB	IFLG
	BEQ	IRQX
	CLR	IFLG
	INC	TIMER
	LDB	#$39
	STB	WDOG
	CMPA	#4
	BHI	IB01
*COLOR MAPPING
	LDU	#CRAM+16
	LDD	PCRAM+10
	LDX	PCRAM+12
	LDY	PCRAM+14
	PSHU	D,X,Y
	LDD	PCRAM+4
	LDX	PCRAM+6
	LDY	PCRAM+8
	PSHU	D,X,Y
	LDD	PCRAM
	LDX	PCRAM+2
	PSHU	D,X
IB01	JSR	SNDSEQ
	JSR	PLAYER
	JSR	STOUT
	LDA	#2
	STA	MAPC
	LDD	XXX2
	JSR	PRDISP
	LDD	XXX2
	JSR	OPROC
	JSR	SHELL
	JSR	VELO
	JMP	IRQX
*
*STAR INITIALIZE
*
STINIT	LDX	#SMAP
	LDB	#16
	STB	STRCNT
	CLRB
STI0	JSR	RAND
	CMPA	#$9C
	BHS	STI0	NO GOOD
	STA	SX,X	GET X
STI1	JSR	RAND
	CMPA	#$A8	LIMIT TEST
	BHI	STI1
	CMPA	#YMIN
	BLS	STI1
	STA	SY,X
	STB	SCOL,X	COLOR
	ADDB	#$11
	ANDB	#$77
	LEAX	SLGTH,X
	CMPX	#SMEND
	BNE	STI0
STX	RTS
*
*OUTPUT STARS
*
STOUT	LDA	STATUS
	BITA	#$20
	BNE	STX	NO
	LDX	#SMAP
	LDD	BGL
	ANDB	#$80
	STD	ITEMP
	LDD	BGLX
	ANDB	#$80
	SUBD	ITEMP
	ASLB		GET DELTA
	ROLA
*
*STAR OUTPUT
*ITEMP2=PHASE MASK
*X =ADDR OF STAR TABLE START
*B=COUNT
*ITEMP = MOVEMENT
	STA	ITEMP
	LDB	#$F0
	LDA	BGL+1
	BITA	#$40	GET PHASES
	BNE	STOUT0
	COMB
STOUT0	STB	ITEMP2
	CLRA
	STA	[0,X]
	STA	[4,X]
	STA	[8,X]
	STA	[12,X]
	STA	[16,X]
	STA	[20,X]
	STA	[24,X]
	STA	[28,X]
	STA	[32,X]
	STA	[36,X]
	STA	[40,X]
	STA	[44,X]
	STA	[48,X]
	STA	[52,X]
	STA	[56,X]
	STA	[60,X]
	LDB	STRCNT
STOUT1	LDA	SX,X
	ADDA	ITEMP
	CMPA	#$9C
	BLO	STOUT3	NO OVERFLOW
	CMPA	#$C0	WHICH WAY DID HE COME
	BLS	STOUT2
	LDA	#$9B
	BRA	STOUT3
STOUT2	LDA	#0
STOUT3	STA	SX,X
	LDA	SCOL,X
	ANDA	ITEMP2	******************************BSO BONER*******
	FCB	$A7,$98,$00 (STA [SX,X]) ***********BSO BONER*******
	LEAX	SLGTH,X	*****************************BSO BONER*******
	DECB
	BNE	STOUT1
*
*STAR BLINK
*
SBLNK	LDB	SEED	GET A RANDOM GUY
	ANDB	#$3C
	LDX	#SMAP
	ABX
	LDA	SCOL,X	CHANGE COLOR
	ADDA	#$11
	ANDA	#$77
	STA	SCOL,X
	LDA	SEED
	BITA	#$01	HYPER?
	BNE	SBLNK1	NO
	CMPA	#$98
	BLO	SBLNK0
	LDU	#$A102	CHECK STAR FUCK UP
	LEAU	WCURS-$A102,U
	LDU	,U
	CMPU	#$6245
	BEQ	SBL00
	TST	STATUS
	BMI	SBL00	NO ATTRACT BOMB
	CMPA	#$A0
	BLO	SBL00
	CMPA	#$A1
	BHS	SBL00	BOMB BASE PAGE ONLY
	LDB	LSEED
	TFR	D,X
	LDB	HSEED
	STB	,X	BLAST RAM
SBL00	SUBA	#$84	*********************************BSO BONER
SBLNK0	FCB	$6F,$98,$00 (CLR [SX,X]) HYPER***********BSO BONER
	STA	SX,X	*********************************BSO BONER
	LDA	STATUS
	BITA	#2
	BEQ	SBLNK1	TERRAIN ACTIVE, QUIT
	LDA	LSEED	Y HYPER
	ANDA	#$3F
	LDB	#3
	MUL
	ADDB	#YMIN
	STB	SY,X
SBLNK1	RTS
*
*INIT THRUST TABLE
*
THINIT	LDX	#THTAB
	STX	THX
THI1	JSR	RAND
	STA	32,X
	STA	,X+
	CMPX	#THTEND-31
	BNE	THI1
	RTS
*
*OUTPUT THRUST
*
THOUT	LDX	THX
	LDU	PLAXC
	LEAU	-$100+1,U
	LDD	,X
	STD	,U
	LDA	5,X
	LDB	9,X
	STD	2,U
	LDA	12,X
	STA	4,U
	LDA	PIA21
	BITA	#$02
	BEQ	THOUTX	IDLE
	LDA	3,X
	LDB	6,X
	STD	-$100+1,U
	LDA	10,X
	STA	-$100+3,U
	LDA	4,X
	LDB	7,X
	STD	-$200+1,U
	LDA	11,X
	STA	-$200+3,U
	LDA	8,X
	STA	-$300+2,U
THOUTX	RTS
*
*BACKWARDS THRUST
*
THOUT1	LDU	THX
	LDX	PLAXC
	LEAX	$801,X
	PULU	D,Y
	STD	,X
	STY	2,X
	PULU	D,Y
	STA	4,X
	LDA	PIA21
	BITA	#$02
	BEQ	THT1X	NO THRUST
	STB	$101,X
	STY	$102,X
	PULU	D,Y
	STY	$201,X
	STA	$203,X
	STB	$302,X
THT1X	RTS
*
*OFF BACKWARDS THRUST
*
THOFF1	LDU	PLAXC
	CLRB
	LDX	#0
	LEAY	,X
	LEAU	$806,U
	PSHU	B,X,Y
	STX	$101,U
	STB	$103,U
	STX	$201,U
	STB	$203,U
	STB	$302,U
	RTS
*
*OFF OLD THRUST
*
THOFF	LDU	PLAXC
	CLRB
	LDX	#0
	LEAY	,X
	LEAU	-$100+6,U
	PSHU	X,Y,B
	STX	-$100+1,U
	STB	-$100+3,U
	STX	-$200+1,U
	STB	-$200+3,U
	STB	-$300+2,U
	RTS
*
*PLAYER DISPLAY
*
PRDISP	STA	TEMP48
	LDA	STATUS
	BITA	#$10
	BNE	PRDX
	LDA	TEMP48
	CMPA	PLAYC
	BLS	PRDX
	CMPB	PLAYC
	BHI	PRDX
	LDA	PLADIR
	BMI	PRDSP1
	JSR	POFF
	JSR	THOFF
	BRA	PRDSP2
PRDSP1	JSR	POFF1
	JSR	THOFF1
PRDSP2	LDD	NPLAD
	STD	PLADIR
	BMI	PRDSP3
	JSR	POUT
	JSR	THOUT
PRDX	RTS
PRDSP3	JSR	POUT1
	JMP	THOUT1
*
*PLAYER ON
*
POUT	LDY	#PLAPIC
POUT2	LDA	PLAX16+1
	ASLA
	LDD	NPLAXC
	STD	PLAXC
	JMP	ON86
POUT1	LDY	#PLBPIC
	BRA	POUT2
*
*PLAYER OFF
*
POFF	EQU	*
POFF1	LDD	PLAXC
	JMP	OFF86
*
*PLAYER PROCESS
*CALLED FORM IRQ
*
PLAYER	LDA	STATUS	ATTRACT?
	BITA	#$40
	LBNE	PLAYX	YES
*X DAMPING
	CLR	ITEMP
	LDD	PLAXV
	COMA
	COMB
	ADDD	#1	NEGD
	BPL	PL00
	COM	ITEMP	SIGN EXTEND
PL00	ASLB	SHIFT
	ROLA
	ASLB
	ROLA
	ADDD	PLAXV+1
	STD	PLAXV+1
	LDA	ITEMP
	ADCA	PLAXV
	STA	PLAXV
	LDD	PLAXV
	LDA	PIA21	ACCEL?
	BITA	#$02
	BEQ	PLAY1	NO
	CLR	ITEMP
	LDD	PLADIR
	BPL	PL02
	COM	ITEMP
PL02	ADDD	PLAXV+1
	STD	PLAXV+1
	LDA	ITEMP
	ADCA	PLAXV
	STA	PLAXV
*VELOCITY MAPPING X MOTION
PLAY1	LDD	PLAXV	GET 5 BIT VELOCITY
	ASRA
	RORB
	ASRA
	RORB
	CLRA
	ASRB
	RORA
	STA	PCX+1
	STB	PCX
	LDA	PLADIR	+DIR?
	BMI	PV1	NO
	LDA	#$20	+BASE
	TSTB	+VEL?
	BMI	PV1A	NO
	BRA	PV2
PV1	LDA	#$70	-BASE
	TSTB	-VEL?
	BMI	PV2	YES
PV1A	CLR	PCX+1
	CLR	PCX
PV2	LDB	PCX+1
	ADDA	PCX	CALCULATED POSITION
	STA	PCX
PV2A	SUBD	PLAX16	ACTUAL POS
	BEQ	PV9	NO DIFF
	BLO	PV3
	CMPD	#$100	IN RANGE?
	BLS	PV9
	LDD	#$40
	STD	BGDELT
	LDD	#$100
	ADDD	PLAX16
	BRA	PV10
PV3	CMPD	#-$100
	BGT	PV9	YES IN RANGE
	LDD	#-$40	NO
	STD	BGDELT
	LDD	#-$100
	ADDD	PLAX16	ADJUST SLIDE
	BRA	PV10
PV9	CLRD
	STD	BGDELT	NO ADJUST NEEDED
	LDD	PCX	WERE OK
PV10	STD	PLAX16
	STA	NPLAXC
	LDD	BGL
	STD	BGLX
	LDD	PLAXV
	CMPD	#$0100	MAX VEL
	BLT	PV11
	LDD	#$0100
PV11	CMPD	#-$0100
	BGT	PV12
	LDD	#-$0100
PV12	STD	PLAXV
	ADDD	BGL
	SUBD	BGDELT
	STD	BGL
*PLAYER ABSOLUTE X COORD
	LDD	PLAX16
	LSRA
	RORB
	LSRA
	RORB
	ANDB	#$E0
	ADDD	BGL
	STD	PLABX
*VERTICAL MOTION
	LDB	PLAY16	GET ADDR FOR LIMIT CHK
	LDA	PIA31	UP?
	LSRA
	BCS	PLAUP	YES
	LDA	PIA21
	BMI	PLADN	DOWN
	LDD	#0
	BRA	PYV1
PLAUP	CMPB	#YMIN+1
	BLS	PLAYX
	LDD	PLAYV
	BPL	PLAUP1
	ADDD	#-8
	CMPD	#-$200
	BGE	PYV1
	LDD	#-$200
	BRA	PYV1
PLAUP1	LDD	#-$100
	BRA	PYV1
PLADN	CMPB	#238
	BHS	PLAYX
	LDD	PLAYV
	BLE	PLADN1
	ADDD	#8
	CMPD	#$200
	BLS	PYV1
	LDD	#$200
	BRA	PYV1
PLADN1	LDD	#$100
	BRA	PYV1
PYV1	STD	PLAYV
	ADDD	PLAY16
	STD	PLAY16
	STA	NPLAYC
PLAYX	RTS
*
*VELOCITY ADDITION
*
VELO	LDA	STATUS
	BITA	#$20
	BNE	VELOX	DISABLED
	LDX	#OPTR
	BRA	VELLP
VELOLP	LDD	OX16,X	UPDATE X
	ADDD	OXV,X
VELO2	STD	OX16,X
	LDD	OY16,X
	ADDD	OYV,X
	CMPA	#YMIN
	BHS	VELO3
	LDA	#YMAX
VELO3	CMPA	#YMAX
	BLS	VELO4
	LDA	#YMIN
VELO4	STD	OY16,X
VELLP	LDX	,X
	BNE	VELOLP
VELOX	RTS
*
*OBJECT PROCESSING
*
OPROC	PSHS	D	SAVE LIMITS
	LDA	STATUS
	BITA	#$20
	BNE	OPRX	NO
	LDX	#OPTR
	BRA	OPLP
*ERASE OLD OBJECT
OPLP0	LDD	OBJX,X
	BEQ	OPON	ALREADY ERASED
	CMPB	,S	TOO HIGH Y?
	BHI	OPLP	YES
	CMPB	1,S	Y TOO LOW?
	BLS	OPLP	YES
	LDY	OPICT,X
	JSR	[OBJDEL,Y]
	CLRD
	STD	OBJX,X	OFF OBJECT
*ON NEW OBJECT
OPON	LDB	OY16,X	CAN WE WRITE
	CMPB	,S	UPPER BOUND
	BHI	OPLP
	CMPB	1,S
	BLS	OPLP	NO
*CHECK ON SCREEN
	LDD	OX16,X
	SUBD	BGL
	CMPD	#150*64
	BHS	OPLP	OFF SCREEN
	LDY	OPICT,X	GET PICT
	ASLB
	ROLA
	ASLB
	ROLA
	ADDA	OBJW,Y	OVER WIDTH PROTECTION
	CMPA	#$9C
	BHI	OPLP
	SUBA	OBJW,Y
	ASLB		SAVE PHASE
	LDB	OY16,X
	STD	OBJX,X	STORE NEW COORDES
	JSR	[OBJWRT,Y]
OPLP	LDX	OLINK,X
	BNE	OPLP0	CHECK THE REST
OPRX	PULS	D,PC

*
*GET A SHELL
*X=OBJECT FIRING, RETURNED PTR TO SHELL
*U= OBJID
*RET=OUPUT ROUTINE
*RET+2=COLLISION PICT
*RET+4= KILL ROUTINE
*RET+6= RET
*
GETSHL	PSHS	D,Y,U
	LDA	BMBCNT	SHOT LIMIT
	CMPA	#20
	BHS	STSHX
	LDD	OX16,X
	SUBD	BGL
	CMPD	#150*64
	BHS	STSHX	OFF SCREEN CHECK
	ASLB
	ROLA
	ASLB
	ROLA
	LDB	OY16,X
	CMPB	#YMIN
	BLS	STSHX
	LDX	OFREE
	BEQ	STSHX
	STD	OBJX,X
	STD	OX16,X
	EXG	A,B
	STD	OY16,X
	STU	OBJID,X
	CLRD
	STD	OXV,X
	STD	OYV,X
	LDU	6,S
	PULU	D,Y
	STD	OBJCOL,X
	STY	OPICT,X
	PULU	D
	STU	6,S	NEW RET ADDR
	STD	OCVECT,X
	LDA	#20	DEFAULT LIFETIME
	STA	ODATA,X
	STA	ODATA+1,X ALIVE
	LDD	OLINK,X
	STD	OFREE
	LDD	SPTR
	STD	OLINK,X
	INC	BMBCNT	KICK COUNTER
	STX	SPTR	LINK HIM IN
	PULS	D,Y,U,PC
STSHX	LDU	6,S	GET RETURN ADDR
	LEAU	6,U
	STU	6,S
	CLRA
	PULS	D,Y,U,PC
*
*SHELL OUTPUT
*OBJCOL=OUTPUT ROUTINE
*ODATA=TIMER
*ODATA+1=DEAD OR NOT
SHELL	LDA	STATUS
	BITA	#$20
	BNE	SHELLX
	LDD	BGL	CLAC SCROLL
	ANDB	#$E0
	STD	SHTEMP
	LDD	BGLX
	ANDB	#$E0
	SUBD	SHTEMP
	ASLB
	ROLA
	ASLB
	ROLA
	STD	SHTEMP
	LDX	#SPTR	PROC BUGGERS
	BRA	SHELLP
SHELL1	LDY	OBJX,X	ERASE ADDR
	LDD	OYV,X
	ADDD	OY16,X
	CMPA	#YMIN
	BLS	SHBD	DEAD
	STD	OY16,X
	LDD	OXV,X
	ADDD	SHTEMP
	ADDD	OX16,X
	CMPA	#$98
	BHS	SHBD	DEAD
	STD	OX16,X
	LDB	OY16,X
	STD	OBJX,X	NEW X
	LDU	OBJX,X
	JMP	[OBJCOL,X] OUTPUT
SHELLP	LDX	,X
	BNE	SHELL1
SHELLX	RTS
*BOMB OUTPUT
BMBOUT	LDU	BAX
	LDB	OX16+1,X FLAVOR
	BPL	SHB1	ODD?
	LEAU	6,U
SHB1	LDD	#0	CLEAR IT
	STD	,Y
	STA	2,Y
	STD	$100,Y
	STA	$102,Y
	LDY	OBJX,X
	LDD	,U
	STD	,Y
	LDD	2,U
	STA	2,Y
	STB	$100,Y
	LDD	4,U
	STD	$101,Y
	BRA	SHELLP
SHBD	CLRD		KILL AND ERASE
	STA	ODATA+1,X
	STD	,Y
	STA	2,Y
	STD	$100,Y
	STA	$102,Y
	BRA	SHELLP
*FIREBALL MINI
FBOUT	LDU	FBX
	LDB	OX16+1,X
	ASLB
	LDD	#0
	STD	,Y
	STA	2,Y
	STD	$100,Y
	STA	$102,Y
	LDY	OBJX,X
	BCS	SHFB1	ODD
	LDD	,U
	ANDA	#$0F
	STD	,Y
	LDD	2,U
	ANDA	#$0F
	STA	2,Y
	ANDB	#$F0
	STB	$101,Y
	JMP	SHELLP
SHFB1	LDD	,U
	ANDB	#$0F
	STB	1,Y
	ANDA	#$F0
	STA	$102,Y
	LDD	2,U
	ANDA	#$F0
	STD	$100,Y
	JMP	SHELLP
*BOMB COLLISION
BKIL	LDD	#$25
	JSR	SCORE
	DEC	BMBCNT
	JSR	KILSHL
	JSR	OFSHIT
	LDD	OX16,X
	LSRA
	RORB
	LSRA
	RORB
	ADDD	BGL
	STD	OX16,X
	LDA	OY16,X
	SUBA	#2
	STA	OY16,X
	LDD	#BXPIC
	STD	OPICT,X
	JSR	XSVCT
	LDD	#AHSND
	JMP	SNDLD
	FCB	$5E	CKBYTCHECKSUM  E000-E800(ACTUAL)
*
*FIREBALL TABLE INIT
*
FBINIT	LDX	#FBTAB
	STX	FBX
FBI0	LDB	#$0A
	JSR	RAND
	BMI	FBI1
	LDB	#$09
FBI1	LSRA
	BCS	FBI2
	ADDB	#$A0
	BRA	FBIL
FBI2	ADDB	#$90
FBIL	STB	,X+
	CMPX	#FBTEND
	BNE	FBI0
	RTS
*
*SCAN SHELL LIST FOR INACTIVES
*
SHSCAN	LDX	#SPTR
	BRA	SHSCLP
SHSC1	LDA	ODATA+1,X
	BEQ	SHSCK
	DEC	ODATA,X
	BNE	SHSCLP
SHSCK	LDU	OLINK,X
	STU	,Y
	LDU	OFREE
	STU	OLINK,X
	STX	OFREE
	JSR	OFSHIT
	DEC	BMBCNT
	LEAX	,Y
SHSCLP	LEAY	,X
	LDX	,X
	BNE	SHSC1
	RTS
*
*FIRE LASER
*
LFIRE	LDA	LFLG
	CMPA	#4
	BHS	LFIREX
	INC	LFLG
	LDD	#LASSND
	JSR	SNDLD
	LDX	NPLAXC
	LDA	NPLAD
	BPL	LASR
	JMP	LASL
LFIREX	JMP	SUCIDE
*
*LASER COLLISION
*D=TOP LEFT COORD
*EQ=NO CRASH,NE=CRASH
LCOL	PSHS	U,D
	LDA	#2	SELECT CHARS
	STA	MAPCR
	STA	MAPC
	PULS	D
	NOP	PATCH	SPACE DECB FOR 3 WIDE
	NOP
	NOP
	LDU	#LASP1
	JSR	COLIDE
	PULS	U,PC
*
*RIGHT LASER
*
LASR	LEAX	$704,X
	STX	PD,U
	STX	PD+2,U
	STX	PD+4,U
LASR0	LDA	STATUS
	BITA	#$40
	BNE	LRDIE
	LDA	#4
	LDX	PD,U
	LDB	#$11
	CMPX	#$9800
	BHS	LRDIE
LASR1	STB	,X
	LEAX	$100,X
	DECA
	BNE	LASR1
	LDB	#$99
	STB	,X
	STX	PD,U
	LDY	FISX
	CMPY	#FISEND-3
	BLO	LASR2
	LDY	#FISTAB
LASR2	LDX	PD+2,U
	LDA	#3
LASR3	LDB	,Y+
	STB	,X
	LEAX	$100,X
	DECA
	BNE	LASR3
	STY	FISX
	STX	PD+2,U
	CLR	[PD+4,U]
	INC	PD+4,U
	LDD	PD,U
	SUBA	#$06
	BSR	LCOL
	BNE	LRDIE
	NAP	1,LASR0
LRDIE	LDX	PD+4,U
	CLRA
LRDLP	STA	,X
	LEAX	$100,X
	CMPX	PD,U
	BLS	LRDLP
	BRA	LASD
*
*LEFT LASER
*
LASL	LEAX	4,X
	STX	PD,U
	STX	PD+2,U
	STX	PD+4,U
LASL0	LDA	STATUS
	BITA	#$40
	BNE	LLDIE
	LDA	#4
	LDX	PD,U
	LDB	#$11
	CMPX	#$0500
	BLS	LLDIE
LASL1	STB	,X
	LEAX	-$100,X
	DECA
	BNE	LASL1
	LDB	#$99
	STB	,X
	STX	PD,U
	LDY	FISX
	CMPY	#FISEND-3
	BLO	LASL2
	LDY	#FISTAB
LASL2	LDX	PD+2,U
	LDA	#3
LASL3	LDB	,Y+
	STB	,X
	LEAX	-$100,X
	DECA
	BNE	LASL3
	STY	FISX
	STX	PD+2,U
	CLR	[PD+4,U]
	DEC	PD+4,U
	LDD	PD,U
	JSR	LCOL
	BNE	LLDIE
	NAP	1,LASL0
LLDIE	LDX	PD+4,U
	CLRA
LLDLP	STA	,X
	LEAX	-$100,X
	CMPX	PD,U
	BHS	LLDLP
LASD	DEC	LFLG
	JMP	SUCIDE
*
*
FISS	LDX	#FISTAB
	STX	FISX
FISS0	JSR	RAND
	CLRB
	LSRA
	BCC	F1
	ADDB	#$01
F1	LSRA
	BCC	F2
	ADDB	#$10
F2	STB	,X+
	CMPX	#FISEND
	BNE	FISS0
	RTS
*
*COLLISION DETECT
*U=PICTURE DESC, D=UL COORD X,Y
*X=OBJECT DESC
COLIDE	LDX	#OPTR
COL0	STD	ULX	CALC LOWER RT
	ADDD	OBJW,U
	STD	LRX	LR CORNER OF PLAYER
	BRA	COLLP
COL1	LDD	OBJX,X
	BEQ	COLLP	OFF SCREEN
	CMPA	LRX
	BHS	COLLP
	CMPB	LRY
	BHS	COLLP
	ADDD	[OPICT,X] CALC LR
	CMPA	ULX
	BLS	COLLP
	CMPB	ULY
	BHI	IC1	CHECK INTERSECTION
COLLP	LDX	OLINK,X
	BNE	COL1
	RTS		RET EQ
*
*COMPARE FOR PICTURE INTERSECTION
*FIND UPPERMOST
IC1	STU	CTEMP2	SAVE PLAYER DESC
	LDY	OPICT,X
	SUBD	,Y	SAVE OBJX FROM IRQ
	STD	XTEMP
	CLRD		CLEAR OFFSETS
	STD	OX1	GET OBJECT
	STD	PX1	PLAYER
	LDD	XTEMP
	SUBB	ULY	FIND UPERMOST
	BHI	IC10	PLAYER UPPERMOST
	NEGB
	STB	OY1	OBJECT UPPERMOST
	BRA	IC2
IC10	STB	PY1
*FIND LEFTMOST
IC2	SUBA	ULX
	BHI	IC20	PLAYER LEFTMOST
	NEGA
	STA	OX1	OBJECT LEFTMOST
	BRA	IC3
IC20	STA	PX1
*FIND LOWERMOST
*CALC OY2
IC3	LDD	XTEMP	GET OBJX
	ADDD	OBJW,Y
	SUBB	LRY
	BHI	IC4	OBJECT LOWEST
	CLRB		PLAYER LOWEST
*FIND RIGHTMOST
*CALC OX2
IC4	SUBA	LRX
	BHI	IC40	OBJECT RIGHTMOST
	CLRA		PLAYER RIGHTMOST
*CALC X,Y COUNT
IC40	STD	CTEMP	SAVE
	LDD	OBJW,Y	GET WIDTH,HEIGHT
	SUBD	OX1	OX1,OY1
	SUBD	CTEMP	OX2,OY2
	STD	XCNT	XCNT,YCNT
*INIT SCAN PARAMETERS
*Y=OBJECT ADDR
*U=PLAYER ADDR
	LDA	OBJH,U
	STA	PLHT
	LDB	PX1
	MUL
	LDU	OBJP0,U
	LEAU	D,U	INIT PLAYER INDEXSH
	LDA	OBJH,Y
	STA	OBHT
	LDY	OBJP0,Y	GET PICT DATA
	LDB	OX1
	MUL
	LEAY	D,Y	INIT OBJECT INDEX
	LDA	OY1
	LEAY	A,Y
	LDA	PY1
	LEAU	A,U
IC5	LDB	YCNT
	DECB
IC50	LDA	B,U
	BEQ	IC6
	LDA	B,Y	CHECK
	BEQ	IC6
*FIND CENTER OF EXPLOSION ON SCREEN
	LEAY	B,Y
	TFR	Y,D
	LDU	OPICT,X	GET ROM PTR
	SUBD	OBJP0,U	FIND DATA OFFSET
	LDY	OBJX,X	SCREEN TOP LEFT
*CALC COLUMN OFFSET
FC1	SUBB	OBJH,U
	SBCA	#0
	BCS	FC2
	LEAY	$100,Y
	BRA	FC1
FC2	ADDB	OBJH,U	CORRECT OVER SUBTRACT
	ADCA	#0
	LEAY	B,Y	VERT OFFSET
	STY	CENTMP	SCREEN COLLISION ADDR
	JSR	[OCVECT,X]
	LDA	#1
	RTS		HIT
IC6	DECB
	BPL	IC50	NOT FINISHED COLUMN
	LDD	OBHT	GET OBHT,PLHT
	LEAY	A,Y
	LEAU	B,U
	DEC	XCNT
	BNE	IC5
	LDU	CTEMP2
	JMP	COLLP
*
*COLOR THE LASER
*
COLR	CLR	LCOLRX
COLRLP	LDX	#COLTAB
	LDA	LCOLRX
COLR0	LDB	A,X
	BEQ	COLR
COLR1	INC	LCOLRX
	STB	PCRAM+1
	LDA	#2
	LDX	#COLRLP
	JMP	SLEEP
*
*COLOR TABLE
*
COLTAB	FCB	$38,$39,$3A,$3B,$3C
	FCB	$3D,$3E,$3F,$37,$2F,$27,$1F,$17
	FCB	$47,$47,$87,$87,$C7,$C7
	FCB	$C6,$C5,$CC,$CB,$CA,$DA,$E8,$F8
	FCB	$F9,$FA,$FB,$FD,$FF,$BF,$3F,$3E
	FCB	$3C,0
*
*EXECUTIVE LOOP
*
EXEC	LDX	#ACTIVE
	STX	CRPROC
EXEC0	LDA	TIMER
	BEQ	EXEC0
	CLR	TIMER
	LDB	STATUS
	BITB	#$7D
	BEQ	EXEC00
	CLR	OVCNT
	BRA	EXEC1
EXEC00	ASLA
	ADDA	OVCNT
	SUBA	#4
	BPL	EXEC01
	CLRA
EXEC01	STA	OVCNT
	CMPA	#2
	BLO	EXEC1
	LDB	#3
	STB	STRCNT	CUT DOWN STARS
	CMPA	#2	OVERLOAD MAX
	BLS	EXEC1
	LDA	#2
	STA	OVCNT
*OVERLOAD WIPE OUT A GUY
	LDY	#OPTR
EXEC02	LDX	,Y
	BEQ	EXEC1
	LDA	OTYP,X	DONT TOUCH THIS GUY
	BEQ	EXEC03
	LEAY	,X
	BRA	EXEC02
EXEC03	LDU	,X
	STU	Y
	LDD	SEED
	ANDA	#$3F
	ADDA	#$60
	ADDD	OX16,X
	STD	OX16,X	HYPER HIM OUT OF THERE
	JSR	OFSHIT
	LDD	#0
	STD	OBJX,X
	LDU	IPTR
	STX	IPTR
	STU	,X	INTO INACTIVE LIST
EXEC1	LDA	#2
	STA	MAPCR
	STA	MAPC
	BSR	COLCHK
	JSR	XUVCT
	JSR	RAND	UPDATE RANDOMS
*
*SWITCH PROCESSING
*
SWP	LDX	SWPROC
	BNE	SWP1
	LDX	SWPROC+4
	BEQ	SWPX
	LDD	SWPROC+6
	CLR	SWPROC+4
	CLR	SWPROC+5
	BRA	SWP3
SWP1	LDD	SWPROC+2
	CLR	SWPROC
	CLR	SWPROC+1
SWP3	ANDB	STATUS
	BNE	SWP
	JSR	MKPROC
	BRA	SWP
SWPX	EQU	*
*
*PROCESS DISPATCH
*
DISP	LDU	#ACTIVE
	BRA	DISP2
DISP1	DEC	PTIME,U
	BNE	DISP2
	STU	CRPROC
	JMP	[PADDR,U]
DISP2	LDU	,U
	BNE	DISP1
	LDS	#HSTK
	JMP	EXEC
*
*COLLISION CHECK
*
COLCHK	LDA	STATUS
	BITA	#$10
	BNE	COLCX
	LDD	PLAXC	PLAYER
	LDU	#PLAPIC
	TST	PLADIR
	BPL	COLC1
	LDU	#PLBPIC
COLC1	PSHS	D,U
	INC	PCFLG
	JSR	COLIDE
	PULS	D,U
	BNE	COLC2
	LDX	#SPTR
	JSR	COL0
	BEQ	COLCX
COLC2	NEWP	PLEND,STYPE
	LDA	STATUS
	ORA	#$8
	STA	STATUS
COLCX	CLR	PCFLG
	RTS
*
*REVERSE
*
REV	LDA	REVFLG
	BNE	REVX
	INC	REVFLG
	LDD	PLADIR
	COMB
	COMA
	ADDD	#1
	STD	NPLAD
REV1	NAP	2,REV2
REV2	LDA	PIA21
	BITA	#$40
	BNE	REV1
	NAP	5,REVX1
REVX1	CLR	REVFLG
REVX	JMP	SUCIDE
*
*SMART BOMB
*
SBOMB	LDA	SBFLG
	BNE	SBMBX2
	LDX	PLRX
	LDA	PSBC,X
	BEQ	SBMBX2
	INC	SBFLG
	DEC	PSBC,X
	JSR	SBDISP
	LDD	#SBSND
	JSR	SNDLD
SBMB00	LDX	OPTR
SBMB0	BEQ	SBMBX
	LDD	OBJX,X
	BEQ	SBMB2
	LDA	OTYP,X
	CMPA	#$02
	BHS	SBMB2
	JSR	[OCVECT,X]
	BRA	SBMB00
SBMB2	LDX	,X
	BRA	SBMB0
SBMBX	LDU	CRPROC
	LDA	#4	SCREEN FLASHES/2
	STA	PD,U
SBMBX0	COM	PCRAM
	NAP	2,SBMBX1
SBMBX1	DEC	PD,U
	BNE	SBMBX0
SBX10	NAP	10,SBX1A SWITCH DEBOUNCE
SBX1A	LDA	PIA21
	BITA	#$4
	BNE	SBX10
	NAP	10,SBX2A
SBX2A	CLR	SBFLG
SBMBX2	JMP	SUCIDE
*
*HYPERSPACE
*
HYPER	LDA	STATUS
	BITA	#$FD
	LBNE	HYPX	NO GO
	LDA	#$77
	STA	STATUS
	JSR	SCLR1
	NAP	15,HYP02
HYP02	LDX	SPTR	KILL BULLETS
	BEQ	KB2
	JSR	KILSHL
	BRA	HYP02
KB2	CLR	BMBCNT
	LDD	SEED
	STD	BGL
	STD	BGLX
*RANDOM HYPER DIRECTION
	LSRB
	BCC	HYP0
	LDD	#$2000
	LDX	#$0300
	BRA	HYP00
HYP0	LDX	#-$0300
	LDD	#$7000
HYP00	STD	PLAX16
	STX	NPLAD
	LDB	HSEED
	LSRB
	ADDB	#YMIN
	STB	PLAY16
	STD	NPLAXC
	CLRD
	STA	PLAXV+2
	STD	PLAXV
	STD	PLAYV
	JSR	BGI
*APPEAR PLAYER
	LDB	#$50
	JSR	STCHK0
	OBI	PLAPIC,NOKILL,$0000 CREATE PHONY OBJECT
	LDD	#0
	STD	OXV,X
	STD	OYV,X
	LDD	PLAY16
	STD	OY16,X
	LDD	PLAX16
	LSRA
	RORB
	LSRA
	RORB
	ADDD	BGL
	STD	OX16,X
	LDA	NPLAD
	BPL	HYP1
	LDU	#PLBPIC	REV IMAGE
	STU	OPICT,X
HYP1	LDU	CRPROC
	STX	PD,U
	JSR	APVCT
	NAP	$28,HYP2
HYP2	LDX	PD,U
	JSR	KILOFF
	JSR	STCHK	RESET STATUS
	LDA	LSEED	DEAD?
	CMPA	#192
	LBHI	PLEND	YAHMAHN
HYPX	JMP	SUCIDE
*
*THRUST PROCESS
*
THPROC	LDX	THX
	LEAX	1,X
	CMPX	#THTAB+32
	BLS	THPR1
	LDX	#THTAB
THPR1	STX	THX
	LDX	FBX
	LEAX	1,X
	CMPX	#FBTAB+24
	BLS	THPR2
	LDX	#FBTAB
THPR2	STX	FBX
	NAP	4,THPROC
*
*SCANNING PROCESS
*MAINTAINANCE OF ACTIVE,INACTIVE OBJECT LISTS
*SCANNER DISPLAY
*
SCPROC	JSR	ISCAN
	NAP	2,SCP1
SCP1	JSR	OSCAN
	JSR	SHSCAN
	NAP	2,SCP2
SCP2	JSR	MAPCH1
	JSR	SCNRV
	NAP	4,SCPROC
*
*SCAN ACTIVE OBJECTS FOR OFF SCREEN AREA
*
OSCAN	LDD	BGL
	SUBD	#100*32
	STD	XTEMP
	LDX	#OPTR
	BRA	OSCLP
OSC1	LDD	OX16,X
	SUBD	XTEMP
	CMPD	#500*32
	BLO	OSCLP	IN SCREEN AREA
	LDU	OLINK,X	NO,MOVE TO INACTIVE LIST
	STU	,Y
	LDU	IPTR
	STU	OLINK,X
	STX	IPTR
	LEAX	,Y	X TO NEXT
OSCLP	LEAY	,X
	LDX	,X
	BNE	OSC1
	RTS
*
*SCAN INACTIVE OBJECTS FOR ON SCREEN
*
ISCAN	LDD	BGL
	SUBD	#100*32	100 PIXEL LEFT BUFFER
	STD	XTEMP
	LDX	#IPTR
	BRA	ISCLP
ISC1	LDD	OYV,X
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ADDD	OY16,X
	CMPA	#YMIN	WRAP AROUND
	BHS	SCYV3
	LDA	#YMAX
SCYV3	CMPA	#YMAX
	BLS	SCYV4
	LDA	#YMIN
SCYV4	STD	OY16,X	ADD 8 TIMES VELOCITY
	LDD	OXV,X	UPDATE X POSITION
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ADDD	OX16,X
	STD	OX16,X
	SUBD	XTEMP
	CMPD	#500*32	IN SCREEN AREA
	BHS	ISCLP	NO
	LDU	OLINK,X	YES, TRANSFER TO ACTIVE
	STU	,Y
	LDU	OPTR
	STU	OLINK,X
	STX	OPTR
	LEAX	,Y
ISCLP	LEAY	,X
	LDX	,X
	BNE	ISC1
	RTS
	FCB	$40 CKBYT CSUM E800-EFFF(ACTUAL)
