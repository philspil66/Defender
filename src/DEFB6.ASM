*
*UFO PROCESS START
*PD=OBJECT,PD2=SHOT TIMER
*
UFOST	NEWP	UFOLP,STYPE
	LEAU	,X
	OBI	UFOP1,UFOKIL,$3333
	STX	PD,U
	STU	OBJID,X
	LDD	SEED
	ANDA	#$1F
	ADDD	BGL
	STD	OX16,X
	LSRB
	ADDB	#YMIN
	STB	OY16,X
	CLRA
	CLRB
	STD	OYV,X
	STD	OXV,X
	LDA	#8
	STA	PD2,U	INIT SHOT TIMER
	BSR	UFONV0
	JMP	APVCT
*UFO PROCESS
UFOLP	LDX	PD,U
	LDD	OPICT,X
	CMPD	#NULOB
	BEQ	UFO3
	DEC	PD2,U
	BNE	UFO1
	LDA	UFSTIM
	JSR	RMAX
	STA	PD2,U
	JSR	SHOOT
	BEQ	UFO1
	LDD	#USHSND
	JSR	SNDLD
UFO1	LDU	OPICT,X
	LEAU	OBJL,U	CYCLE IMAGE
	CMPU	#UFOP3
	BLS	UFO2
	LDU	#UFOP1
	BSR	UFONV
UFO2	STU	OPICT,X
UFO3	NAP	6,UFOLP
*
*UFO VELOCITY
*
UFONV	LDA	SEED
	CMPA	UFOSK
	BLS	UFONVX
UFONV0	LDD	#$4001
	STD	XTEMP
	LDD	OX16,X
	SUBD	PLABX
	BMI	UFONV1
	NEG	XTEMP
UFONV1	ADDD	#20*32	X CLOSE?
	CMPD	#40*32
	BLS	UFONV3	YES, DONT SEEK
	LDB	XTEMP
	SEX
	ADDD	PLAXV
	STD	OXV,X
UFONV3	LDA	OY16,X
	SUBA	PLAYC
	BMI	UFONV4
	NEG	XTEMP+1
UFONV4	ADDA	#10
	CMPA	#20	Y CLOSE?
	BLS	UFONVX	YES, QUIT
	CLRB
	LDA	XTEMP+1
	ADDD	PLAYV
	ASRA		DIVIDE BY 2
	RORB
	STD	OYV,X
UFONVX	RTS
*UFOKILL
UFOKIL	DEC	UFOCNT
	KILP	0120,UFHSND
	RTS
*
*PROBE START
*A=#
PRBST	STA	XTEMP
PRBS1	OBI	PRBP1,PRBKIL,$CCCC
	JSR	RAND
	LDD	HSEED
	ANDA	#$3F
	ADDA	#$10
	STD	OX16,X	INIT X
	LSRB
	ADDB	#YMIN
	STB	OY16,X	INIT Y
	LDB	SEED
	ANDB	#$3F
	ADDB	#-$20
PRBS2	SEX
	STD	OXV,X
	LDB	LSEED
	ANDB	#$7F
	SUBB	#$40
	SEX
	BMI	PRBS3	MIN YV
	ORB	#$20
	BRA	PRBS4
PRBS3	ANDB	#$DF
PRBS4	STD	OYV,X
	JSR	APVCT
	DEC	XTEMP
	BNE	PRBS1
PRBSTX	RTS
*
*KILL PROBE
*
PRBKIL	KILO	0210,PRHSND
	LDA	#6
	JSR	RMAX
	LEAY	,X
	JSR	MMSW
	DEC	PRBCNT
	RTS
*
*RANDOM VELOCITY
*X=OBJECT
RANDV	JSR	RAND
	LDB	SEED
	SEX
	ASLB
	ROLA	X2
	STD	OYV,X
	LDB	LSEED
	ANDB	#$3F
	ADDB	#-$20
	SEX
	STD	OXV,X
	RTS
*
*MAKE A MINI SWARMER
*Y=CENTER,A=#
*
MMSW	PSHS	D,X,Y,U
	STA	XTEMP
MMSLP	LDA	SWCNT
	INCA
	CMPA	#20
	BHI	MMSWX	TOO MANY GUYS
	STA	SWCNT
	NEWP	MSWM,STYPE
	LEAU	,X
	OBI	SWPIC1,MSWKIL,$2424
	LDD	OX16,Y
	STD	OX16,X
	LDD	OY16,Y
	STD	OY16,X
	STX	PD,U
	STU	OBJID,X
	BSR	RANDV
	LDD	HSEED
	ANDB	SWAC	
	STB	PD2,U	ACCEL
	ANDA	#$1F
	STA	PTIME,U
	LDA	SWSTIM
	JSR	RMAX
	STA	PD4,U
	STX	OPTR
	DEC	XTEMP
	BNE	MMSLP
MMSWX	PULS	D,X,Y,U,PC
*
*MINI SWARM KILL
*X=OBJECT
MSWKIL	DEC	SWCNT
	JSR	KILOFF	
	PSHS	X
	JSR	KILLOP
	PULS	X
	LDD	OX16,X	
	SUBD	#$40
	STD	OX16,X
	LDD	OY16,X
	SUBA	#2
	STA	OY16,X
	LDU	#SWXP1
	STU	OPICT,X
	JSR	XSVCT
	LDD	#$0115
	JSR	SCORE
	LDD	#SWHSND
	JMP	SNDLD
*
*MINI SWARM PROCESS
*PD=OBJECT,PD2 ACCELERATION,PD4=SHOT TIMER
*
MSWM	LDX	PD,U
	LDB	SWXV
	LDY	PLABX
	CMPY	OX16,X
	BHS	MSWM2
	NEGB
MSWM2	SEX
	STD	OXV,X	X VELOCITY
	BRA	MSWL
MSWLP	LDB	PD2,U
	LDX	PD,U
	LDA	PLAYC	GET Y ACCEL
	CMPA	OY16,X
	BHI	MSWM3
	NEGB
MSWM3	SEX
	ADDD	OYV,X
	CMPD	#$0200
	BLT	MSWM4
	LDD	#$0200
MSWM4	CMPD	#-$200
	BGT	MSWM5
	LDD	#-$200
MSWM5	STD	OYV,X
*DAMPING
	COMA
	COMB
	ASLB
	ROLA
	ASLB
	ROLA
	TFR	A,B
	SEX
	ADDD	OYV,X
	STD	OYV,X
*RANDOM FACTOR
	LDB	SEED
	ANDB	#$1F
	ADDB	#-$10
	SEX
	ADDD	OYV,X
	STD	OYV,X
	LDD	PLABX	PAST HIM?
	SUBD	OX16,X
	ADDD	#150*32
MSP	CMPD	#300*32	WAY PAST?
	BHI	MSWM	GO BACK + GIT IM
*FIRE?
MSWMF	DEC	PD4,U
	BNE	MSWL
	JSR	SWBMB	BOMB GUY
MSWL	NAP	3,MSWLP
*
*SWARM BOMB
*
SWBMB	PSHS	X
	LDD	PLABX
	SUBD	OX16,X
	EORA	OXV,X
	BMI	SWBX	NOT HEADED FOR PLAYER
	LEAY	,X
	SHL	FBOUT,BMBP1,BKIL
	BEQ	SWBX
	LDD	OXV,Y
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	STD	OXV,X
	LDD	#SWSSND	SWARMER SOUND
	JSR	SNDLD
	CLRB
	LDA	PLAYC
	SUBA	OY16,X
SWB1	ASRA
	RORB
	ASRA
	RORB
	ASRA
	RORB
	ASRA
	RORB
	ASRA
	RORB
	STD	OYV,X
SWBX	LDA	SWSTIM
	JSR	RMAX
	STA	PD4,U
	PULS	X,PC
*
*ASTRONAUT PROCESS
*WALK ON TERRAIN
*PD =CURRENT INDEX TO TLIST
*
ASTRO	LDX	PD,U
	LEAX	2,X
	CMPX	#TLIST+32
	BLO	ASTRO1
	LDX	#TLIST
ASTRO1	STX	PD,U
	LDX	,X
	BEQ	ASTX	NOONE THERE
	LDD	OBJX,X	ON SCREEN?
	BEQ	ASTX	NOPE
	LDD	OCVECT,X
	CMPD	#ASTKIL
	BNE	ASTX	CAPTURED
	LDD	OPICT,X
	CMPD	#ASTP2
	BHI	ASTR	WALKING TO RIGHT
*WALKING TO LEFT
	LDA	SEED
	CMPA	#8
	BLS	ASTRX1	TURN AROUND
	JSR	GETALT
	ADDA	#4
	CMPA	#$E8
	BLS	ASTL1
	LDA	#$E8
ASTL1	LDB	#1
	CMPA	OY16,X
	BEQ	ASTL3
	BHI	ASTL2
	NEGB
ASTL2	ADDB	OY16,X
	STB	OY16,X	UP/DOWN
ASTL3	LDU	OPICT,X	TOGGLE IMAGE
	LEAU	OBJL,U
	CMPU	#ASTP2
	BLS	ASTLX2
ASTLX1	LDU	#ASTP1
ASTLX2	LDB	#-$20	MOVE LEFT
	BRA	ASTX1
*WALKING TO RIGHT
ASTR	LDA	SEED
	CMPA	#$8
	BLS	ASTLX1	TURN AROUND
	BSR	GETALT
	ADDA	#15
	CMPA	#$E8
	BLS	ASTR1
	LDA	#$E8
ASTR1	LDB	#1
	CMPA	OY16,X
	BEQ	ASTR3
	BHI	ASTR2
	NEGB
ASTR2	ADDB	OY16,X
	STB	OY16,X
ASTR3	LDU	OPICT,X	IMAGING
	LEAU	OBJL,U
	CMPU	#ASTP4
	BLS	ASTRX2
ASTRX1	LDU	#ASTP3
ASTRX2	LDB	#$20
ASTX1	STU	OPICT,X
	SEX
	ADDD	OX16,X
	STD	OX16,X
ASTX	NAP	2,ASTRO
*
*GET ALTITUDE
*A=ALT,X=OBJ
*
GETALT	PSHS	B,X
	LDD	OX16,X
	LSRA
	RORB
	LSRA
	RORB
	LSRA
	RORB
	LSRA
	RORB
	LSRA	
	RORB
	LSRA
	RORB
	LDX	#ALTBL
	LDA	D,X
	PULS	B,X,PC
*
*KILL ASTRO
*X=OBJECT
ASTKIL	LDA	PCFLG	PLAYER?
	BEQ	ASTK1
	CLRA
	PULS	D,PC	IGNORE
ASTK1	BSR	ASTCLR
	JSR	KILOFF
	LDD	#ASXP1
	STD	OPICT,X
	LDD	OX16,X
	SUBD	#$40
	STD	OX16,X
	JSR	XSVCT
	LDD	#AHSND
	JMP	SNDLD
AKIL1	LDU	OBJID,X
	BEQ	ASTKIL	NOT FALLING
	LDA	PCFLG
	BEQ	AKIL10	SHOT
	LDD	PADDR,U	1ST TIME
	CMPD	#AFALL2
	BEQ	AKIL2
	LDD	#ACSND
	JSR	SNDLD
	PSHS	X
	NEWP	P500,STYPE
	LEAY	,X
	PULS	X
	STX	PD,Y	ASTRO OBJ-500 ROUTINE
AKIL2	LDD	#AFALL2
	STD	PADDR,U
NOKILL	CLRA
	PULS	D,PC
AKIL10	BSR	ASTK1
	JMP	KILLOP
*
*CLEAR ASTRO FROM LIST
*
ASTCLR	LEAY	,X
ASTC0	PSHS	X,U,A
	LDU	#TLIST
	LDA	#64
ASTC1	CMPY	,U++
	BEQ	ASTC2
	DECA	
	BNE	ASTC1
	JSR	ERROR
ASTC2	CLRD
	STD	-2,U
	DEC	ASTCNT
	BNE	ASTCX
	NEWP	TERBLO,STYPE BLOW UP TERRAIN
ASTCX	PULS	X,U,PC,A
*
*TERRAIN BLOW PROCESS
*
TERBLO	LDA	STATUS
	ORA	#2
	STA	STATUS
	CLR	PD,U	LOOP COUNT
	JSR	MAPCH7
	JSR	BGERAS
*OFF SCANNER TERRAIN
	LDX	#STETAB
	LDU	#0
	LDA	#64
TBL1	STU	[,X++]
	DECA
	BNE	TBL1
TBLP0	LDX	OFREE
	LDD	#TEREX
	STD	OPICT,X
	LDB	#2
	STB	XTEMP
TBLP	JSR	RAND
	ANDA	#$3F
	ADDD	BGL
	STD	OX16,X
	JSR	GETALT
	STA	OY16,X
	SUBA	#10
	JSR	XSVCT
	DEC	XTEMP
	BNE	TBLP
	LDA	SEED
	ANDA	#$1F
	LDX	#COLTAB
	LDA	A,X
	STA	PCRAM
	LDD	#AHSND	LIGHTNING BOLT
	JSR	SNDLD
	LDX	#TBL3
	LDA	#2
TBL2	LDB	#8
	STB	OVCNT	PHONY OVERLOAD
	JMP	SLEEP
TBL3	CLR	PCRAM
	LDA	PD,U	GET ITERATION
	LSRA
	LSRA
	LSRA
	INCA
	JSR	RMAX	RANDOM SLEEP
	LDX	#TBL4
	BRA	TBL2
TBL4	INC	PD,U
	LDA	PD,U
	CMPA	#16
	BNE	TBLP0
	LDD	#TBSND
	JSR	SNDLD
	JMP	SUCIDE
*
*250 POINT PROCESS
*PD=ASTRO PROCESS
*
P250	OBI	C25P1,NOKILL,$0000
	LDD	#$0125
	BRA	P5000
*
*500 POINT PROCESS
*X=EARTHLING OBJECT
*
P500	OBI	C5P1,NOKILL,$0000
	LDD	#$0150
P5000	JSR	SCORE
	LDY	PD,U
	LDD	PLAXV
	STD	OXV,X
	LDD	#0
	STD	OYV,X
	LDA	#$11
	STA	OTYP,X
	LDD	OX16,Y
	STD	OX16,X
	LDD	OY16,Y
	BMI	P501
	ADDD	#$1800
	BRA	P502
P501	SUBD	#$2000
P502	STD	OY16,X
	STX	OPTR
	STX	PD,U	OBJECT INDEX
	NAP	50,P503
P503	LDX	PD,U
	JSR	KILOFF
	JMP	SUCIDE
*
*SHOOT AT PLAYER
*X=OBJECT FIRING
*
SHOOT	PSHS	X
	SHL	FBOUT,BMBP1,BKIL
	BEQ	SHOOTX	NONE LEFT
	LDB	SEED
	ANDB	#$1F
	ADDB	#-$10
	ADDB	PLAXC
	SUBB	OBJX,X
	SEX
	ASLB
	ROLA
	ASLB
	ROLA
	STD	OXV,X
	LDB	SEED	REL?
	CMPB	#120
	BLS	SHOOT0	NO
	LDD	PLAXV
	ASLB
	ROLA
	ASLB
	ROLA
	ADDD	OXV,X
	STD	OXV,X
SHOOT0	LDB	LSEED
	ANDB	#$1F
	ADDB	#-$10
	ADDB	PLAYC
	SUBB	OBJY,X
	SEX
	ASLB
	ROLA
	ASLB
	ROLA
	STD	OYV,X
	LDA	#1	RETURN NE
SHOOTX	PULS	X,PC
*
*LANDER SHOOT
*
LSHOT	DEC	PD6,U
	BNE	LSHTX
	LDA	LDSTIM
	JSR	RMAX
	STA	PD6,U
	BSR	SHOOT
	BEQ	LSHTX
	LDD	#LSHSND
	JSR	SNDLD
LSHTX	RTS
*
*START SCHITZOS
*A=NUMBER
*PD=X
*PD2=SHOT TIMER
*
SCZST	PSHS	A
	STA	XTEMP
SCZS0	NEWP	SCZ0,STYPE
	LEAU	,X
	OBI	SCZP1,SCZKIL,$CC33
	JSR	RAND
	LDD	BGL
	SUBD	#300*32
	STD	XTEMP2
	LDD	HSEED
	SUBD	XTEMP2
	CMPD	#600*32
	BHS	SCZS1
	ADDD	#$8000
SCZS1	ADDD	XTEMP2	AVOID PLAYER
	STD	OX16,X
	LDA	SEED
	LSRA
	ADDA	#YMIN
	STA	OY16,X
	CLRD
	STD	OYV,X
	STD	OXV,X
	LDA	SZSTIM
	JSR	RMAX
	STA	PD,U
	JSR	APVCT
	STU	OBJID,X
	STX	PD,U
	INC	SCZCNT
	DEC	XTEMP
	BNE	SCZS0
	PULS	A,PC
*KILL SHITZO
SCZKIL	DEC	SCZCNT
	KILP	0115,SCHSND
	RTS
*
*GET TARGET FROM LIST
*RET EQ IF NONE,D=TRG OBJECT
*U=PROCESS
GTARG	PSHS	X
	LDA	ASTCNT
	BEQ	GTX	NOBODY LEFT
	LDX	TPTR
GT1	LEAX	2,X
	CMPX	#TLIST+64
	BLO	GT2
	LDX	#TLIST
GT2	LDD	,X
	BNE	GT3
	CMPX	TPTR	AROUND ONCE?
	BNE	GT1
	PULS	X,PC
GT3	STX	TPTR	FOUND ONE
	STD	PD2,U
	STX	PD4,U
GTX	PULS	X,PC
*
*START LANDERS
*A=NUMBER
*
LANDST	PSHS	A
	STA	XTEMP
LNDST0	TST	ASTCNT	NO MORE TARGETS
	BNE	LNDST1
	JMP	SCZS0
LNDST1	NEWP	LANDS0,STYPE
	LEAU	,X
	OBI	LNDP1,LKILL,$4433
	JSR	RAND
	LDD	HSEED
	STD	OX16,X
	LDA	#YMIN+2
	STA	OY16,X
	LDD	LNDYV
	STD	OYV,X
	LDA	LDSTIM	SHOOTING TIME
	JSR	RMAX
	STA	PD6,U
	LDA	LNDXV
	JSR	RMAX
	TFR	A,B
	CLRA
	BITB	#1
	BEQ	LNS2
	COMB
	COMA
LNS2	STD	OXV,X
	STU	OBJID,X
	JSR	APVCT
	STX	PD,U
	BSR	GTARG
	INC	LNDCNT
	DEC	XTEMP
	BNE	LNDST0
LNDSTX	PULS	A,PC
*
*LANDER KIDNAP
*PD=OBJECT,PD2=TARGET,PD4=TLIST INDEX
*PD6=SHOT TIMER
LANDS0	LDX	PD,U
	LDY	PD2,U
	LDD	[PD4,U]	TARGET ALIVE?
	BEQ	LNDSAA
	LDA	OCVECT+1,Y
	CMPA	#ASTKIL!.$FF
	BNE	LNDSAA	ORBIT
	LDA	OX16,X
	ANDA	#$FC
	STA	XTEMP
	LDA	OX16,Y
	ANDA	#$FC
	CMPA	XTEMP	CLOSE?
	BEQ	LANDG0	GET IM
	BRA	LANDSA
LNDSAA	LDA	OTYP,X	HYPERABLE
	ANDA	#$FE
	STA	OTYP,X
	JSR	GTARG	RE:TARGET
	LBEQ	SCZ00	NO, FREAK
LANDSA	JSR	GETALT
	SUBA	#50
	SUBA	OY16,X
	BHI	LANDS1
	CMPA	#-20
	BLT	LNDS1	
	CLRA
	CLRB
	BRA	LANDS2
LNDS1	LDD	LNDYV
	COMA
	COMB
	BRA	LANDS2
LANDS1	LDD	LNDYV
LANDS2	STD	OYV,X	NEW Y VEL
	LDD	OPICT,X	APPEARING?
	CMPD	#NULOB
	BEQ	LANDS4
	JSR	LSHOT
	LDU	OPICT,X	NEW PICT
	LEAU	OBJL,U
	CMPU	#LNDP3
	BLS	LANDS3
	LDU	#LNDP1
LANDS3	STU	OPICT,X
LANDS4	NAP	6,LANDS0
*LETS GET HIM
LANDG0	CLRD
	INC	OTYP,X	DONT HYPER ME
	STD	OXV,X
	STD	OYV,X
	LDD	#LNDP1
	STD	OPICT,X
LANDG	LDX	PD,U
	LDY	PD2,U
	LDD	[PD4,U]
	BEQ	LNDSAA	DEAD
	LDA	OCVECT+1,Y
	CMPA	#ASTKIL!.$FF
	BNE	LNDSAA	TAKEN
	LDD	OX16,Y
	ANDB	#$E0
	STD	XTEMP2
	LDD	OX16,X
	ANDB	#$E0
	CMPD	XTEMP2
	BEQ	LNDG2
	BLT	LNDG1
	LDB	#-$20
	BRA	LANDG1
LNDG1	LDB	#$20
LANDG1	SEX
	ADDD	OX16,X
	STD	OX16,X
LNDG2	LDA	OY16,Y
	SUBA	#12
	CMPA	OY16,X
	BEQ	LANDG3
	LDD	LNDYV
	BHS	LANDG2
	COMA
	COMB
LANDG2	ADDD	OY16,X
	STD	OY16,X
LNDG20	JSR	LSHOT
	NAP	1,LANDG
*ARE	WE	ON	HIM?
LANDG3	LDD	OX16,X
	ADDD	#$0040
	SUBD	OX16,Y
	CMPD	#$80
	BHI	LNDG20	NOPE
	LDD	#LKIL1	CHANGE KILL VECTOR
	STD	OCVECT,X
	LDD	LNDYV
	COMB
	COMA
	STD	OYV,X	SPLIT
	STD	OYV,Y
	LDD	#LPKSND
	JSR	SNDLD
	LDD	#AKIL1
	STD	OCVECT,Y
*FLEE
LANDF	LDU	CRPROC
	LDX	PD,U
	LDA	OY16,X
	CMPA	#YMIN+8
	BLS	LANDFX	ALL DONE
	JSR	LSHOT
	NAP	4,LANDF
*PULL HIM INSIDE
LANDFX	LDD	#LSKSND
	JSR	SNDLD
LNDFXA	LDX	PD,U
	LDY	PD2,U
	LDD	[PD4,U]
	BNE	LNDFX0
	JSR	KILOFF	GIVE UP
	DEC	LNDCNT
	INC	LNDRES
	JMP	SUCIDE
LNDFX0	CLRD
	STD	OYV,X
	STD	OYV,Y
	LDA	OY16,Y
	CMPA	OY16,X
	BLS	LNDFX1
	DEC	OY16,Y
	LDA	#$12
	JSR	SNDOUT
	NAP	1,LNDFXA
LNDFX1	LEAX	,Y	KILL ASTRO
	LDD	OBJX,Y	CENTER EARTHLING BLOW
	ADDA	#1
	STD	CENTMP
	JSR	ASTK1
SCZ00	DEC	LNDCNT
	INC	SCZCNT
	LDX	PD,U
	CLR	OTYP,X	OK TO HYPER
	LDD	#SCZP1
	STD	OPICT,X
	LDD	#$CC33
	STD	OBJCOL,X
	LDD	#SCZKIL
	STD	OCVECT,X
	LDA	SZSTIM
	STA	PD2,U
*
*I AM SCHITZO I,M FEELING FINE
*PD=OBJECT,PD2=SHOT TIME
*
SCZ0	LDX	PD,U
	LDB	SZXV
	LDY	PLABX
	CMPY	OX16,X
	BGE	SCZ1
	NEGB
SCZ1	SEX
	STD	OXV,X	SEEK X
	LDD	PLABX	X	CLOSE?
	SUBD	OX16,X
	ADDD	#380
	CMPD	#$700
	BLS	SCZ6	SEEK Y
	LDA	PLAYC	AVOID Y
	SUBA	OY16,X
	BLS	SCZ2
	CMPA	#8
	BHI	SCZ3
	LDD	SZYV
	COMA
	COMB
	BRA	SCZ5
SCZ2	CMPA	#-8
	BGT	SCZ4
SCZ3	CLRD
	BRA	SCZ5
SCZ4	LDD	SZYV
SCZ5	STD	OYV,X
	BRA	SCZ10
SCZ6	LDA	PLAYC	SEEK Y
	CMPA	OY16,X
	LDD	SZYV
	BHS	SCZ7
	COMA
	COMB
SCZ7	STD	OYV,X
	LDD	OBJX,X
	BEQ	SCZ12	NOT ON SCREEN
*RANDOM Y HOP
SCZ10	LDB	SZRY
	LDA	SEED
	BMI	SCZ11
	NEGB
SCZ11	ADDB	OY16,X
	CMPB	#YMIN
	BHS	SCZ110
	LDB	#YMAX
SCZ110	STB	OY16,X
	DEC	PD2,U	SHOT TIME
	BNE	SCZ12
	LDA	SZSTIM
	JSR	RMAX
	STA	PD2,U
	JSR	SHOOT
	BEQ	SCZ12
	LDD	#SSHSND
	JSR	SNDLD
SCZ12	NAP	3,SCZ0
*
*KILL KIDNAPPING LANDER
*
LKIL1	LDU	OBJID,X	GOT A PASSENGER?
	LDD	[PD4,U]
	BEQ	LKILL
	LDD	#0
	LDD	#0	SPACE SAVER FO SOUND CALL
	PSHS	X
	NEWP	AFALL,STYPE START HIM FALLING
	LDU	PD2,U
	STU	PD,X
	LDD	#ASCSND
	JSR	SNDLD	SCREAM.....
	LDD	#0
	STD	OYV,U
	STX	OBJID,U
	PULS	X
*KILL LANDR
LKILL	DEC	LNDCNT
	KILP	0115,LHSND
	RTS
*
*ASTRONAUT FALL
*
AFALL	LDX	PD,U
	LDD	#8	ACCEL DOWNWARD
	ADDD	OYV,X
	CMPD	#$300
	BHS	AFALL0
	STD	OYV,X
AFALL0	JSR	GETALT
	CMPA	OY16,X	HIT GROUND?
	BHI	AFALL1	NO
	LDD	OYV,X
	CMPD	#$E0	FATAL?
	BLS	ALAND	NO
	LDD	OBJX,X
	ADDD	#$0107
	STD	CENTMP	CENTER OF EXPLOSION
	JSR	ASTK1
	JMP	SUCIDE
AFALL1	NAP	4,AFALL
AFALL2	LDX	PD,U
	LDD	#0
	STD	OYV,X
	LDA	PLAY16
	ADDA	#10
	STA	OY16,X
	LDD	PLABX
	ADDD	#$0080
	STD	OX16,X
	JSR	GETALT
	CMPA	OY16,X
	BLO	ALAND0	WERE ON THE GROUND
	NAP	1,AFALL2
ALAND	PSHS	X
	LDX	#P250
	BRA	ALND00
ALAND0	PSHS	X
	LDX	#P500
ALND00	LDA	#STYPE
	JSR	MKPROC
	LEAY	,X
	PULS	X
	STX	PD,Y	ASTRO OBJECT TO 500 PROC
	LDD	#0
	STD	OBJID,X
	STD	OYV,X
	LDD	#ASTKIL
	STD	OCVECT,X
	LDD	#ALSND
	JSR	SNDLD
	JMP	SUCIDE
*
*TIEST
*A=# IN SQUAD 1-4
*
TIEST	STA	XTEMP
	LDB	TIEXV
	COM	TFLG	ALTERNATE DIRECTIONS
	BMI	TIEST1
	NEGB
TIEST1	STB	XTEMP+1	X VELOCITY
	LDX	#TIE
	LDA	#STYPE
	JSR	MSPROC	MAKE A SUPER PROCESS
	LEAU	,X	SAVE INDEX
	LDA	XTEMP
	STA	PD+8,U
	CLRD
	STD	PD,U
	STD	PD2,U
	STD	PD4,U
	STD	PD6,U
TIEST2	OBI	TIEP1,TIEKIL,$8888
	LDB	XTEMP+1
	SEX
	STD	OXV,X
	CLRD
	STD	OYV,X
	LDA	XTEMP	X SPACING
	LSRA
	RORB
	ADDA	XTEMP
	ADDD	PLABX
	ADDA	#$80
	STD	OX16,X
	LDA	#$50
	STA	OY16,X
	STA	PD+9,U	CRUISE ALT
	STU	OBJID,X
	STX	OPTR
	LDA	XTEMP
	ASLA
	ADDA	#PD-2
	STX	A,U
	DEC	XTEMP
	BNE	TIEST2	
TIESX	RTS
*
*TIE PROCESS
*PD,PD2,PD4,PD6=TIES,0000=DEAD
*PD8=#IN SQUAD,PD+9=CRUISE ALT
*
TIE	LDA	SEED	ADD RANDOM Y
	ANDA	#$6
	ADDA	#PD
	LDX	A,U
	LBEQ	TIEX	NONE THERE
	LDB	SEED
	LDA	#OBJL
	ANDB	#$3F
	ADDB	#-$20
	BMI	TIE0
	NEGA
TIE0	LDY	OPICT,X	NEW IMAGE
	LEAY	A,Y
	CMPY	#TIEP1
	BHS	TIE01
	LDY	#TIEP1
TIE01	CMPY	#TIEP4
	BLS	TIE02
	LDY	#TIEP4
TIE02	STY	OPICT,X
	SEX
	ADDD	OYV,X	NEW Y VEL
	STD	OYV,X
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	TFR	A,B
	NEGB
	SEX
	ADDD	OYV,X
	STD	OYV,X
	LDA	OBJY,X	ON SCREEN?
	BNE	TIE09	YES
*OFF SCREEN CASE
*CRUISE ALT ADJUST
	LDA	SEED
	CMPA	#$40
	BHI	TIE06	BYPASS THIS TIME
	ANDA	#$3
	ADDA	#-2
	ADDA	PD+9,U
	CMPA	#$40	LIMIT CHECKING
	BHS	TIE03
	LDA	#$40
TIE03	CMPA	#$68
	BLO	TIE04
	LDA	#$68
TIE04	STA	PD+9,U
*Y VEL ADJUST
TIE06	LDA	PD+9,U
	SUBA	OY16,X
	ADDA	#$10
	CMPA	#$20
	BLS	TIEX
	SUBA	#$10
	BMI	TIE07
	LDD	#-$10
	BRA	TIE08
TIE07	LDD	#$10
TIE08	ADDD	OYV,X
	STD	OYV,X
	BRA	TIEX
*ON SCREEN
TIE09	SUBA	PLAYC	CLOSE TO PLAYER
	BMI	TIE20	BELOW
	CMPA	#$20
	BLO	TIE10	CLOSE
	LDD	#$FFF0
	BRA	TIE30
TIE10	CMPA	#$10
	BHI	TIE31
	LDD	#$0010
	BRA	TIE30
TIE20	CMPA	#-$20
	BGT	TIE21
	LDD	#$0010
	BRA	TIE30
TIE21	CMPA	#-$10
	BLT	TIE31
	LDD	#$FFF0
TIE30	ADDD	OYV,X
	STD	OYV,X
TIE31	LDA	LSEED	BOMB?
	ANDA	#$7
	BNE	TIEX	NO
	BSR	BOMBST
TIEX	NAP	1,TIE
*
*TIE KILL
*
TIEKIL	KILO	0125,TIHSND
	DEC	TIECNT
	LDU	OBJID,X
	LEAY	PD,U
TIEK1	CMPX	,Y++
	BNE	TIEK1
	CLRD
	STD	-2,Y
	DEC	PD+8,U	
	BNE	TIEKX
	LEAX	,U
	JSR	KILL
TIEKX	RTS
*
*START BOMB
*
BOMBST	LDA	BMBCNT
	CMPA	#10
	BHS	BMBSTX
	SHL	BMBOUT,BMBP1,BKIL
	BEQ	BMBSTX
	LDB	HSEED
	SEX
	ASLB
	ROLA
	LDA	SEED
	ANDA	#$1F
	INCA
	STA	ODATA,X	LIFETIME
BMBSTX	RTS
KILOFF	JSR	KILLOB
*
*OFF OBJECT
*X=OBJECT
*
OFSHIT	PSHS	X,U,D,Y
	JSR	MAPCH2	SELECT CHARS
	LDD	OBJX,X
	LDY	OPICT,X
	JSR	[OBJDEL,Y]
	PULS	X,U,D,Y,PC
*
*KILL ROUTINE
*X=OBJECT
*RET=SCORE MSB,LSB
*RET+2=SOUND
*
KILP01	PSHS	X
	JSR	KILLOP
	PULS	X
	BRA	KILO01
KILPOS	PSHS	X
	JSR	KILLOP
	PULS	X
KILOS	JSR	KILLOB
KILO01	PSHS	U,D
	LDU	4,S
	PULU	D
	JSR	SCORE
	BSR	EXST
	PULU	D
	STU	4,S
	JSR	SNDLD
	PULS	U,D,PC
*
*EXPLODE
*X=OBJECT TO BLOW
*
EXST	PSHS	X,U,D,Y
	BSR	OFSHIT
	JSR	XSVCT
	PULS	X,U,D,Y,PC
*
*COLOR TIES
*PD =TCTAB INDEX
TIECOL	LDX	#TCTAB
TIECL1	STX	PD,U
	NAP	6,TIECL
TIECL	LDX	PD,U
	LDD	,X++
	STD	PCRAM+$D
	LDA	,X+
	STA	PCRAM+$F
	CMPX	#TCTAB+9
	BLO	TIECL1
	BRA	TIECOL
*TIE COLOR TABLE
TCTAB	FCB	$81,$81,$2F
	FCB	$81,$2F,$07
	FCB	$2F,$81,$07
*
*COLOR BOMBS
*
CBOMB	LDA	#$FF
	STA	PCRAM+$A
	CLR	PCRAM+$C
	NAP	3,CBMB1
CBMB1	LDA	SEED
	ANDA	#$1F
	LDX	#COLTAB
	LDA	A,X
	STA	PCRAM+$A
	STA	PCRAM+$C
	LDX	#BMBD10
	CMPX	BAX
	BNE	CBMB2
	LDX	#BMBD20
CBMB2	STX	BAX
	NAP	6,CBOMB
*
*FLASH PLAYER-UP PROCESS
*
FLPUP	LDA	SCRFLG	SCORED?
	BNE	FLPX
	LDX	#P1DISP
	LDA	CURPLR
	DECA
	BEQ	FLP1
	LDX	#P2DISP
FLP1	LDD	#256*24+8
	JSR	BLKCLR
	NAP	8,FLP2
FLP2	JSR	SCRTRN
	NAP	12,FLPUP
FLPX	DIE
*
*SLEEP IN ROMOTE BLOCK
*PD+6,7=WAKEUP ADDR
*PD+5=BLOCK
SLEEPP	LDU	CRPROC
	STX	PD+6,U
	LDB	MAPCR	GET CURRENT BLOCK
	STB	PD+5,U	SAVE IT FOR THE ELL OF IT
	LDX	#SLEEP$	WAKEUP
	JMP	SLEEP
SLEEP$	LDA	PD+5,U	GET THE BLOCK
	BSR	MAPCHG
	JMP	[PD+6,U] AND "RETURN"
*
*LONG JSR BLOCK SWAPPING
*RET= ADDR
*RET+2= BLOCK
*CALLING ROUTINE BLOCK IS SAVED
*
LJSR	LEAS	-3,S	MAKE ROOM
	PSHS	A,U	SAVE TEMPS
	LDA	MAPCR	GET BLOCK
	STA	5,S	PUT WITH RETURN ADDR
	LDU	6,S	GET "RETURN ADDR"
	LDA	2,U	GET NEW BLOCK
	LDU	,U
	STU	3,S
	BSR	MAPCHG	MAKE NEW BLOCK
	PULS	A,U	RESTORE
	JSR	[0,S]	DO IT
	PSHS	A,U	SAVE AGAIN
	LDA	5,S	GET OLD BLOCK BACK
	BSR	MAPCHG	HOW BORING
	LDU	6,S	GET "RETURN ADDR"
	LEAU	3,U	MAKE REAL
	STU	6,S	PUT BACK ON STACK
	PULS	A,U	RESTORE
	LEAS	3,S	TAKE AWAY BYTEE
	RTS		AND GET THE PHUCK OUT OF HERE.
*
*BACKGROUND TERRAIN INIT
*
BGI	BSR	MAPCH7
	JMP	BGINIT
*
*MAP CHANGE SUBROUTINES
*
MAPCH7	LDA	#7
	BRA	MAPCHG
MAPCH2	LDA	#2
	BRA	MAPCHG
MAPCH3	LDA	#3
	BRA	MAPCHG
MAPCH1	LDA	#1
MAPCHG	STA	MAPCR
	STA	MAPC
	RTS
*
*MESSAGE WRITER
*X=SCREEN ADDR, U=MESS VECT ADDR
*
MESS	PSHS	X,Y,D,U,DP,CC
	BSR	MAPCH2
	JSR	WTBV
	PULS	X,Y,D,U,DP,CC,PC
*
*AUDIT ROUTINE
*INC METER B
AUDIT	BSR	MAPCH3
	JMP	VAUD1
	FCB	$39	CKBYT CSUM F000-F7FF(ACTUAL)
*
*WRITE AN OBJECT TO SCREEN
*Y=OBJECT DESCRIPTOR ADDR
*D=SCREEN ADDR
*ALL SAVED
*REENTRANT
*
CWRIT	PSHS	A,B,X,Y,U
	TFR	D,X
	LDA	MAPCR	MAP SWAPPING
	PSHS	A
	LDA	#2
	STA	MAPCR
	STA	MAPC
	LDD	OBJW,Y	GET WIDTH,LENGTH
	LDY	OBJP0,Y	GET DATA
	PSHS	D	SAVE WIDTH,HEIGHT
	BITB	#1	ODD LENGTH?
	BNE	CWRT1
*EVEN BYTE COUNT
CWRT00	SUBB	#2
CWRT0	LDU	B,Y
	STU	B,X
	SUBB	#2
	BPL	CWRT0
	LDB	1,S
	LEAX	$100,X
	LEAY	B,Y
	DECA
	BNE	CWRT00
	BRA	CWRTX
*ODD BYTE COUNT
CWRT1	DECB
	LDA	B,Y
	STA	B,X
	SUBB	#2
	BMI	CWRT3
CWRT2	LDU	B,Y
	STU	B,X
	SUBB	#2
	BPL	CWRT2
CWRT3	LDB	1,S	GET HEIGHT
	LEAX	$100,X
	LEAY	B,Y
	DEC	,S	DEC WIDTH
	BNE	CWRT1
CWRTX	LEAS	2,S	GET MAP +2 PHONIES
	PULS	A
	STA	MAPCR
	STA	MAPC
	PULS	A,B,X,Y,U,PC
*
*COFF
*Y=OBJECT DESCRIPTOR ADDR
*D=SCREEN ADDR
*
COFF	PSHS	A,B,X,U
	TFR	D,X
	LDA	MAPCR
	PSHS	A
	LDA	#2	SWAP IN MAP
	STA	MAPCR
	STA	MAPC
	LDD	OBJW,Y	GET WIDTH ,HEIGHT
COFFA	LDU	#0
	PSHS	B	SAVE HT
	BITB	#1	ODD LENGTH?
	BNE	COFF1	YES
*EVEN BYTE COUNT
COFF00	SUBB	#2
COFF0	STU	B,X
	SUBB	#2
	BPL	COFF0
	LDB	,S	GET HT
	LEAX	$100,X
	DECA
	BNE	COFF00
	BRA	COFFX
*ODD BYTE COUNT
COFF1	DECB
	CLR	B,X
	SUBB	#2
	BMI	COFF3
COFF2	STU	B,X
	SUBB	#2
	BPL	COFF2
COFF3	LDB	,S	GET HT
	LEAX	$100,X
	DECA
	BNE	COFF1
COFFX	PULS	A,B	PULL MAPCR,HEIGHT
	STB	MAPCR
	STB	MAPC
	PULS	A,B,X,U,PC
*
*BLOCK CLEAR
*X=ADDR, D=W,H
*
BLKCLR	PSHS	A,B,X,U
	LDA	MAPCR	SAVE MAP
	PSHS	A
	LDA	1,S
	BRA	COFFA
*
*SCREEN CLEAR
*
SCRCLR	PSHS	D,X,Y,U
	LDU	#$9C00
	LDX	#0
	TFR	X,Y
	TFR	X,D
SCLRLP	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X,Y,D
	PSHU	X	32 AT A CRACK
	CMPU	#0
	BNE	SCLRLP
	PULS	D,X,Y,U,PC
*
*CLEAR ACTIVE SCREEN
*
SCLR1	PSHS	D,X,Y,U,DP
	LDU	#$9C00
	LDX	#0
	TFR	X,Y
	TFR	X,D
	TFR	A,DP
SC0LP	LDB	#8
SC1LP	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	DECB
	BNE	SC1LP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X,Y,A,DP
	PSHU	X,Y
	LEAU	-YMIN,U
	CMPU	#0
	BNE	SC0LP
	PULS	D,X,Y,U,DP,PC
*
* RESET PROCESSING
*
RESET	CLR	MAPC	SETUP PIAS
	LDX	#$CC00
	CLR	1,X
	CLR	3,X
	CLR	5,X
	CLR	7,X
	LDA	#$C0
	STA	,X
	LDA	#$FF
	STA	2,X
	CLR	4,X	
	CLR	6,X
	LDA	#4
	STA	3,X
	STA	5,X
	STA	7,X
	ORA	#$10	SET FOR SLAM SW ON ^TRANS
	STA	1,X	AND PROGRAM
	LDX	#$C000	SET INTERESTING SCREEN COLORS
	LDA	#$C0
RESET1	STA	,X+
	LDB	#$B5
	MUL
	CMPX	#$C010
	BNE	RESET1
	ORCC	#$80	SET AUTO CYCLE NOT FLAG <=================TEMPORARY
	ANDCC	#$EF	CLEAR COMPREHENSIVE/INITIAL FLAG(I BIT)
*
* POWER UP RAM TEST
*
	LDY	#2	SET TEST COUNTER
	CLRA
	TFR	A,DP	CLEAR BAD RAM MAP(BIT 0-BLOCK 1, B1-BL2 , B2-BL3)
	ANDCC	#$BF	INITIALIZE BAD RAM IN PAGE FLAG(F BIT)
	CLRB
RAM2	TFR	D,U	SAVE SEED
	LDX	#0	GET STARTING ADDRESS INTO POINTER
RAM3	COMB		RANDOM NUMBER ROUTINE
	BITB	#9
	BNE	RAM4
	COMB
	RORA
	RORB
	BRA	RAM6
RAM4	COMB
	BITB	#9
	BNE	RAM5
	RORA
	RORB
	BRA	RAM6
RAM5	LSRA
	RORB
RAM6	STD	,X++	LOAD INTO ADDRESS AND ADVANCE
	EXG	X,D	WATCHDOG TEST
	TSTB
	BNE	RAM6B
	LDB	#$38	RESET WATCHDOG
	STB	$C3FC
	TFR	CC,B	CHECK COMPREHENSIVE/INITIAL FLAG
	BITB	#$10
	BEQ	RAM6A	SKIP IF INITIAL
	CLR	MAPC	SELECT PIA BLOCK
	LDB	$CC00	CHECK IF ADVANCE PRESSED AND AUTO UP
	COMB
	BITB	#3
	BEQ	RAM11A	TEST ABORTED, RETURN TO COMPREHENSIVE
RAM6A	CLRB
RAM6B	EXG	X,D
	CMPX	#$C000	ADDRESS POINTER DONE?
	BNE	RAM3	NO, LOOP
	TFR	U,D	GET SEED
	LDX	#0	GET STARTING ADDRESS INTO POINTER
RAM7	COMB		RANDOM NUMBER ROUTINE
	BITB	#9
	BNE	RAM8
	COMB
	RORA
	RORB
	BRA	RAM10
RAM8	COMB
	BITB	#9
	BNE	RAM9
	RORA
	RORB
	BRA	RAM10
RAM9	LSRA
	RORB
RAM10	CMPD	,X++	CHECK FOR MATCH
	BEQ	RAM11	NO, ERROR
	EXG	D,Y	SAVE ERROR
	TFR	CC,A	CHECK COMPREHENSIVE/INITIAL FLAG
	BITA	#$10
	BEQ	RAM10A	SKIP IF INITIAL
	LDA	#DIABLK	ERROR, RETURN TO COMPREHENSIVE
	STA	MAPCR
	STA	MAPC	AND IN HARDWARE
	JMP	VRAM10
RAM10A	CLRA
	EXG	Y,D	RECOVER COUNTER
	ORCC	#$40	SET BAD RAM IN PAGE FLAG
RAM11	EXG	X,D	END OF PAGE TEST
	TSTB
	BNE	RAM17	PAGE NOT DONE
	TFR	CC,B	CHECK COMPREHENSIVE/INITIAL FLAG
	BITB	#$10
	BEQ	RAM11B	SKIP IF INITIAL
	LDB	$CC00	CHECK IF ADVANCE PRESSED AND AUTO UP
	COMB
	BITB	#3
	BNE	RAM16	NOT YET, SKIP ERROR PROCESSING SAVE DP
RAM11A	LDA	#DIABLK	TEST ABORTED, RETURN TO COMPREHENSIVE
	STA	MAPCR	IN FLAG
	STA	MAPC
	JMP	VRAM20
RAM11B	TFR	CC,B	GET CONDITION CODES
	BITB	#$40	CHECK BAD RAM IN PAGE FLAG
	BEQ	RAM16	RAM PAGE OK-SKIP ERROR PROCESSING
* ERROR PROCESSING
	ANDCC	#$BF	CLEAR BAD RAM IN PAGE FLAG
	TFR	DP,B	GET BAD RAM MAP
	TFR	A,DP	SAVE ADDRESS
RAM12	SUBA	#3	FIND BLOCK NUMBER
	BCC	RAM12
	INCA
	BNE	RAM13
	ORB	#2	BLOCK 2
	BRA	RAM15
RAM13	INCA
	BNE	RAM14
	ORB	#1	BLOCK 1
	BRA	RAM15
RAM14	ORB	#4	BLOCK 3
RAM15	TFR	DP,A	RECOVER ADDRESS
	TFR	B,DP	SAVE BAD RAM MAP
*
RAM16	LDB	#$38	RESET WATCHDOG
	STB	$C3FC
	CLRB
RAM17	EXG	X,D
	CMPX	#$C000	CHECK FOR END OF MEMORY
	LBNE	RAM7	NO?, LOOP
	LEAY	-1,Y
	LBNE	RAM2	REPEAT TEST
	TFR	CC,B
	TSTB		CHECK AUTO CYCLE NOT FLAG  <================TEMPORARY
	BMI	RAM17B	CLEAR, CONTINUE RAM TEST
	LDB	#DIABLK	SELECT DIAGNOSTIC BLOCK
	STB	MAPC
	JSR	INIT	INITIALIZE DIRECT PAGE VARIABLES
	JMP	VOUND0	NEXT TEST IN CYCLE          <================
RAM17B	BITB	#$10	CHECK COMPREHENSIVE/INITIAL FLAG-SAVE RANDOM NUMBER 
	LBNE	RAM2	COMPREHENSIVE, CONTINUE
* FIND GOOD RAM
	LDA	#$9E
	TFR	DP,B	GET BAD RAM MAP
	TSTB
	BEQ	RAM19	DP <= $9E, IF ALL RAM OK
RAM18	INCA		DP <= $9F, IF (BLOCK 2 OR 3 BAD) AND 1 OK
	LSRB		DP <= $A0, IF BLOCK 1 BAD AND 2 OK
	BCS	RAM18	DP <= $A1, IF ONLY BLOCK 3 OK
RAM19	TFR	A,DP	DP <= $A2, IF ALL BLOCKS BAD, GOOD LUCK!
	ADDA	#$1	SET HARDWARE STACK AT TOP OF GOOD RAM BLOCK
	CLRB
	TFR	D,S
	JSR	INIT	SETUP FOR TEXT ROUTINE
* 
* POWER UP ROM TEST
*
ROM0	LDU	#ROMMAP	GET ROM MAPC ADDRESS
ROM1	CLR	MAPC	RESET WATCHDOG
	LDA	#$38
	STA	$C3FC
	LDA	,U	GET DESCRIP
	LDB	,U
	BEQ	ROM9	NO PART?, NEXT ROM
	ANDB	#$F	EXTRACT BLOCK #
	STB	MAPC	SELECT BLOCK
	ANDA	#$70	EXTRACT ADDRESS
	LSRA
	ADDA	#$C0
	CLRB
	TFR	D,X	ADDRESS IN X
	LDY	#$800	SET BYTE COUNTER
	TFR	U,D	INITIALIZE CHECKSUM TO ROM NUMBER
	SUBB	#(ROMMAP-2)!.$FF
	LSRB
	CLRA		CLEAR CARRY
*ADDER LOOP
ROM2	ADCB	,X+	ADD AND ROTATE CARRY
	LEAY	-1,Y	DECREMENT COUNTER
	BNE	ROM2	DONE
*
	CMPB	#$80	CHECK THE SUM
	BEQ	ROM9	OK?, NEXT ROM
	TFR	CC,A	GET COMPREHENSIVE/INITIAL FLAG
	BITA	#$10	TEST IT
	BEQ	IDIS20	DISPLAY INITIAL ERROR
ROM2A	JMP	MAPCH3	SELECT DIAG AND RETURN
ROM9	LEAU	1,U
	CMPU	#ROMMAP+24
	BNE	ROM1
	TFR	CC,A
	BITA	#$10	TEST COMPREHENSIVE/INITIAL FLAG
	BNE	ROM2A	RETURN TO COMPREHENSIVE
*
* INITIAL TEST RESULTS DISPLAY
*
IDIS1	TFR	DP,A	CHECK IF RAM OK <== ROM OK STARTING POINT
	CMPA	#$9E
	BNE	IDIS10	BRANCH IF RAM BAD
* ROM OK, RAM OK
	JSR	MAPCH3	SELECT DIAG BLOCK
	JSR	VORAOK	DISPLAY ROUTINE IN DIAGNOSTIC BLOCK
	BRA	GAMEOV	NOW GO TO GAME OVER
* ROM OK, RAM BAD
IDIS10	LDB	#$40	BAD RAM INDICATION LEDS
	BSR	BADLY	LITE LEDS, SELECT DIAG BLOCK
	JSR	VOOKRB	DISPLAY ROUTINE IN DIAGNOSTIC BLOCK
	BRA	GAMEOV	NOW GO TO GAME OVER
*
*B>LEDS
*ERROR DELAY TO READ LEDS
*SELECT DYKE BLOCK, RET
*
BADLY	LDX	#$CC00
	STB	,X	LITE LEDS
	STB	2,X
	CLR	$D000	SELECT BLOCK 0
BADLY1	LDA	#$38	ONE FOR THE DOGGIE
	STA	$C3FC
	LEAX	-1,X
	BNE	BADLY1
	JMP	MAPCH3
* ROM BAD
IDIS20	LDB	#$80	BAD ROM INDICATION LEDS
	BSR	BADLY	LITE LEDS, SELECT DIAG BLOCK
	JSR	VOMBAD	DISPLAY ROUTINE IN DIAGNOSTIC BLOCK
*
*GAME OVER
*
GAMEOV	JSR	VPWRUP
	JMP	SINIT
*
* STORE B,X BLOCK 0
*
STBXB0	PSHS	A,CC
	LDA	MAPCR
	PSHS	A
	CLR	MAPCR
	CLR	MAPC
	STB	,X
STBXB	PULS	A
	STA	MAPCR
	STA	MAPC
	PULS	CC,A,PC
*
* LOAD B ,X - BLOCK 0
*
LDBXB0	PSHS	A,CC	SAVE STATE
	LDA	MAPCR	GET CURRENT ACTIVE BLOCK
	PSHS	A	SAVE IT
	CLR	MAPCR	MAKE IT 0
	CLR	MAPC	AND IN HARDWARE
	LDB	,X	GET THE DATA
	BRA	STBXB	FINISH ABOVE
*
* INITIALIZE DP VARIABLES FOR TEXT/DIAG USE
*
INIT	PSHS	D	SAVE STATE
	CLR	MESPT
	CLR	ASCNTR
	LDA	#DIABLK	SELECT DIAG BLOCK
	STA	MAPCR	INTO CURRENT
	STA	ASLAST
	LDD	#$FFFF	INIT NUMBER
	STD	NUMBER
	PULS	D,PC	GO BACK
*
* CMOS PRIMITIVE FOR READING
*
RCMOS	LDA	1,X	GET LSB
	ANDA	#$0F	LEAVE ONLY LS
	PSHS	A	SAVE IT
	LDA	,X++	GET MSB + AUTO INC
	ASLA
	ASLA
	ASLA
	ASLA		SHIFT LS TO MSB
	ADDA	,S+	GET LSB + FIX STACK
	RTS		BYE
*
* READ CMOS INTO A
*
RCMOSA	PSHS	B	SAVE A WHILE
	LDB	MAPCR	GET CURRENT
	PSHS	B	SAVE IT
	CLR	MAPCR	NOW SET TO BLOCK 0
	CLR	MAPC	AND HARDWARE
	BSR	RCMOS	GO READ IT IN A
RCMOSX	PULS	B	GET OLD BLOCK #
	STB	MAPCR	SAVE IT AGAIN
	STB	MAPC	AND IN HARDWARE
	PULS	B,PC	CLEAN + GO
*
* READ CMOS INTO D POINTED TO BY X: A=X,X+1; B=X+2,X+3
*
RCMOSD	BSR	RCMOSA	GET THE FIRST BYTE+FALL THRU FOR 2ND
*
* READ CMOS INTO B POINTED TO BY X
*
RCMOSB	PSHS	A	SAVE A
	BSR	RCMOSA	GET IN A
	TFR	A,B	PUT IT IN B
	PULS	A,PC	DONE
*
* WRITE TO CMOS PRIMITIVE
*
WCMOS	PSHS	A	SAVE WHATS TO BE WRITTEN
	STA	1,X	SAVE LSB
	LSRA		SHIFT MS TO LS
	LSRA
	LSRA
	LSRA
	STA	,X++	SAVE MSB AND AUTO INC
	PULS	A,PC	DONE
*
* WRITE TO CMOS FROM A AT X
*
WCMOSA	PSHS	B	SAVE STATE
	LDB	MAPCR	GET CURRENT MAP
	PSHS	B	SAVE ON STACK
	CLR	MAPCR	POINT TO BLOCK 0
	CLR	MAPC	AND IN HARDWARE
	BSR	WCMOS	WRITE A TO CMOS
	PULS	B	GET BLOCK SAVED
	STB	MAPCR	SAVE IT
	STB	MAPC	AND IN HARDWARE
	PULS	B,PC	CLEAN UP + GO
*
* WRITE CMOS FROM D TO X: A=X,X+1; B=X+2,X+3
*
WCMOSD	BSR	WCMOSA	DO IT AND FALL THRU FOR 2ND
*
* WRITE CMOS FROM B TO X
*
WCMOSB	PSHS	A	SAVE A
	TFR	B,A	MOVE B TO A
	BSR	WCMOSA	FAKE IT
	PULS	A,PC	DONE
*
* ROM ADDRESS MAP - ONE BYTE EVERY 2K 
*                   FIRST 2 BYTES FOR ROM1,
*                    NEXT 2 BYTES FOR ROM2, ETC.
*
*       BITS 0-3 BLOCK NUMBER (USE $F FOR MAIN MEMORY)
*       BITS 6-4 ADDRESS 0 FOR $C000
*                        1 FOR $C800
*                        2 FOR $D000 
*                        3 FOR $D800
*                        4 FOR $E000 
*                        5 FOR $E800 
*                        6 FOR $F000 
*                        7 FOR $F800     
*       00 FOR NO ROM
*
ROMMAP	FCB	$20,$00	ROM 1
	FCB	$40,$50	ROM 2
	FCB	$60,$70	ROM 3
	FCB	$30,$00	ROM 4
	FCB	$00,$00	ROM 5
	FCB	$07,$00	ROM 6
	FCB	$03,$00	ROM 7
	FCB	$02,$00	ROM 8
	FCB	$01,$00	ROM 9
	FCB	$13,$00	ROM 10
	FCB	$12,$00	ROM 11
	FCB	$11,$00	ROM 12
*
*START DATA TABLES
*
*SWITCH TABLE
*
SWTAB	FDB	LFIRE	FIRE
	FCB	STYPE,$E8
	FDB	0	THRUST
	FCB	0,0
	FDB	SBOMB	SMART BOMB
	FCB	STYPE,$F8
	FDB	HYPER
	FCB	STYPE,$F8
	FDB	ST2
	FCB	STYPE,0
	FDB	ST1
	FCB	STYPE,0
	FDB	REV
	FCB	STYPE,$E8
	FDB	0
	FCB	0,0
SWTAB1	FDB	0
	FCB	0,0
	FDB	ADVSW
	FCB	STYPE,0
	FDB	RCOIN
	FCB	CTYPE,0
	FDB	HSRES	HI SCORE RESET
	FCB	STYPE,0
	FDB	LCOIN
	FCB	CTYPE,0
	FDB	CCOIN
	FCB	CTYPE,0
*
*COLOR RAM TABLE
*
CRTAB	FCB	0	0 SPACE
	FCB	$00	1 LASER (SPECIAL)
	FCB	$07	2 RED
	FCB	$28	3 GREEN
	FCB	$2F	4 YELLOW
	FCB	$81	5 BLUE
	FCB	$A4	6 GRAY
	FCB	$15	7 BROWN
	FCB	$C7	8 PURPLE
	FCB	$FF	9 WHITE
	FCB	$00	A BOMB CYCLER
	FCB	$00	B MONOCHROME
	FCB	$00	C CYCLER
	FCB	$00	D TIE1
	FCB	$00	E TIE2
	FCB	$00	F TIE3
******************************
*G R A P H I C S
******************************
*SCHITZO
SCZP1	FCB	5,8
	FDB	SCZD10,SCZD11,ON58,OFF58
*ASTRO EXPLODE
ASXP1	FCB	4,8
	FDB	ASXD10,ASXD10,ON48,OFF48
*SWARM EXPLODE
SWXP1	FCB	4,8
	FDB	SWXD10,SWXD10,ON48,OFF48
*NULL OBJECT
NULOB	FCB	1,1
	FDB	NULD10,NULD10,DRTS,DRTS
NULD10	FCB	0
*PROBE
PRBP1	FCB	4,8
	FDB	PRBD10,PRBD11,ON48,OFF48
*ASTRONAUTS
*FACING LEFT
ASTP1	FCB	2,8
	FDB	ASTD10,ASTD11,ON28,OFF28
ASTP2	FCB	2,8
	FDB	ASTD20,ASTD21,ON28,OFF28
*FACING RT.
ASTP3	FCB	2,8
	FDB	ASTD30,ASTD31,ON28,OFF28
ASTP4	FCB	2,8
	FDB	ASTD40,ASTD41,ON28,OFF28
*TIE PICTS
TIEP1	FCB	4,8
	FDB	TIED10,TIED11,ON48,OFF48
TIEP2	FCB	4,8
	FDB	TIED20,TIED21,ON48,OFF48
TIEP3	FCB	4,8
	FDB	TIED30,TIED31,ON48,OFF48
TIEP4	FCB	4,8
	FDB	TIED40,TIED41,ON48,OFF48
*BOMB EXPLOSION PICT
BXPIC	FCB	4,8
	FDB	BXD10,BXD10,ON48,OFF48
*BOMB PICT
BMBP1	FCB	2,3
	FDB	BMBD10,BMBD11,ON23,OFF23
BMBP2	FCB	2,3
	FDB	BMBD20,BMBD21,ON23,OFF23
*LASER PICT
LASP1	FCB	8,1
	FDB	LASD10
LASD10	FDB	$FFFF,$FFFF,$FFFF,$FFFF
*SWARM PICTS
SWPIC1	FCB	3,4
	FDB	SWMD10,SWMD11,ON34,OFF34
*LANDER
LNDP1	FCB	5,8
	FDB	LND10,LND11,ON58,OFF58
LNDP2	FCB	5,8
	FDB	LND20,LND21,ON58,OFF58
LNDP3	FCB	5,8
	FDB	LND30,LND31,ON58,OFF58
*UFO PICTURE
UFOP1	FCB	6,4
	FDB	UFOD10,UFOD11,ON64,OFF64
UFOP2	FCB	6,4
	FDB	UFOD20,UFOD21,ON64,OFF64
UFOP3	FCB	6,4
	FDB	UFOD30,UFOD31,ON64,OFF64
*PLAYER PICTURE
PLAPIC	FCB	8,6
	FDB	PLD10,PLD11,ON86,OFF86
PLBPIC	FCB	8,6
	FDB	PLD20,PLD21,ON86,OFF86
*MINI PLAYER PICTURE
PLAMIN	FCB	5,4
	FDB	PLAM0
*SMART BOMB
SBPIC	FCB	3,3
	FDB	SBD10
*250 SCORE
C25P1	FCB	6,6
	FDB	C25D10,C25D11,ON66,OFF66
*500 SCORE
C5P1	FCB	6,6
	FDB	C5D10,C5D11,ON66,OFF66
*TERRAIN EXPLOSION
TEREX	FCB	8,6
	FDB	TERX0,TERX0,CWRIT,COFF
*SCHITZO
SCZD10	FDB	$0000,$0303,$0000,$0330
	FDB	$0C3C,$0C08,$3830,$0000
	FDB	$C0C0,$C878,$7870,$7070
	FDB	$0030,$0303,$3030,$0300
	FDB	$0000,$0000,$0000,$0030
SCZD11	FDB	$0000,$0000,$0000,$0030
	FDB	$0003,$3030,$0303,$3000
	FDB	$CCCC,$CC87,$8707,$0707
	FDB	$0003,$8080,$8303,$0000
	FDB	$0000,$3030,$0000,$3003
*ASTRO EXPLODE
ASXD10	FDB	$0000,$0D6C,$6C0D,$0000
	FDB	$06E6,$C883,$82C8,$EC06
	FDB	$606D,$8C28,$288C,$6D60
	FDB	$0000,$E0C6,$C6E0,$0000
*SWARM EXPLODE
SWXD10	FDB	$0000,$0222,$2402,$0000
	FDB	$0222,$4444,$2442,$2200
	FDB	$2022,$4444,$2442,$2200
	FDB	$0000,$2022,$2220,$0000
*PROBE
PRBD10	FDB	$000E,$00D8,$000E,$0000 1
	FDB	$0F08,$8CC8,$8C08,$0F00 2
	FDB	$000E,$80C8,$800E,$0000 3
	FDB	$0000,$00D0,$0000,$0000 4
PRBD11	FDB	$0000,$000D,$0000,$0000 1
	FDB	$00E0,$088C,$08E0,$0000 2
	FDB	$F080,$C88C,$C880,$F000 3
	FDB	$00E0,$008D,$00E0,$0000 4
*ASTRONAUTS
ASTD10	FDB	$3343,$4387,$8707,$0707 1
	FDB	$0000,$8080,$8000,$0000
ASTD11	FDB	$0304,$0408,$0800,$0000 1
	FDB	$3030,$3878,$7870,$7070 2
ASTD20	FDB	$3343,$4387,$8777,$7777 1
	FDB	$0000,$8080,$8000,$0000
ASTD21	FDB	$0304,$0408,$0807,$0707
	FDB	$3030,$3878,$7870,$7070
ASTD30	FDB	$0303,$8387,$8707,$0707
	FDB	$3040,$4080,$8000,$0000
ASTD31	FDB	$0000,$0808,$0800,$0000
	FDB	$3334,$3478,$7870,$7070
ASTD40	FDB	$0303,$8387,$8707,$0707
	FDB	$3040,$4080,$8070,$7070
ASTD41	FDB	$0000,$0808,$0800,$0000
	FDB	$3334,$3478,$7877,$7777
*
*TIE PICTS
*
TIED10	FDB	$0808,$DDDE,$DEDE,$DD00 1
	FDB	$8888,$DDEE,$FEEE,$DD00 2
	FDB	$8888,$D8D8,$D8D0,$D000 3
	FDB	0,0,0,0	4
TIED11	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$8888,$DDEE,$EFEE,$DD00 2
	FDB	$8888,$DDED,$EDED,$DD00 3
	FDB	$8080,$8080,$8000,$0000 4
TIED20	FDB	$0008,$DDDE,$DEDE,$DD00 1
	FDB	$0088,$DDEE,$FEEE,$DD00 2
	FDB	$0088,$D8D8,$D8D8,$D000 3
	FDB	0,0,0,0	4
TIED21	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$0088,$DDEE,$EFEE,$DD00 2
	FDB	$0088,$DDED,$EDED,$DD00 3
	FDB	$0080,$8080,$8080,$0000 4
TIED30	FDB	$0000,$DDDE,$DEDE,$DD00 1
	FDB	$0000,$DDEE,$FEEE,$DD00 2
	FDB	$0000,$D8D8,$D8D8,$D800 3
	FDB	0,0,0,0	4
TIED31	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$0000,$DDEE,$EFEE,$DD00 2
	FDB	$0000,$DDED,$EDED,$DD00 3
	FDB	$0000,$8080,$8080,$8000 4
TIED40	FDB	$0000,$DDDE,$DEDE,$DD00 1
	FDB	$0000,$DDEE,$FEEE,$DD88 2
	FDB	$0000,$D0D8,$D8D8,$D888 3
	FDB	0,0,0,0
TIED41	FDB	$0000,$0D0D,$0D0D,$0D00 1
	FDB	$0000,$DDEE,$EFEE,$DD88 2
	FDB	$0000,$DDED,$EDED,$DD88 3
	FDB	$0000,$0080,$8080,$8080 4
***************
*BLK 3 GRAPHICS
***************
	ORG	$CC90
*BOMB EXPLOSION PICT
BXD10	FDB	$000C,$CCCC,$CCCC,$0C00
	FDB	$CCCC,$CCCC,$CCCC,$CCCC
	FDB	$CCCC,$CCCC,$CCCC,$CCCC
	FDB	$00C0,$CCCC,$CCCC,$C000
*
*BOMB PICT
*
BMBD10	FDB	$A00A,$A0A0,$00A0
BMBD11	FDB	$0A00,$0A0A,$A00A
BMBD20	FDB	$0AAA,$0A00,$A000
BMBD21	FDB	$000A,$00A0,$AAA0
*SWARM PICTS
SWMD10	FDB	$0002,$2302
	FDB	$2022,$2322
	FDB	$0000,$2000
SWMD11	FDB	$0000,$0200
	FDB	$0222,$3222
	FDB	$0020,$3220
*
*LANDER
*
LND10	FDB	$0000,$0303,$0000,$0330 1
	FDB	$0434,$3030,$3430,$0000 2
	FDB	$4444,$3333,$3430,$3030 3
	FDB	$0030,$0303,$3030,$0300 4
	FDB	$0000,$0000,$0000,$0030 5
LND11	FDB	$0000,$0000,$0000,$0003 1
	FDB	$0003,$3333,$0303,$3000 2
	FDB	$4444,$0303,$4303,$0303 3
	FDB	$4043,$3030,$4303,$0000 4
	FDB	$0000,$3030,$0000,$3003 5
LND20	FDB	$0000,$0303,$0000,$0330 1
	FDB	$0434,$0303,$3430,$0000 2
	FDB	$4444,$3030,$3430,$3030 3
	FDB	$0030,$3333,$3030,$0300 4
	FDB	$0000,$0000,$0000,$0030 5
LND21	FDB	$0000,$0000,$0000,$0003 1
	FDB	$0003,$3030,$0303,$3000 2
	FDB	$4444,$3333,$4303,$0303 3
	FDB	$4043,$0303,$4303,$0000 4
	FDB	$0000,$3030,$0000,$3003 5
LND30	FDB	$0000,$0303,$0000,$0330 1
	FDB	$0033,$3333,$3330,$0000 2
	FDB	$0033,$0303,$3330,$3030 3
	FDB	$0030,$3333,$3030,$0300 4
	FDB	$0000,$0000,$0000,$0030 5
LND31	FDB	$0000,$0000,$0000,$0003 1
	FDB	$0003,$3333,$0303,$3000 2
	FDB	$0033,$3030,$0303,$0303 3
	FDB	$0033,$3333,$3303,$0000 4
	FDB	$0000,$3030,$0000,$3003 5
*
*UFO PICTURE
*
*UFO PICTURE 1
UFOD10	FDB	$0003,$3403,$3370,$4033 1,2
	FDB	$3307,$4433,$3300,$0433 3,4
	FDB	$3073,$4033,$0000,$3000 5,6
UFOD11	FDB	$0000,$0300,$0337,$4433 1,2
	FDB	$3300,$0433,$3370,$4033 3,4
	FDB	$3307,$4433,$0030,$0330 5,6
*UFO PICTURE 2
UFOD20	FDB	$0003,$3003,$3300,$4433 1,2
	FDB	$3370,$0433,$3307,$4033 3,4
	FDB	$3003,$4433,$0000,$3000 5,6
UFOD21	FDB	$0000,$0300,$0330,$0433 1,2
	FDB	$3307,$4033,$3300,$4433 3,4
	FDB	$3370,$0433,$0030,$4330 5,6
UFOD30	FDB	$0003,$3403,$3307,$0433 1,2
	FDB	$3300,$4033,$3370,$4433 3,4
	FDB	$3003,$0433,$0000,$3000 5,6
UFOD31	FDB	$0000,$0300,$0330,$4033 1,2
	FDB	$3370,$4433,$3307,$0433 3,4
	FDB	$3300,$4033,$0030,$4330 5,6
*
*PLAYER PICTURE
*
PLD10	FDB	$0006,$2606,$2600 1
	FDB	$6666,$6688,$8888 2
	FDB	$0060,$6666,$8886 3
	FDB	$0000,$0066,$6693 4
	FDB	$0000,$006D,$6600 5
	FDB	$0000,$00EF,$6600 6
	FDB	$0000,$0000,$6900 7
	FDB	$0000,$0000,$3000 8
PLD11	FDB	$0000,$0200,$0200 1
	FDB	$0666,$6628,$6808 2
	FDB	$6066,$6686,$8888 3
	FDB	$0000,$6066,$8669 4
	FDB	$0000,$0066,$6630 5
	FDB	$0000,$00DE,$6600 6
	FDB	$0000,$00F0,$6600 7
	FDB	$0000,$0000,$9300 8
PLD20	FDB	$0000,$0000,$3900 1
	FDB	$0000,$000F,$6600 2
	FDB	$0000,$00ED,$6600 3
	FDB	$0000,$0066,$6603 4
	FDB	$0000,$0666,$6896 5
	FDB	$0666,$6668,$8888 6
	FDB	$6066,$6683,$8680 7
	FDB	$0000,$3000,$3000 8
PLD21	FDB	$0000,$0000,$0300 1
	FDB	$0000,$0000,$9600 2
	FDB	$0000,$00FE,$6600 3
	FDB	$0000,$00D6,$6600 4
	FDB	$0000,$0066,$6639 5
	FDB	$0006,$6666,$8868 6
	FDB	$6666,$6688,$8888 7
	FDB	$0060,$6330,$6300 8
*MINI PLAYER PICTURE
PLAM0	FDB	$0626,$6828
	FDB	$6066,$6686
	FDB	$0000,$6666
	FDB	$0000,$ED66
	FDB	$0000,$0063
*SMART BOMB
SBD10	FCB	$90,$09,$90
	FCB	$99,$99,$99
	FCB	$90,$CC,$90
*250 SCORE
C25D10	FDB	$1100,$1110,$1100
	FDB	$1010,$1000,$1000
	FDB	$1110,$1100,$1100
	FDB	$1000,$1010,$1000
	FDB	$1110,$1010,$1100
	FDB	$1010,$1010,$1000
C25D11	FDB	$0100,$0101,$0100
	FDB	$1101,$1100,$1100
	FDB	$0101,$0100,$0100
	FDB	$1100,$1101,$1100
	FDB	$0101,$0101,$0100
	FDB	$1101,$0101,$1100
*500 SCORE
C5D10	FDB	$FFF0,$FF00,$FF00
	FDB	$F000,$F0F0,$F000
	FDB	$EEE0,$E0E0,$EE00
	FDB	$E0E0,$E0E0,$E000
	FDB	$DDD0,$D0D0,$DD00
	FDB	$D0D0,$D0D0,$D000
C5D11	FDB	$0F0F,$0F00,$0F00
	FDB	$FF00,$FF0F,$FF00
	FDB	$0E0E,$0E0E,$0E00
	FDB	$EE0E,$0E0E,$EE00
	FDB	$0D0D,$0D0D,$0D00
	FDB	$DD0D,$0D0D,$DD00
*TERRAIN EXPLOSION
TERX0	FDB	$1C0D,$7FE7,$7000 1
	FDB	$0F71,$7107,$DC77 2
	FDB	$7C0D,$71C7,$77DE 3
	FDB	$0771,$1717,$DEF7 4
	FDB	$7117,$717C,$DEF0 5
	FDB	$0777,$C771,$1770 6
	FDB	$707C,$D777,$7770 7
	FDB	$01CD,$FFD7,$70F0 8
*
*VECTORS
*
	ORG	$FF9D
	FDB	NULOB
	FDB	ROMMAP
	JMP	RCMOSA
	JMP	RCMOSB
	JMP	RCMOSD
	JMP	WCMOSA
	JMP	WCMOSB
	JMP	WCMOSD
	JMP	CWRIT
	JMP	COFF
	JMP	BLKCLR
	JMP	SCRCLR
	JMP	ROM0
	JMP	ROM9
	JMP	RAM2
	JMP	GAMEOV
	JMP	BGI
	JMP	LJSR
	JMP	SLEEPP
	JMP	STBXB0
	JMP	LDBXB0
	JMP	SNDLD
	FDB	APSND
	FCB	$2A	CKBYT  CSUM F800-FFFF(ACTUAL)
	ORG	$FFF0
	FDB	RESET,RESET,RESET
	FDB	RESET,IRQHK
	FDB	RESET,RESET,RESET
	PAGE
