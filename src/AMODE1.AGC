*	TEXT EQUATES
WTEXTB	EQU	$C002
WNUMBB	EQU	$C00E
LANDV	EQU	$C0DD
MUTV	EQU	LANDV+2
SWRMPV	EQU	MUTV+2
BOMBV	EQU	SWRMPV+2
SWARMV	EQU	BOMBV+2
BAITV	EQU	SWARMV+2
CREDV	EQU	BAITV+2
SCANV	EQU	CREDV+2
ELECV	EQU	SCANV+2
HOFV	EQU	$C0FD
INIT$V	EQU	HOFV+2
HALLDV	EQU	INIT$V+2
HALENV	EQU	HALLDV+2

*	STILOB PICT,X,Y	CREATES AN OBJECT WITH NO VELOCITY AT X,Y
STILOB	MACRO	\0,\1,\2
	JSR	GETOB	GET AN OBJECT
	LDD	#0	VELOCITY
	STD	OXV,X
	STD	OYV,X
	LDD	#\1	X
	STD	OX16,X
	LDD	#\2
	STD	OY16,X
	LDD	#\0	PICTURE
	STD	OPICT,X
	STX	OPTR	AND APPEND TO LIST
	ENDM

NAPP	MACRO	\0,\1
	LDA	#\0
	LDX	#\1
	JMP	SLEEPP
	ENDM
* BSO BONER DOES NOT ALLOW MACRO AND SYMBOL FOR LJSR SO CHANGED TO MLJSR
MLJSR	MACRO	\0,\1
	JSR	LJSRV
	FDB	\1
	FCB	\0
	ENDM

*SAM EQUATES
BLKLEN	EQU	14
INITS	EQU	$A000
PNUMB	EQU	INITS+6
INITDS	EQU	PNUMB+2
SCOREN	EQU	INITDS+4

	ORG	THTAB
*
***	SAMRAM
*

TEMPA	RMB	1
TEMPB	RMB	1
XTEMP$	RMB	2
CURSR$	RMB	2
CUREND	RMB	2
LGOFLG	RMB	1
LGOPTR	RMB	2
DEFSPT	RMB	2
DEFDPT	RMB	2
WX	RMB	2
DEFRPT	RMB	2
DCOLOR	RMB	1
LEN	RMB	1
PIX	RMB	1
ENTFLG	RMB	1
INIDIR	RMB	1
INITN	RMB	1
PSCORE	RMB	2
STALT	RMB	1
UDDEL	RMB	1
UDCNT	RMB	1
UDSFLG	RMB	1
SPOINT	RMB	2
OCRED	RMB	1
ICREDF	RMB	1
FIRFLG	RMB	1
FIRCNT	RMB	1

***	LEDRAM

LASPRC	RMB	2	LASER PROCESS
MANPTR	RMB	2	MAN OBJECT
SHIPTR	RMB	2	PLAYER OBJECT
ENEMYP	RMB	2	BAD GUY OBJECT
MANFRF	RMB	1	FRAMES OF FREE FALL
P500OB	RMB	2	500 PT. OBJECT
OTABPT	RMB	2	TABLE OF OBJECTS POINTER
LSTATE	RMB	2	EXTRA STATE FOR THE LASER ROUTINE
TEXPTR	RMB	2
TEXTMP	RMB	2

	ORG	$B300	USE TERRAIN AREA

DEFDSC	RMB	4	"DEFENDER" WHOLE DESCRIPTER
DEFRAM	RMB	BLKLEN*15 "DEFENDER" OBJECT BLOCKS
DEFPIC	RMB	4*15	"DEFENDER" PICTURE DESCRIPTERS
DEFBLK	RMB	24*60	"DEFENDER" DATA


*	EQUATES
XMAN	EQU	$1E00
YMAN	EQU	$DB00
XSHIP	EQU	$0800
YSHIP	EQU	$5000
AMTYPE	EQU	0

	ORG	$C000
	JMP	HALLOF	VECTORS
	JMP	SCNR
*
*HALL OF FAME ENTRY
*
HALLOF	JSR	GNCIDE	KILL ALL PROCESSES
	LDA	#$FF	SYSTEM STATUS
	STA	STATUS
	JSR	STINIT	REINITIALIZE STARS
	LDA	CREDIT	INITIALIZE OLD CREDITS
	STA	OCRED
	CLRA
	STA	ICREDF	CLEAR CREDIT INCREASE FLAG
	STA	ENTFLG	CLEAR ENTRY FLAG
	LDA	PWRFLG	CHECK FOR POWER ON INITIALIZATION
	LBEQ	AMODE$	YES?, SKIP TO WILLI PAGE
	NEWP	CREDS,AMTYPE TURN ON CREDITS
	LDY	#.P1SCR	START WITH PLAYER 1
	LDA	#1
HALL1	STA	PNUMB	PLAYER NUMBER
	STY	PSCORE	PLAYER SCORE ADDRESS
	LDX	#THSTAB+12*7 TODAYS EIGHTH SCORE
	JSR	CPXCY	COMPARE
	LBHS	HALL12	NOT GOOD ENOUGH?, NEXT PLAYER
	INC	ENTFLG	SET ENTRY FLAG
	JSR	SCRCLR
	LDA	PNUMB
	DECA
	BNE	HALL1A
	JSR	P1SW	UPRIGHT SCREEN
	BRA	HALL1B
HALL1A	JSR	P2SW
HALL1B	LDB	#$85	LIGHT BLUE LETTERS
	STB	PCRAM+1
	LDA	#$FE	TODAYS SOUND - PHANTOM
	LDX	#THSTAB	TODAYS TOP SCORE
	JSR	CPXCY	COMPARE
	BHS	HALL2	NOT THE BEST?
	LDA	#$FD	HIGH SCORE SOUND - TOCCATA
HALL2	LDX	#$CC02	SOUND PIAS
	LDB	#$FF	CLEAR LINES
	JSR	STBXBV
	LDB	#$E4	SELECT ORGAN
	JSR	STBXBV
HALL3	DECB		DELAY
	BNE	HALL3
	LDB	#$FF	CLEAR LINES
	JSR	STBXBV
	TFR	A,B
	JSR	STBXBV	PLAY SOUND
	LDU	#PLYR1-2 "PLAYER 1" OR "PLAYER 2"
	LDA	PNUMB
	ASLA
	LEAU	A,U
	LDX	#$3E38	SCREEN ADDRESS
	MLJSR	2,WTEXTB WRITE TO SCREEN
	LDU	#HOFV	HALL OF FAME ENTRY INSTRUCTIONS
	LDX	#$1458	SCREEN ADDRESS
	MLJSR	2,WTEXTB WRITE TO SCREEN
	LDD	#$412F	INITIALIZE INTIALS
	STD	INITS
	LDA	#$40
	STD	INITS+2
	STD	INITS+4
	JSR	HOFIN	DISPLAY INITIALS
	LDA	#40	FIRST INITIAL STALL TIME
	STA	STALT
	NEWP	HOFST,AMTYPE TURN ON STALL TIMER
	NEWP	HOFBL,AMTYPE TURN ON BLINK
	NEWP	HOFUD,AMTYPE TURN ON UP DOWN STICK
	CLR	INITN	ZERO INITIALS COUNTER
	JSR	HOFUL	UNDERLINE INITIALS
*FIRE SWITCH
HALL3A	CLRA
	STA	FIRCNT	ZERO SWITCH OPEN COUNTER
	STA	FIRFLG	CLEAR SWITCH OPEN FLAG
HALL3B	NAPP	1,HALL4	SLEEP 1
HALL4	LDA	PIA21	CHECK FIRE SWITCH
	BITA	#1
	BNE	HALL5	CLOSED?
	TST	STALT	CHECK STALL TIMER
	BEQ	HALL6	OUT OF TIME?, ENTER HIM
	INC	FIRCNT	ADVANCE SWITCH OPEN COUNTER
	LDA	FIRCNT	CHECK IF TIME
	CMPA	#5
	BNE	HALL3B	NO?, GO TO SLEEP
	STA	FIRFLG	YES?, SET SWITCH OPEN FLAG
	BRA	HALL3B	GO TO SLEEP
HALL5	CLR	FIRCNT	ZERO SWITCH OPEN COUNTER
	TST	FIRFLG	CHECK SWITCH OPEN FLAG
	BEQ	HALL3B	NOT SET?, GO TO SLEEP
	LDA	#20	RESET STALL TIMER
	STA	STALT
	INC	INITN	NEXT INITIAL
	JSR	HOFUL	UPDATE UNDERLINES
	LDA	INITN	CHECK IF LAST
	CMPA	#3
	BNE	HALL3A	WAIT FOR NEXT FIRE SWITCH
HALL6	JSR	GNCIDE	KILL PROCESSES
	LDX	#THSTAB+12*6 TODAYS SEVENTH SCORE
	LDU	#THSTAB-12 ABOVE TODAYS TOP SCORE
	JSR	HOFAS	ADD SCORE TO LIST
	LDX	#CRHSTD+12*7 ALL TIME EIGHTH SCORE
	BSR	CPXCY	COMPARE
	BHS	HALL12	NOT THAT GOOD?, NEXT PLAYER
	LDX	#CRHSTD+12*6 ALL TIME SEVENTH SCORE
	LDU	#CRHSTD-12 ABOVE ALL TIME TOP SCORE
	JSR	HOFAS	ADD SCORE TO LIST
HALL12	LDY	#.P2SCR	PLAYER TWO
	LDA	PNUMB
	INCA
	CMPA	#3	CHECK IF DONE
	LBNE	HALL1
	TST	ENTFLG	CHECK IF ENTRY WAS MADE
	BNE	HALL13
	NAPP	$FF,HALL13 NO ENTRY, SLEEP 4 SECS
HALL13	JMP	HALDIS	ATTRACT MODE NOW
*
*COMPARE NIBBLES AT X BLOCK 0 WITH SCORE AT Y
*
CPXCY	PSHS	D,X	SAVE REGISTERS
	JSR	RCMOSD	READ NIBBLES AT X TO D
	CMPD	1,Y	A DIFFERENCE?
	BNE	CPXY1
	JSR	RCMOSA	CHECK NEXT NIBBLES
	CMPA	3,Y
CPXY1	PULS	X,D,PC	RESTORE REGISTERS, RETURN
*
*HALL OF FAME INITIALS DISPLAY
*
HOFIN	LDX	#$46AC	TOP LEFT OF INITIALS
	LDD	#$1408	SIZE OF INITIALS
	JSR	BLKCLR	ERASE BLOCK
	LDU	#INIT$V	INITIALS TEXT VECTOR
	MLJSR	2,WTEXTB WRITE TO SCREEN
	RTS
*
*HALL OF FAME - UNDERLINE INITIALS
*
HOFUL	CLR	TEMPA	INITIAL COUNTER
	LDX	#$45B7	STARTING ADDRESS
HOFUL1	LDU	#$1111	NORMAL COLOR
	LDA	TEMPA
	CMPA	INITN	IS THIS ACTIVE INITIAL
	BNE	HOFUL2
	LDU	#$DDDD	BLINK COLOR FOR ACTIVE INITIAL
HOFUL2	LDD	#$0400	LENGTH OF UNDER LINE
HOFUL3	STU	D,X	DRAW UNDER LINE
	DECA
	BNE	HOFUL3
	INC	TEMPA	NEXT INITIAL
	LEAX	$800,X	CENTER SPACING BETWEEN UNDERLINES
	CMPX	#$5DB7	DONE?
	BNE	HOFUL1	NO?, NEXT UNDERLNE
	RTS
*
*HALL OF FAME -	ADD SCORE AND INITIALS	X=BOTTOM OF LIST
*		TO LIST		U=TOP OF LIST
*
HOFAS	STU	XTEMP$	SAVE TOP OF LIST ADDRESS
	LDY	PSCORE	GET PLAYER SCORE ADDRESS
HOFAS1	BSR	CPXCY	COMPARE
	BHS	HOFAS2
	BSR	HOFMD	MOVE SCORE DOWN ONE STEP
	LEAX	-12,X	NEXT SCORE UP
	CMPX	XTEMP$	ABOVE TOP SCORE?
	BHI	HOFAS1
HOFAS2	LEAX	12,X	ONE STEP DOWN
	LDD	1,Y	STORE SCORE
	JSR	WCMOSD
	LDA	3,Y
	JSR	WCMOSA
	LDU	#INITS	GET INITIALS ADDRESS
HOFAS3	LDA	,U	GET INITIAL
	JSR	WCMOSA	STORE IT
	LEAU	2,U	NEXT INITIAL
	CMPU	#INITS+6 DONE?
	BNE	HOFAS3
	RTS
*
*HALL OF FAME - MOVE A SCORE AND INITIALS
*		DOWN ONE STEP	X=OLD ADDRESS
*
HOFMD	PSHS	X	SAVE OLD POSITION
HOFMD1	JSR	RCMOSD	GET 4 NIBBLES
	LEAX	8,X	MOVE POINTER TO DESTINATION
	JSR	WCMOSD	STORE 4 NIBBLES
	LEAX	-24,X	CHECK IF DONE
	CMPX	,S
	BEQ	HOFMD2
	LEAX	12,X	BACK FOR NEXT NIBBLES
	BRA	HOFMD1
HOFMD2	PULS	X,PC	RESTORE STACK, RETURN
*
*HALL OF FAME STALL TIMER
*
HOFST	DEC	STALT	COUNT DOWN STALL TIMER
	NAPP	60,HOFST SLEEP 1 SECOND
*
*HALL OF FAME COLOR BLINK
*
HOFBL	LDA	PCRAM+$D GET BLINKING COLOR
	BNE	HOFBL1	ON?
	LDA	PCRAM+1	MAKE SAME AS NORMAL COLOR
	BRA	HOFBL2
HOFBL1	CLRA		TURN OFF
HOFBL2	STA	PCRAM+$D CHANGE COLOR
	NAPP	15,HOFBL BLINK PERIOD
*
*HALL OF FAME UP DOWN STICK HANDLER
*
HOFUD	CLR	INIDIR	ZERO INITIALS DIRECTION
HOFUD1	LDA	PIA21	GET PIA DOWN SIDE
	BITA	#$80	CHECK DOWN
	BEQ	HOFUD2
	LDA	#$FF	DOWN DIRECTION
	BRA	HOFUD4
HOFUD2	LDA	PIA31	GET PIA UP SIDE
	BITA	#1	CHECK UP
	BEQ	HOFUD3
	LDA	#1	UP DIRECTION
	BRA	HOFUD4
HOFUD3	CLR	INIDIR	NO CHANGE
	BRA	HOFUD8	SLEEP
HOFUD4	CMPA	INIDIR	CHECK IF KNOWN
	BNE	HOFUD9	NOT KNOWN?
	DEC	UDCNT	KNOWN?, COUNT DELAY
	BNE	HOFUD8	STILL COUNTING?, SLEEP
*CHANGE LETTER
HOFUD5	LDX	#INITS	GET ACTIVE INITIALS ADDRESS
	LDB	INITN
	ASLB
	ABX
	LDA	,X	GET ACTIVE INITIAL
	ADDA	INIDIR	CHANGE UP/DOWN
	CMPA	#$3F	TOO LOW?
	BNE	HOFUD6
	LDA	#$5A	BACK TO Z
HOFUD6	CMPA	#$5B	TOO HIGH?
	BNE	HOFUD7
	LDA	#$40	BACK TO SPACE
HOFUD7	STA	,X	SAVE NEW INITIAL
	JSR	HOFIN	UPDATE INITIALS DISPLAY
	LDA	UDDEL	GET LAST DELAY
	LSRA		DECAY IT
	ADDA	#5	TOP SPEED LIMIT
	STA	UDDEL	SAVE NEW DELAY
	STA	UDCNT	INITIALIZE COUNTER
HOFUD8	NAPP	1,HOFUD1 SLEEP 1
*NEW DIRECTION
HOFUD9	STA	INIDIR	NEW DIRECTION
	LDA	#55	PREINITIAL DELAY
	STA	UDDEL
	LDA	#3	FIRST LETTER DELAY
	STA	UDCNT
	BRA	HOFUD8	SLEEP 1
*
*CHECK BYTE
*
	FDB	$FFFF
*
*HALL OF FAME DISPLAY
*
HALDIS	CLR	HSRFLG	CLEAR HIGH SCORE RESET FLAG
	JSR	GNCIDE	KILL ALL PROCESSES
	JSR	DEFNNN	EXPAND "DEFENDER" DATA
	JSR	SCRCLR	CLEAR ACTIVE SCREEN
	JSR	P1SW	ALWAYS UPRIGHT
	CLR	PCRAM+1	BLACK LETTERS
	NEWP	CREDS,AMTYPE TURN ON CREDITS
	JSR	SCORES	DISPLAY SCORES
	LDU	#HALLDV	GET HEADINGS MESSAGE VECTOR
	LDX	#$3854	SCREEN ADDRESS
	MLJSR	2,WTEXTB WRITE TO SCREEN
*UNDERLINE HEADINGS
	LDU	#$1111	UNDERLINE COLOR
	LDX	#$1E7B	LEFT ADDERSS
	LDD	#$5F00	OFFSET OF RIGHT END, RIGHT UNDERLINE
HALD1	STU	D,X
	CMPA	#$41	OFFSET OF LEFT END, RIGHT UNDERLINE
	BNE	HALD2
	LDA	#$1F	OFFSET OF RIGHT END, LEFT UNDERLINE
HALD2	DECA
	BPL	HALD1
*
	LDA	#$2F	SLASH FOR PSEUDO-WORDS
	STA	PNUMB+1	RANK NUMBER
	STA	INITDS+3 INITIALS
	STA	SCOREN+6 SCORE
	LDU	#HALENV	GET DATA LINE MESSAGE VECTOR
	LDX	#$1886	SCREEN ADDRESS
	STX	SPOINT
	LDX	#THSTAB	TODAYS GREATEST TABLE ADDRESS
	STX	XTEMP$
	BSR	HALDT	DISPLAY TABLE
	LDX	#$5986	SCREEN ADDRESS
	STX	SPOINT
	LDX	#CRHSTD	ALL TIME GREATEST TABLE ADDRESS
	STX	XTEMP$
	BSR	HALDT	DISPLAY TABLE
	LDA	#$3F	YELLOW "DEFENDER"
	STA	PCRAM+$C
	LDY	#DEFDSC	MAKE WHOLE DEFENDER DESCRIPTER
	LDD	#$3C18
	STD	,Y
	LDD	#DEFBLK
	STD	2,Y
	LDD	#$3038	SCREEN ADDRESS
	JSR	CWRIT	WRITE TO SCREEN
	NEWP	COLR,AMTYPE LASER COLOR LETTERS
	LDA	#60	DELAY TIMER
	STA	STALT
HALD3	TST	ICREDF	CHECK FOR INCREASE IN CREDITS
	BNE	HALD4	YES?, GIVE INSTRUCTIONS
	TST	HSRFLG	CHECK FOR HIGH SCORE RESET
	LBNE	HALDIS	YES?, HALL OF FAME AGAIN
	DEC	STALT	TIME OUT?
	BEQ	HALD4
	NAPP	10,HALD3 NOPE, NOT YET
HALD4	BRA	LEDRET	ON TO INSTUCTIONS
*
*HALL OF FAME DISPLAY ONE TABLE	U=DATA LINE MESSAGE VECTOR
*	SPOINT=SCREEN ADDRESS	XTEMP$=TABLE DATA ADDRESS
*
HALDT	LDA	#$31	INITIALIZE RANK NUMBER
	STA	PNUMB
HALDT1	CLRA		CLEAR LEADING ZERO NOT FLAG
	LDY	#SCOREN	SCORE PSEUDO WORD ADDRESS
	LDX	XTEMP$	GET TABLE DATA POINTER
HALDT2	JSR	LDBXBV	GET SCORE NIBBLE
	LEAX	1,X	ADVANCE DATA POINTER
	ANDB	#$F	REMOVE GARBAGE
	BNE	HALDT3	NOT ZERO?, DISPLAY
	TSTA		CHECK LEADING ZERO NOT FLAG
	BNE	HALDT3	SET?, DISPLAY ZERO
	LDB	#$40	REPLACE LEADING ZERO WITH SPACE
	BRA	HALDT4	DISPLAY
HALDT3	INCA		SET LEADING ZERO FLAG NOT FLAG
	ADDB	#$30	CHANGE TO ASCII NUMBER
HALDT4	STB	,Y+	STORE IN PSEUDO WORD
	CMPY	#SCOREN+6 CHECK IF SCORE DONE?
	BNE	HALDT2
	JSR	RCMOSD	GET FIRST 2 INITIALS
	STD	INITDS	STORE IN PSEUDO WORD
	JSR	RCMOSA	GET LAST INITIAL
	STA	INITDS+2 STORE IN PSEUDO WORD
	STX	XTEMP$	SAVE DATA POINTER
	LDX	SPOINT	GET SCREEN ADDRESS
	MLJSR	2,WTEXTB WRITE DATA LINE TO SCREEN
	LEAX	10,X	MOVE SCREEN POINTER ONE LINE DOWN
	STX	SPOINT	SAVE SCREEN POINTER
	INC	PNUMB	ADVANCE RANK NUMBER
	LDA	PNUMB	CHECK IF DONE
	CMPA	#$39
	BNE	HALDT1
	RTS

*
*INSTRUCTION PAGE
*

LEDRET	JSR	GNCIDE	KILL ANY EXCESS
	JSR	SCINIT	GET THE WORLD,SCANNER AND TERRAIN
	LDA	#$D9	SET STATUS
	STA	STATUS
	JSR	SCORES
	NEWP	CREDS,AMTYPE TURN ON CREDITS
	JSR	BORDER
	LDX	#TEXTAB+2
	STX	TEXPTR
	NEWP	COLR,AMTYPE
	NEWP	CBOMB,AMTYPE
	NEWP	TIECOL,AMTYPE
	NEWP	SCPROC,AMTYPE
	NEWP	TEXTP,AMTYPE
	STILOB ASTP1,XMAN,YMAN ASTRONAUT
	LDD	#$6666
	STD	OBJCOL,X
	STX	MANPTR	SAVE HIS OBJECT
	STILOB PLAPIC,XSHIP,YSHIP PLAYER
	LDD	#$0
	STD	OBJCOL,X LEAVE SHIP
	STX	SHIPTR	SAVE IT
	JSR	GETOB	GET AN OBJECT
	LDD	#LNDP1
	STD	OPICT,X
	LDD	#$1DA0
	STD	OX16,X
	LDD	#$4000
	STD	OY16,X
	LDD	#$A0
	STD	OYV,X
	LDD	#0
	STD	OXV,X	MAKE HIM DESCEND.
	LDD	#$4433
	STD	OBJCOL,X BLIP
	JSR	APVCT	MAKE HIM MATERIALIZE
	STX	ENEMYP
	NAPP	$E6,AMODE1 WAIT FOR HIM TO REACH MAN
AMODE1	LDD	#$FF50	GOING UP!
	LDX	ENEMYP	GET THE GUYS BLOCK
	STD	OYV,X
	LDX	MANPTR
	STD	OYV,X	HIS TOO.
	NAPP	$A0,AMODE2 WAIT FOR HIM TO BE IN LINE WITH THE LASER.
AMODE2	NEWP	LASR$,AMTYPE
	STX	LASPRC	SAVE NEW PROCESS ID.
	NAPP	$15,AMODE3

SCINIT	LDA	#$FF
	STA	STATUS
	JSR	OINIT	INITIALIZE OBJEX PLEASE
	JSR	SCRCLR
	LDD	#0
	STD	BGL
	STD	BGLX
	MLJSR	0,BGI
	JSR	CRINIT
	LDA	#$DB	THIS IS THE STATUS
	STA	STATUS	WHY???	WHO KNOWS!
	LDX	#$1030	CENTER
	STX	PLAXC	FOR SCANNER
	RTS

KLASUB	LDX	LASPRC	TIME TO KILL THE LASER
	LDU	LSTATE	KILL A LASER CODE
	CLRA
AMODE6	STA	0,U
	LEAU	$100,U
	CMPU	PD,X
	BLS	AMODE6
	JMP	KILL	KILL THE LASER PROCESS

AMODE3	BSR	KLASUB
	LDX	ENEMYP	TIME TO BLOW UP THE ENEMY
	JSR	KILLOB
	JSR	XSVCT	BLOW UP THE BASTARD
	LDX	SHIPTR	GET THE SHIP
	LDD	#$0040	X
	STD	OXV,X
	LDD	#$00D4	Y
	STD	OYV,X	MOVE TO THE MAN
	LDA	#$2D	30 FRAMES TILL INTERSECTION
	STA	MANFRF	COUNT IN RAM
	LDX	MANPTR	MANS POINTER
	LDD	#0	NO Y VEL
	STD	OYV,X	FOR EUGENE.
AMODE4	LDX	MANPTR	GET THE MANS PTR
	LDD	OYV,X	GET HIS VELOCITY
	ADDD	#0008	MAKE IT FASTER
	STD	OYV,X	AND PUT IT BACK.
	DEC	MANFRF	ONE LESS FRAME
	BEQ	AMODE5
	NAPP	2,AMODE4
*
*	INTERSECTION OF SHIP AND MAN
*

AMODE5	STILOB	C5P1,$1DFF,$9000 500 PTS.
	LDD	#$0
	STD	OBJCOL,X
	STX	P500OB
	LDD	#0
	LDU	#$0C0
	LDX	SHIPTR
	STD	OXV,X
	STU	OYV,X	DOWN TO TERRAIN
	LDX	MANPTR
	LDD	#$1E80
	STD	OX16,X	HYPER THE MAN
	LDD	#$A2E0
	STD	OY16,X
	STU	OYV,X
	NAPP	$50,AMODE7
AMODE7	LDX	P500OB
	LDD	#$E000
	STD	OY16,X	MOVE THE 500 DOWN
	LDD	#$1C00
	STD	OX16,X	BOTH COORDS
	LDX	MANPTR
	LDD	#0
	STD	OYV,X	STOP THE MAN
	LDX	SHIPTR	GET THE SHIP
	LDD	#PLBPIC
	STD	OPICT,X	TURN AROUND
	LDD	#$FFC0
	STD	OXV,X
	LDD	#$FE80
	STD	OYV,X	MOVE SHIP BACK
	NAPP	$60,AMODE8
AMODE8	LDX	SHIPTR
	LDD	#PLAPIC
	STD	OPICT,X
	LDD	#0
	STD	OXV,X
	STD	OYV,X
	LDX	P500OB
	LDD	OBJX,X	GET COORD
	JSR	KILLOB	TRASH THE OBJECT
	JSR	OFF66	AND REMOVE CORPSE
*
*	TIME TO START FORMING THE TABLE.
*

	LDU	#ENMYTB	TABLE OF OBJECTS.

AMOD12	JSR	GETOB	OBJECT PLEASE*****************BSO BONER***
	FCB	$EC,$C9,$00,$0C (LDD OLEN,U)GET THE OBJECT PICTURE
	STD	OPICT,X
	FCB	$EC,$C9,$00,$24 (LDD 3*OLEN,U)
	STD	OBJCOL,X BLIP
	LDD	#$1F00	LARGE X
	STD	OX16,X
	LDD	#$A000	LOW Y
	STD	OY16,X
	LDD	#$FF40	NEG Y V
	STD	OYV,X
	LDD	#0	NO X
	STD	OXV,X
	JSR	APVCT	MAKE IT APPEAR
	STU	OTABPT	SAVE OUR TABLE POINTER
	STX	ENEMYP	SAVE THE GUYS POINTER.
	NAPP	$5F,AMOD10 WAIT FOR IN LINE WITH LASER
AMOD10	NEWP	LASR$,AMTYPE
	STX	LASPRC	SAVE THE PROCESS POINTER.
	NAPP	$17,AMOD11
AMOD11	JSR	KLASUB	TRASH THE LASER
	LDX	ENEMYP	GET THE GUY
	JSR	KILLOB	FREE IT
	JSR	GETOB	GET IT BACK
	JSR	XSVCT	BYE
	LDU	OTABPT	GET THE POINTER BACK****************BSO BONER*******
	FCB	$EC,$C9,$00,$18 (LDD 2*OLEN,U) GET THE X****BSO BONER*******
	STD	OX16,X
	LDD	,U++	MOVE TO NEXT AND FETCH Y
	STD	OY16,X
	LDD	#0
	STD	OYV,X
	STD	OXV,X	NO MOVEMENT PLEASE
	JSR	APVCT	APPEARANCE HERE PLEASE.
	STU	OTABPT
	NAPP	$20,BMODE2
BMODE2	LDX	TEXPTR
	LEAX	2,X
	STX	TEXPTR	PUT THE TEXT DOWN
	NAPP	$20,BMODE3
BMODE3	LDU	OTABPT
	CMPU	#OTABND	END
	LBNE	AMOD12
	NAPP	$FF,AMOD13
AMOD13	NAPP	$FF,AMODE$ DO IT AGAIN!

LASR$	LDX	SHIPTR	GET SHIP
	LDX	OBJX,X	GET SCREEN COORDS
LASRR	LEAX	$704,X
	STX	PD,U
	STX	PD+2,U
	STX	LSTATE
LAS0	LDA	#4
	LDX	PD,U
	LDB	#$11
LAS1	STB	,X
	LEAX	$100,X
	DECA
	BNE	LAS1
	LDB	#$99
	STB	,X
	STX	PD,U
	LDY	FISX
	CMPY	#FISEND-3
	BLO	LAS2
	LDY	#FISTAB
LAS2	LDX	PD+2,U
	LDA	#3
LAS3	LDB	,Y+
	STB	,X
	LEAX	$100,X
	DECA
	BNE	LAS3
	STY	FISX
	STX	PD+2,U
	LDX	LSTATE
LAS4	CLR	,X
	LEAX	$100,X
	STX	LSTATE
	NAPP	1,LAS0

TEXTP	LDY	#TEXTAB	START OF TABLE****************BSO BONER**********
TEXTP1	FCB	$EE,$A9,$00,$0E (LDU TENT,Y) GET MESSAGE VECTOR**********
	LDX	,Y++	GET ADDRESS*******************BSO BONER**********
	MLJSR	2,WTEXTB WRITE THIS ONE.
	STY	TEXTMP	SAVE PTR
	NAPP	6,TEXTP2
TEXTP2	LDY	TEXTMP	GET IT BACK
	CMPY	TEXPTR	ENOUGH???
	BNE	TEXTP1	NOPE...DO ANOTHER
	BRA	TEXTP	AND CONTINUE

*
*WILLIAMS PAGE
*
AMODE$	JSR	GNCIDE
	CLR	ICREDF	CLEAR CREDIT INCREASE FLAG
	LDA	#$FB
	STA	STATUS
	JSR	SCRCLR
	CLR	MESPT
	LDD	#$FFFF
	STD	NUMBER
	NEWP	COLR,AMTYPE
	NEWP	TIECOL,AMTYPE
	LDA	#$3F
	STA	PCRAM+$C

WILLI	JMP	LOGO	SAM STUFF

*
*WILLIAMS LOGO
*
LOGO	JSR	DEFNNN	EXPAND "DEFENDER" DATA
	LDA	#3	#BYTES PER SCREEN
	STA	LGOFLG
	LDX	#LGOTAB
	STX	LGOPTR
LOGO0	LDA	LGOFLG
	STA	TEMPB
	LDY	LGOPTR
LOGO1	LDA	,Y+
	CMPA	#$AA	DATA OR INSTRUCTION?
	BLS	LOGO3
*INSTRUCTION
	COMA
	BEQ	LOGO1	NULL BYTE
	DECA
	BNE	LOGO10	QUIT
	LDD	,Y++	HYPER
	STD	CURSR$
	CLRA
	BRA	LOGO7
*DATA
LOGO3	ASLA		MOVE CURSER
	BCC	LOGO4
	DEC	CURSR$
LOGO4	ASLA
	BCC	LOGO5
	INC	CURSR$
LOGO5	ASLA
	BCC	LOGO6
	DEC	CURSR$+1
LOGO6	ASLA
	BCC	LOGO7
	INC	CURSR$+1
LOGO7	STA	TEMPA	SAVE DATA
*WRITE TO SCEEN
	LDD	CURSR$
	LSRA
	TFR	D,X
	LDB	,X	SAVE OTHER PIXEL
	BCS	LOGO8
	ORB	#$F0	LEFT
	BRA	LOGO9
LOGO8	ORB	#$F
LOGO9	STB	,X
	LDA	TEMPA	GET DATA
	BNE	LOGO3	OTHER PIXEL
	DEC	TEMPB
	BNE	LOGO1	NEXT BYTE
	STY	LGOPTR	SLEEP
	LDA	#2
	LDX	#LOGO0
	JSR	SLEEPP
LOGO10	STX	CUREND	SAVE END OF CURSER
	LDA	#3	SLOW?
	CMPA	LGOFLG
	BNE	LOGO1$	NOPE
	LDA	#10	NOPE MAKE FAST
	STA	LGOFLG
	NEWP	PRES,AMTYPE CREATE THE NEXT ONE.
LOGO1$	LDX	#LGOTAB
	STX	LGOPTR
	BRA	LOGO0	CONTINUE
*
*ELECTRONICS PRESENTS
*
PRES	NEWP	DEFEND,AMTYPE CREATE DEFEND.
PRES1	LDX	#$3258
	LDU	#ELECV
	MLJSR	2,WTEXTB
	LDA	#5
	LDX	#PRES1
	JSR	SLEEPP
*
*DEFENDER
*
DEFEND	NAPP	$30,DEFEN$ START APPEARS
DEFEN$	LDD	#DEFPIC	INITIALIZE DESCRIPTER POINTER
	STD	DEFSPT
	LDD	#DEFBLK	INITIALIZE DATA POINTER
	STD	DEFDPT
	LDD	#0	ZERO BGL
	STD	BGL
	LDD	#$0C00	INITIALIZE 16 BIT X COORINATE
	STD	WX
	LDD	#DEFRAM	INITIALIZE OBJECT POINTER
	STD	DEFRPT
*START LOOP
DEF1	LDX	DEFRPT
	LDY	DEFSPT
	LDD	#$040C	WIDTH, HEIGHT
	STD	,Y
	LDD	DEFDPT	DATA ADDRESS
	STD	2,Y
	ADDD	#4*24
	STD	DEFDPT
	STY	OPICT,X	DESCRIPTER ADDRESS
	LDD	WX
	STD	OX16,X	16 BIT X COORDINATE
	ADDD	#$100
	STD	WX
	LDD	#$9800	16 BIT Y COORDINATE
	STD	OY16,X
	JSR	APVCT	START APPEAR
	LEAX	BLKLEN,X NEXT OBJECT
	STX	DEFRPT
	LEAY	4,Y	NEXT DECSRIPTER
	STY	DEFSPT
	CMPY	#DEFPIC+4*15 DONE?
	BNE	DEF1
*
DEF2	NAPP	$2E,DEF33
DEF33	LDX	#DEFDSC	MAKE WHOLE DEFENDER DESCRIPTER
	LDD	#$3C18
	STD	,X
	LDD	#DEFBLK
	STD	2,X
	NEWP	DEF50,AMTYPE START WHOLE DEFENDER RESTORE
	NAPP	$28,DEF44
DEF44	NEWP	CBOMB,AMTYPE
*
*COPYRIGHT
*
COPYRT	LDU	CUREND	GET END OF "WILLIAMS" CURSER
	LDY	#CPRTAB	TABLE START
	LDX	#$3BD0	TOP LEFT
CPR1	LDD	,Y++
	STD	XTEMP$	SAVE DATA
	LDA	#1	BIT POINTER
CPR2	CLRB
	BITA	XTEMP$
	BEQ	CPR3
	LDB	#$10
CPR3	BITA	XTEMP$+1
	BEQ	CPR4
	ORB	#1
CPR4	STB	,X+
	ASLA
	BNE	CPR2
	LEAX	$F8,X
	CMPY	#CPREND
	BNE	CPR1
*"WILLIAMS" CHECK
	LDX	#PCRAM	GET COLOR ZERO ADDRESS
	LDB	LOGO8+1	GET WILLIAMS COLOR NUMBER
	LDA	B,X	GET WILLIAMS COLOR
	COMA		FULL RED PRESENT?
	ANDA	#7
	BNE	WILCK1	NO?, BOGUS
	LDX	#WCURS!.$C35A CONFUSION
	LDD	#WCURS!.$3CA5 MORE CONFUSION
	STU	D,X	TRANSFER CURSER
WILCK1	LDA	#1	SET POWER FLAG
	STA	PWRFLG
	NEWP	CREDS,AMTYPE TURN ON CREDITS
	LDA	#60	DELAY TIMER
	STA	STALT
CPR55	TST	ICREDF	CHECK FOR INCREASE IN CREDITS
	LBNE	LEDRET	YES?, GIVE INSTRUCTIONS
	DEC	STALT	TIME OUT?
	BEQ	CPR56
	NAPP	10,CPR55 NOPE, NOT YET
CPR56	JMP	HALDIS	DISPLAY HALL OF FAME
*
*"DEFENDER" WHOLE WRITING ROUTINE
*
DEF50	LDY	#DEFDSC	DESCRIPTER
	LDD	#$3090	SCREEN ADDRESS
	JSR	CWRIT
	TST	RAMALS	CHECK ONE SIZE
	BNE	DEF51
	TST	RAMALS+RAMSIZ CHECK ANOTHER TO BE SURE
	BNE	DEF51
	NEWP	WILLIR,AMTYPE APPEAR DONE, QUICK RSTORE LOGO
	JMP	SUCIDE
DEF51	NAPP	1,DEF50	SLEEP 1, REFRESH
*
*"DEFENDER" DATA EXPANDER
*
DEFNNN	LDX	#DEFBLK	INITIALIZE SERIAL POINTER
	LDY	#DEFDAT	DATA TABLE START
	CLRA
	STA	PIX	LEFT PIXEL FIRST
	STA	LEN	ZERO LENGTH ACCUMULATOR
DEFX1	LDA	,Y	GET LEFT DATA NIBBLE
	LSRA
	LSRA
	LSRA
	LSRA
	BSR	DEFX2	DECODE
	LDA	,Y+	GET RIGHT DATA NIBBLE
	ANDA	#$F
	BSR	DEFX2	DECODE
	CMPY	#DEFDEN	DONE?
	BNE	DEFX1
*
DEFX2	BITA	#$C	DIRECT OR EXTENDED
	BNE	DEFX3
*EXTENDED
	ADDA	LEN	INCLUDE UPPER BITS
	ASLA		MULT BY 4
	ASLA
	STA	LEN	SAVE LENGTH
	RTS		NEXT NIBBLE
*DIRECT
DEFX3	PSHS	A
	ANDA	#3	EXTRACT LENGTH OF LINE
	ADDA	LEN	INCLUDE EXTENDED BITS
	STA	LEN
	PULS	A
	ANDA	#$C	EXTRACT COLOR
	LSRA
	LSRA
	LDU	#DCOLRS-1 COLOR TABLE START
	LDB	A,U
	STB	DCOLOR
	CMPX	#DEFBLK+24*60 CHECK FOR NEXT LINE
	BLO	DEFX4
	LEAX	1-24*60,X NEXT LINE
DEFX4	LDA	PIX	CHECK RIGHT OR LEFT PIXEL
	BEQ	DEFX5	LEFT FIRST?
	LDA	,X	RIGHT FIRST
	ANDA	#$F0	SAVE OLD LEFT
	STA	,X
	LDA	DCOLOR
	ANDA	#$F	RIGHT COLOR ONLY
	ORA	,X
	STA	,X	SAVE NEW RIGHT PIXEL
	LDA	DCOLOR
	BRA	DEFX7
DEFX5	COM	PIX
	LDA	DCOLOR	MAIN LINE LOOP
DEFX6	STA	,X	SAVE NEW LEFT AND RIGHT
	DEC	LEN	COUNT DOWN LENGTH
	BMI	DEFX8	LINE DONE?
DEFX7	LEAX	24,X
	DEC	LEN	COUNT DOWN LENGTH
	BPL	DEFX6	LINE NOT DONE?
	CLR	PIX	LAST RIGHT
DEFX8	CLR	LEN	ZERO LENGTH ACCUMULATOR
	RTS
*
*CREDITS
*
CREDS	LDB	CREDIT	GET CREDITS
	BEQ	CREDS2	NO CREDITS?, NO DISPLAY
	CMPB	OCRED	CHECK IF COIN ADDED
	BLS	CREDS1
	STB	OCRED	YES?, UPDATE OLD CREDITS
	INC	ICREDF	SET INCREASE CREDIT FLAG
CREDS1	LDU	#CREDV	MESSAGE VECTOR
	LDX	#$28E5	SCREEN ADDRESS
	MLJSR	2,WTEXTB WRITE TO SCREEN
	CLRA		NO HIGH
	LDX	#$48E5	PLACE FOR NUMBERS
	MLJSR	2,WNUMBB WRITE IT
CREDS2	NAPP	16,CREDS SLEEP 16
*
*WILLIAMS LOGO FAST RESTORE
*
WILLIR	LDA	#$FF	FAST RATE
	STA	LGOFLG
	NAPP	2,WILR1	SLEEP 2
WILR1	LDA	#10	BACK TO OLD RATE
	STA	LGOFLG
	JMP	SUCIDE
*
*PLAYER SCORES
*
SCORES	LDA	PLRCNT	GET PLAYER COUNT
SCORS1	BEQ	SCORS2	DONE?
	JSR	SCRTR0	DISPLAY SCORE
	DECA
	BRA	SCORS1	NEXT
SCORS2	RTS
*
*LOGO DATA
*
NULL	EQU	$FF	NUL BYTE
HYPERC	EQU	$FE	HYPER TO NEW SCREEN ADDRESS
QUIT	EQU	$FD	QUIT
LGOTAB	FCB	HYPERC,$74,$40
	FCB	$11,$11,$85,$81,$81,$81,$88,$82
	FCB	$82,$22,$24,$22,$42,$24,$24,$24
	FCB	$44,$24,$44,$49,$44,$94,$41,$88
	FCB	$14,$41,$88,$14,$41,$88,$94,$41
	FCB	$88,$94,$49,$88,$14,$98,$58,$94
	FCB	$98,$18,$94,$46,$66,$62,$42,$42
	FCB	$42,$42,$25,$24,$24,$68,$24,$24
	FCB	$24,$26,$11,$18,$18,$58,$18,$58
	FCB	$81,$44,$98,$81,$44,$98,$81,$44
	FCB	$98,$14,$94,$94,$16,$22,$24,$24
	FCB	$A4,$24,$A4,$24,$24,$24,$24,$24
	FCB	HYPERC,$81,$4A
	FCB	$42,$42,$42,$42,$44,$99,$99,$41
	FCB	$88,$14,$41,$88,$14,$46,$24,$24
	FCB	$24,$24,$24,$24,$A4,$24,$24,$A4
	FCB	$22,$42,$4A,$42,$42,$44,$99,$19
	FCB	$91,$19,$91,$91,$81,$81,$41,$81
	FCB	$49,$46,$42,$42,$42,$42,$42,$42
	FCB	$24,$22,$42,$62,$62,$42,$24,$49
	FCB	$19,$91,$91,$91,$91,$91,$85,$88
	FCB	$14,$94,$14,$24,$24,$24,$24,$24
	FCB	$24,$A4,$24,$24,$41,$81,$81,$18
	FCB	$18,$94,$41,$88,$14,$14,$24,$42
	FCB	$24,$24,$24,$24,$24,$24,$24,$44
	FCB	$98,$18,$18,$18,$58,$89,$44,$18
	FCB	$85,$14,$24,$14,$24,$A4,$24,$24
	FCB	$24,$A4,$24,$28,$24,$44,$18,$19
	FCB	$19,$81,$41,$81,$14,$24,$24,$24
	FCB	$24,$22,$42,$42,$64,$41,$85,$81
	FCB	$81,$18,$19,$41,$89,$44,$42,$22
	FCB	$42,$24,$24,$24,$24,$24,$44,$18
	FCB	$14,$98,$11,$81,$81,$41,$89,$44
	FCB	$42,$22,$42,$24,$24,$24,$24,$24
	FCB	$44,$18,$94,$41,$88,$89,$44,$49
	FCB	$88,$14,$41,$88,$14,$14,$24,$24
	FCB	$24,$26,$62,$66,$26,$24,$18,$91
	FCB	$91,$19,$18,$14,$18,$14,$14,$24
	FCB	$14,$2A,$45,$24,$68,$88,$24,$44
	FCB	$42,$18,$A8,$82,$44,$A8,$22,$20
	FCB	HYPERC,$87,$40
	FCB	$44,$11,$88,$24
	FCB	HYPERC,$9A,$3F
	FCB	$44,$11,$88,$24
	FCB	HYPERC,$C1,$3F
	FCB	$44,$44,$44,$11,$11,$11,$11,$88
	FCB	$88,$88,$22,$22,$22,$20
	FCB	HYPERC,$C3,$45
	FCB	$22,$22,$44,$11,$81,$50
	FCB	QUIT
*
*"DEFENDER" DATA
*
DEFDAT	FCB	$10,$D1,$BD,$29,$C2,$9C,$29,$CB
	FCB	$EA,$C2,$8C,$29,$C2,$81,$0D,$10
	FCB	$C2,$8D,$29,$C2,$9C,$29,$CB,$EA
	FCB	$42,$94,$29,$42,$81,$0C,$3F,$29
	FCB	$C2,$94,$C2,$9C,$29,$C1,$8D,$A4
	FCB	$29,$42,$94,$29,$3F,$3E,$29,$42
	FCB	$A4,$29,$4C,$29,$C1,$8D,$A4,$2A
	FCB	$42,$94,$29,$3E,$3D,$B6,$B4,$A2
	FCB	$4A,$17,$CA,$16,$C1,$9C,$B4,$A7
	FCB	$A4,$B1,$7A,$7A,$3D,$3C,$B6,$B4
	FCB	$B1,$71,$81,$6B,$16,$C1,$AC,$A4
	FCB	$B6,$B4,$A2,$4A,$6B,$3C,$2F,$B6
	FCB	$B4,$29,$62,$85,$C2,$85,$C1,$AC
	FCB	$A4,$B6,$B4,$28,$62,$A2,$F2,$EB
	FCB	$61,$84,$29,$62,$8E,$28,$E2,$A4
	FCB	$B7,$B4,$28,$62,$A2,$E2,$DB,$7B
	FCB	$42,$96,$28,$4E,$28,$E2,$B4,$B6
	FCB	$B4,$29,$62,$92,$E2,$CB,$7B,$52
	FCB	$96,$28,$4E,$28,$EB,$41,$A4,$B7
	FCB	$B4,$28,$62,$92,$E1,$FB,$7B,$5B
	FCB	$24,$B1,$6D,$18,$14,$EB,$51,$94
	FCB	$B7,$B4,$18,$17,$29,$2D,$1E,$B1
	FCB	$4B,$4B,$25,$B1,$6D,$B1,$5E,$B5
	FCB	$1A,$4B,$61,$84,$B2,$4B,$41,$82
	FCB	$C1,$DB,$14,$B5,$18,$17,$18,$16
	FCB	$D1,$81,$4E,$B6,$19,$4B,$61,$84
	FCB	$18,$24,$B4,$18,$1F,$1C,$38,$53
	FCB	$84,$B1,$6E,$2B,$CB,$61,$94,$38
	FCB	$42,$B4,$18,$41,$81,$EF,$39,$43
	FCB	$85,$B1,$6E,$2B,$CB,$71,$84,$38
	FCB	$43,$84,$B6,$18,$1C,$E3,$95,$38
	FCB	$41,$81,$6D,$38,$CB,$C6,$19,$42
	FCB	$B5,$38,$4B,$61,$8F,$D3,$95,$38
	FCB	$5B,$51,$F3,$8C,$BD,$61,$84,$2A
	FCB	$63,$85,$B6,$18,$ED,$38,$53,$94
	FCB	$18,$51,$F3,$8C,$BD,$7B,$42,$91
	FCB	$42,$B5,$18,$7B,$DC,$21,$51,$F3
	FCB	$4C,$7E,$30,$6C,$C2,$14,$2C,$34
	FCB	$C7,$E1,$07,$C1,$35,$CC,$21,$42
	FCB	$C3,$4C,$7F,$10,$6C,$13,$5C,$C1
	FCB	$35,$C1,$52,$C3,$4C,$7F,$15,$C2
	FCB	$7D,$34,$C1,$5C,$17,$CC,$36,$C3
	FCB	$5C,$14,$2D,$34,$C7,$1C,$14,$C2
	FCB	$6E,$34,$D1,$4E,$15,$CC,$36,$C3
	FCB	$5C,$14,$2D,$34,$C7,$1C,$14,$C2
	FCB	$51,$C2,$7D,$14,$F1,$4C
DEFDEN	EQU	*
*
*"DEFENDER" COLOR TABLE
*
DCOLRS	FCB	$22	SHADOW
	FCB	$CC	LETTERS
	FCB	0	BACKGROUND
*
*"COPYRIGHT[C][P] 1980" DATA
*
CPRTAB	FCB	$3E,$41,$41,$22,$00,$3E,$41,$41
	FCB	$3E,$00,$7F,$09,$09,$06,$00,$03
	FCB	$04,$78,$04,$03,$00,$7F,$09,$19
	FCB	$66,$00,$41,$7F,$41,$00,$3E,$41
	FCB	$49,$3A,$00,$7F,$08,$08,$7F,$00
	FCB	$01,$01,$7F,$01,$01,$00,$1C,$22
	FCB	$5D,$63,$55,$22,$1C,$22,$7F,$4B
	FCB	$45,$22,$1C,$00,$00,$00,$42,$7F
	FCB	$40,$00,$26,$49,$49,$3E,$00,$36
	FCB	$49,$49,$36,$00,$3E,$41,$41,$3E
CPREND	EQU	*

TEXTAB	FDB	$4330
	FDB	$1C70
	FDB	$3C70
	FDB	$5F70
	FDB	$1CA8
	FDB	$40A8
	FDB	$5CA8
TENT	EQU	*-TEXTAB
	FDB	SCANV
	FDB	LANDV
	FDB	MUTV
	FDB	BAITV
	FDB	BOMBV
	FDB	SWRMPV
	FDB	SWARMV

YS	EQU	*
ENMYTB	FDB	$6000
	FDB	$6000
	FDB	$6200
	FDB	$9800
	FDB	$9800
	FDB	$9A00
OTABND	EQU	*
OLEN	EQU	*-ENMYTB
PICTS	FDB	LNDP1
	FDB	SCZP1
	FDB	UFOP1
	FDB	TIEP1
	FDB	PRBP1
	FDB	SWPIC1
XS	FDB	$0900
	FDB	$1100
	FDB	$1980
	FDB	$0960
	FDB	$1160
	FDB	$19E0
BLIPS	FDB	$4433
	FDB	$CC33
	FDB	$3333
	FDB	$8888
	FDB	$CCCC
	FDB	$2424
*
*SCANNER
*OFF OLDE BOZOS+PLAYER
SCNR	LDU	#0
	LDB	#8
	LDX	#SETAB
SCNR0	STU	[,X]
	STU	[2,X]
	STU	[4,X]
	STU	[6,X]
	ABX
	CMPX	SETEND
	BLO	SCNR0
*OFF PLAYER +
	LDX	[SETEND]
	BEQ	MT1
	STU	,X
	CLR	2,X
	STU	-$100,X
*OUTPUT TERRAIN
MT1	LDD	BGL	CALC SCANL
	SUBD	#$8000-(150*32)
	STD	XTEMP
	LSRA
	LSRA		GET 6 BITS
	LDU	#MTERR
	LDB	#3
	MUL
	LEAU	D,U	GET ADDR
	LDA	STATUS
	BITA	#2	NO TERRAIN???
	BNE	MTX	NONE
	LDA	#SCANER!>8
	LDY	#STETAB	ERASE TABLE
MTLP	LDX	#0
	STX	[,Y]	OFF OLD
	PULU	B,X
	STD	,Y	SAVE NEW ADDR
	STX	[,Y++]
	INCA
	LDX	#0
	STX	[,Y]
	PULU	B,X
	STD	,Y
	STX	[,Y++]
	INCA
	CMPA	#(SCANER!>8)+64
	BNE	MTLP
*SCANNER BEZEL
MTX	LDX	#SCANH+$4C01
	LDD	#$9090
	STD	,X
	STD	$1D,X
	LDX	#SCANH+$5301
	LDD	#$0909
	STD	,X
	STD	$1D,X
*OUTPUT BOZOS
	LDX	#OPTR
	LDU	#SETAB	ERASE TABLE
	BSR	SCNR3
	LDX	#IPTR
	BSR	SCNR3
	STU	SETEND	END OF ERASE TABLE
*PLAYER BLIP OUTPUT
	LDD	PLAXC
	LSRA
	LSRA
	LSRA
	LSRA
	LSRB
	LSRB
	LSRB
	ADDD	#$4B00+SCANH-1 PLAYER BASE
	STD	,U
	LDX	,U
	LDD	#$9099
	STD	,X
	STA	2,X
	LDA	#$09
	STA	-$FF,X
	RTS
*BLIP SCAN SUBROUTINE
SCNR10	LDD	OX16,X	FIND OFFSET
	SUBD	XTEMP	SUBTRACT SCANNER LEFT
SCNR2	LSRA		SHIFT DOWN TO 6 BITS
	LSRA
	LDB	OY16,X
	LSRB
	LSRB
	LSRB
	ADDD	#SCANER-1
	STD	,U
	LDD	OBJCOL,X STORE BLIP
	STD	[,U++]
SCNR3	LDX	,X	DO THE REST
	BNE	SCNR10
	RTS
*
*MINI TERRAIN DATA TABLE
*
MTERR	FCB	$25,$70,$07,$26,$77,$00,$26,$07,$70,$24,$07,$70
	FCB	$23,$07,$70,$23,$70,$07,$24,$07,$70,$25,$70,$07
	FCB	$26,$77,$00,$25,$07,$70,$24,$07,$70,$23,$07,$70
	FCB	$21,$07,$70,$22,$70,$07,$24,$77,$00,$24,$70,$07
	FCB	$26,$77,$00,$26,$77,$00,$25,$77,$00,$25,$70,$07
	FCB	$26,$77,$00,$24,$07,$70,$23,$70,$07,$25,$77,$00
	FCB	$26,$70,$07,$26,$77,$00,$26,$77,$00,$25,$07,$70
	FCB	$23,$07,$70,$22,$07,$70,$21,$77,$00,$21,$70,$07
	FCB	$23,$70,$07,$25,$70,$07,$25,$07,$70,$25,$77,$00
	FCB	$25,$77,$00,$24,$77,$00,$22,$07,$70,$20,$07,$70
	FCB	$1E,$07,$70,$1C,$07,$70,$1D,$70,$07,$1F,$70,$07
	FCB	$21,$70,$07,$22,$70,$07,$24,$70,$07,$26,$70,$07
	FCB	$26,$77,$00,$26,$77,$00,$26,$77,$00,$26,$77,$00
	FCB	$26,$77,$00,$25,$77,$00,$25,$70,$07,$26,$77,$00
	FCB	$24,$07,$70,$23,$77,$00,$24,$77,$00,$22,$07,$70
	FCB	$23,$70,$07,$22,$07,$70,$21,$70,$07,$23,$70,$07
	FCB	$25,$70,$07,$26,$77,$00,$26,$07,$70,$24,$07,$70
	FCB	$23,$07,$70,$23,$70,$07,$24,$07,$70,$25,$70,$07
	FCB	$26,$77,$00,$25,$07,$70,$24,$07,$70,$23,$07,$70
	FCB	$21,$07,$70,$22,$70,$07,$24,$77,$00,$24,$70,$07
	FCB	$26,$77,$00,$26,$77,$00,$25,$77,$00,$25,$70,$07
	FCB	$26,$77,$00,$24,$07,$70,$23,$70,$07,$25,$77,$00
	FCB	$26,$70,$07,$26,$77,$00,$26,$77,$00,$25,$07,$70
	FCB	$23,$07,$70,$22,$07,$70,$21,$77,$00,$21,$70,$07
	FCB	$23,$70,$07,$25,$70,$07,$25,$07,$70,$25,$77,$00
	FCB	$25,$77,$00,$24,$77,$00,$22,$07,$70,$20,$07,$70
	FCB	$1E,$07,$70,$1C,$07,$70,$1D,$70,$07,$1F,$70,$07
	FCB	$21,$70,$07,$22,$70,$07,$24,$70,$07,$26,$70,$07
	FCB	$26,$77,$00,$26,$77,$00,$26,$77,$00,$26,$77,$00
	FCB	$26,$77,$00,$25,$77,$00,$25,$70,$07,$26,$77,$00
	FCB	$24,$07,$70,$23,$77,$00,$24,$77,$00,$22,$07,$70
	FCB	$23,$70,$07,$22,$07,$70,$21,$70,$07,$23,$70,$07
	ORG	$CF00
	FCB	$C3	CHECKBYTE
	END
